{"version":3,"sources":["components/Logo/logo.svg","entities/Account.ts","actions/settings.js","entities/Currency.ts","selectors/settings.js","components/CollapsibleSection/index.js","entities/EntityMap.js","entities/Transaction.ts","util/sortByName.js","selectors/entities/accounts.js","components/Amount.js","containers/Dashboard/NetWorth.js","components/Account/List/AccountItem.js","components/Account/List/Group.js","components/Account/List/index.js","containers/Dashboard/Accounts.js","util/timezone.ts","components/types.js","components/Transaction/Form/Header.js","components/Transaction/Form/Account.js","components/Transaction/Form/index.js","selectors/entities/tags.js","actions/entities/transactions.js","actions/entities/tags.js","actions/ui/form/transaction.js","containers/Transactions/Form.js","components/Transaction/List/TransactionItem.js","components/Transaction/List/ModalForm.js","components/Transaction/List/index.js","selectors/ui/transaction/filter.js","selectors/entities/transactions.js","selectors/ui/form/transaction.js","containers/Dashboard/RecentTransactions.js","actions/entities/accounts.js","containers/Dashboard/index.js","containers/Transactions/List.js","components/Transaction/Filter/Calendar.js","entities/Transaction/DateFilterRange.ts","components/Transaction/Filter/Filters.js","components/Transaction/Filter/AppliedFilters.js","components/Transaction/Filter/index.js","actions/ui/transaction/filter.js","containers/Transactions/Filter.js","components/Transaction/List/Pager.js","containers/Transactions/Pager.js","components/Transaction/List/Footer.js","containers/Transactions/Footer.js","containers/Transactions/index.js","actions/ui/form/account.js","selectors/ui/form/account.js","components/Account/ModalForm/DeleteStrategy.js","components/Account/ModalForm/index.js","containers/Accounts/List.js","components/Account/Form/BalanceTable.js","components/Account/Form/index.js","containers/Accounts/Form.js","containers/Accounts/index.js","actions/ui/report.js","entities/Report/ExpenseIncomeData.ts","entities/Report.ts","entities/Report/NetWorthData.ts","entities/Report/ExpenseTagsData.ts","components/Report/Kind/ExpenseIncome.js","components/Report/Kind/ExpenseTags.js","components/Report/Kind/NetWorth.js","components/Report/index.js","components/Report/Navigation.js","selectors/ui/report.js","containers/Reports/Navigation.js","components/Report/Filter.js","containers/Reports/Filter.js","containers/Reports/index.js","components/Settings/Currency/Input.js","containers/Settings/Currency/Input.js","components/Settings/Currency/ExchangeRateGrid.js","components/Settings/Currency/ExchangeRateTable.js","components/Settings/Currency/ExchangeRate.js","containers/Settings/Currency/ExchangeRate.js","util/PrettyBytes.js","components/DataImport/index.js","actions/ui/dataImport.js","selectors/ui/dataImport.js","containers/Settings/DataImport.js","features/user/state/ui/SignOut.action.ts","features/user/state/User.selector.ts","containers/Settings/User.js","router/routes.js","containers/WorkInProgress.js","containers/Settings/index.js","features/user/components/SignIn/SignIn.tsx","features/user/state/ui/SignIn.action.ts","features/user/containers/SignIn/SignIn.ts","containers/InitialSetup/index.js","containers/SidebarMenu.js","components/Logo/index.js","actions/ui/sidebar.js","actions/ui/sync.js","components/Header/index.js","containers/DemoNotice.js","containers/SyncWarning.js","actions/ui/windowResize.js","actions/app.js","containers/App.js","components/Sentry/ErrorBoundary.js","containers/Root.js","registerServiceWorker.js","reducers/entities/accounts.js","entities/constants.js","reducers/entities/tags.js","reducers/entities/transactions/filter.js","reducers/entities/transactions/recent.js","reducers/entities/transactions/index.js","reducers/entities/index.js","reducers/ui/form/account.js","reducers/ui/form/transaction.js","reducers/ui/form/index.js","reducers/ui/report/index.js","reducers/ui/transaction/filter.js","reducers/ui/transaction/index.js","reducers/ui/dataImport.js","reducers/ui/isMobile.js","reducers/ui/isSidebarOpen.js","reducers/ui/settings.js","reducers/ui/sync.js","reducers/ui/index.js","reducers/settings.js","features/user/state/User.action.ts","features/user/state/ui/SignIn.reducer.ts","util/auth.js","features/user/state/ui/SignIn.selector.ts","entities/Transaction/AccountMutations.ts","util/storage/pouchdb.js","util/storage/tags.js","util/SetDifference.js","sagas/tags.js","util/storage/transactions.js","sagas/transactions.js","util/storage/accounts.js","sagas/accounts.js","sagas/sync.js","util/currency.js","util/storage/settings.js","sagas/settings.js","features/user/state/User.saga.ts","features/user/state/ui/SignIn.saga.ts","features/user/state/ui/SignOut.saga.ts","features/user/state/ui/index.ts","features/user/state/ui/SignOut.reducer.ts","features/user/state/User.reducer.ts","reducers/index.ts","sagas/bootstrap.js","util/CsvReader.js","sagas/dataImport.js","sagas/report.js","features/user/state/index.ts","sagas/index.ts","store/configureStore.js","index.js"],"names":["module","exports","__webpack_require__","p","AccountGroupT","DeleteStrategyT","createActions","loadSettingsSuccess","changeSettingsCurrency","updateExchangeRate","updateExchangeRateSuccess","updateExchangeRateFailure","toggleSectionCollapse","completeSetup","CURRENCY","AED","name","symbol","exp","flag","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","INR","IQD","IRR","ISK","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SLL","SOS","SRD","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","YER","ZAR","ZMW","ZWD","XAU","Currency","defaultBase","options","Object","keys","map","code","key","value","text","concat","minAmount","Number","numberToCents","Math","round","parseFloat","centsToNumber","centsToString","format","arguments","length","undefined","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","toString","convert","rate","from","to","pow","getExchangeRate","state","settings","exchangeRate","getBaseCurrency","currency","base","getBaseCurrencySymbol","getSecondaryCurrency","secondary","getCollapsedSections","collapsedSections","connect","ownProps","objectSpread","collapsed","toggle","_ref","label","LabelComponent","children","react_default","a","createElement","className","includes","onClick","Icon","GroupToTextMap","_GroupToTextMap","defineProperty","Cash","Bank","Deposit","Credit","Asset","defaultGroup","defaultDeleteStrategy","Archive","getGroupName","formTostate","_ref3","id","balance","debt","group","currencies","on_dashboard","archived","Date","now","reduce","acc","stateToForm","account","storageToState","_ref4","_id","stateToStorage","_ref5","TransationKindT","ExpenseTypeT","EntityMap","fromArray","entities","keyPropName","merge","byKey","source","entity","toConsumableArray","Set","filter","set","remove","originalKey","get","fallback","fn","limit","offset","slice","push","apply","sortByName","b","getAccountsMap","accounts","getAccountByName","createSelector","getAccountsList","find","sort","getVisibleAccountsList","getDashboardAccountsList","getAccountsNameMap","getAccountsCurrencyMap","getAccountsCurrencyList","groupAccounts","grouped","type","total","netTotal","getBaseTotal","getBaseTotalDebt","_i","_Object$keys","getVisibleGroupedAccounts","getDashboardGroupedAccounts","getAccountsAsOptions","groups","_i2","_Object$keys2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","description","err","return","getNetWorth","netWorth","floor","Amount","_ref$showColor","showColor","baseCurrency","components_Amount","AccountItem","handleEditClick","_this","props","openAccountInModal","_this2","this","Link","Fragment","Button","basic","circular","icon","React","Component","Group","isCollapsed","toggleGroupCollapse","List_AccountItem","AccountsWidget","List_Group","collapsedGroups","AccountsList","getTimezoneOffset","toUtcTimestamp","date","getTime","toLocalTimestamp","Expense","Transfer","Income","TransactionKindToText","_TransactionKindToTex","defaultKind","recentListLimit","getKindLabel","kind","formToState","form","tags","amount","linkedAmount","linkedCurrency","note","accountId","linkedAccountId","Error","dateRegexMatch","match","parseInt","_ref2","PropTypes","shape","string","Header","withTransfer","activeKind","changeKind","kinds","Menu","attached","widths","Item","color","active","Account","Form","Field","width","Dropdown","selection","accountOptions","onChange","onAccountChange","Input_Input","required","min","step","onAmountChange","labelPosition","currencyOptions","onCurrencyChange","NoAccounts","TransactionForm","searchQuery","onSubmit","event","preventDefault","saveTransaction","handler","_","accountCurrency","onTagAdd","addTag","tag","onTagSearchChange","setState","onTagClose","getCurrencyOptions","getGridClassName","Form_Header","Segment","Form_Account","changeAccount","changeAmount","changeCurrency","changeLinkedAccount","changeLinkedAmount","changeLinkedCurrency","multiple","search","allowAdditions","closeOnChange","placeholder","tagsOptions","changeTags","onAddItem","onClose","onSearchChange","changeNote","fluid","changeDate","primary","disabled","Form_NoAccounts","getTagOptions","ui","transaction","getAllTagsOptions","loadFilterTransactions","loadFilterTransactionsSuccess","loadRecentTransactions","loadRecentTransactionsSuccess","saveTransactionSuccess","removeTransaction","removeTransactionSuccess","loadTags","loadExpenseTagsSuccess","loadIncomeTagsSuccess","fillInTransactionForm","resetTransactionForm","openTransactionInModal","TransactionItem","_tags","accountName","renderArrow","linkedAccountName","Label","content","renderLinkedAmount","_this$props$transacti","_this$props$transacti2","ModalForm","Modal","closeIcon","size","open","isOpen","elements_Header_Header","isEdit","Content","EditForm","Actions","negative","currentTransactionId","TransactionList","renderTransaction","List_TransactionItem","Dimmer","inverted","isLoading","Loader","inline","transactions","List_ModalForm","isModalOpen","getDateLabel","dateStart","dateEnd","getFilters","start","end","applied","getPage","page","getVisiblePages","ceil","totalRows","perPage","isMobile","current","last","pages","max","windowRight","filterTransactionsSelector","getRecentTransactions","recent","joinAccount","getFilterTransactions","linked","getFilterTotal","tx","getForm","getDefaultAccountId","getDefaultCurrency","getDefaultLinkedAccountId","defaultAccountId","getDefaultLinkedCurrency","getDefaultState","loadAccounts","loadAccountsSuccess","saveAccount","saveAccountFailure","saveAccountSuccess","updateAccount","removeAccount","removeAccountRequest","removeAccountStart","removeAccountItemProcessed","removeAccountFailure","removeAccountSuccess","Dashboard","Grid","Row","Column","computer","mobile","src_components_CollapsibleSection","NetWorth","Dashboard_Accounts","Transactions_Form","RecentTransactions","currentYear","getFullYear","fromMonth","toMonth","YearMonthForm","localeUtils","months","getMonths","years","i","handleChange","e","_e$target$form","target","year","month","getMonth","DateFilterRangeT","Calendar","handleDayClick","day","range","DateUtils","addDayToRange","handleYearMonthChange","handleResetClick","handleApplyClick","_this$state","changeFilterDate","setHours","toggleFilterCalendar","_this$state2","isCalendarOpen","DayPicker_default","fixedWeeks","enableOutsideDays","numberOfMonths","selectedDays","captionElement","onDayClick","positive","Filters","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAccountChange","handleTagsChange","applyFilters","toggleFilterModal","appliedAccounts","appliedTags","isFilterModalOpen","AppliedFilters","removeAppliedAccount","removeAppliedTag","t","accountNameMap","onRemove","daysFromToday","days","subDays","startOfToday","lastWeek","lastMonth","DateFilterRangeMap","_DateFilterRangeMap","today","endOfToday","yesterday","startOfYesterday","endOfYesterday","thisMonth","startOfMonth","custom","defaultDateFilterRange","defaultStart","defaultEnd","getDateFilterRangeEnd","Filter","entries","slicedToArray","lastValue","handleDateRange","button","defaultValue","dateRangeLabel","labeled","Filter_Calendar","Filter_Filters","Filter_AppliedFilters","changeFilterPage","Pager","handlePageChange","nextPage","handlePrevClick","handleNextClick","lastPage","pagination","as","Footer","income","expense","Table","fixed","unstackable","Body","Cell","textAlign","Transactions","params","Transactions_Filter","Transactions_List","Transactions_Pager","Transactions_Footer","fillInAccountForm","resetAccountForm","changeName","changeGroup","changeBalance","changeDebt","toggleCurrency","toggleOnDashboard","getModal","isDeleteRequest","isDeleteRunning","itemsToProcess","itemsProcessed","DeleteStrategy","strategy","onStrategyChange","moveTo","onProceed","getMoveTo","hasMultipleAccounts","style","marginTop","stratgies","Cleanup","Move","getDeleteStartegyOptions","Radio","checked","modal","Progress","reset","ModalForm_DeleteStrategy","renderModalActions","BalanceTable","handleCurrencyChange","handleBalanceChange","handleDebtChange","updateCurrencyList","setInitialCurrencyCheckbox","nextProps","_this2$props$form","marginBottom","Checkbox","AccountForm","handleNameChange","handleGroupChange","handleSubmit","Input","Select","Form_BalanceTable","paddingTop","Accounts","Accounts_List","Account_ModalForm","option","changeReportKind","changeReportTimespan","changeReportAccounts","moveReportDateBackwards","moveReportDateForwards","loadReport","loadReportSuccess","loadReportFailure","ReportKindT","ReportTimespanT","Yearly","Monthly","ExpenseIncome","defaultTimespan","defaultDate","timespan","dateRange","moveDateBackwards","subYears","subMonths","moveDateForwards","addYears","addMonths","DataLoaderMap","_DataLoaderMap","report","labels","setMonth","getDaysInMonth","padStart","data","Array","fill","period","abs","series","ExpenseTags","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","tagAmount","sorted","values","netWorthEnd","lastPeriod","netWorthStart","loadReportData","_len","rest","_key","startFn","startOfYear","endFn","endOfYear","endOfMonth","tomorrow","setDate","getDate","axisY","labelInterpolationFnc","abbreviate","plugins","Chartist","tooltip","class","anchorToPoint","react_chartist_dist_default","axisX","reverseData","horizontalBars","height","showArea","low","Report","renderReportByKind","Kind_ExpenseIncome","Kind_NetWorth","Kind_ExpenseTags","Navigation","handleKindChange","handleTimespanChange","kindOptions","timespanLabel","timespanOptions","getReport","getTimespanLabel","startDate","handleAccountsChange","Reports","Reports_Navigation","src_components_Report","Reports_Filter","handleBaseChange","handleSecondaryChange","updateSecondaryOptions","secondaryOptions","renderLabel","item","ExchangeRateGrid","celled","definition","HeaderCell","other","ExchangeRateTable","_this$props","toFixed","ExchangeRate","Responsive","minWidth","Currency_ExchangeRateGrid","maxWidth","Currency_ExchangeRateTable","isExchangeLoading","UNITS","DataImport","handleFileChange","openImportFile","files","handleOpenFile","fileInput","click","error","Message","header","isFileSelected","accept","ref","input","filename","isFinite","TypeError","neg","exponent","log10","toPrecision","prettyBytes","filesize","isProcessing","discardImportFile","Or","startDataImport","indicating","autoSuccess","linesToProcess","linesProcessed","importFileReadSuccess","importLineProcessed","importFailure","getImportFile","dataImport","file","signOut","createAction","signOutSuccess","signOutFailure","resolve","isDemoUser","user","isSignedIn","User","isSignOutComplete","Redirect","Popup","on","trigger","signOutButtonLabel","signOutButtonIcon","floated","loading","isSignOutRunning","isDemo","isAuthenticated","signOutState","router_routes","path","exact","component","link","Settings_Currency_Input","Settings_Currency_ExchangeRate","Settings_DataImport","Settings_User","Auth","renderSendCodeForm","sendCode","iconPosition","email","changeEmail","sendCodeStatus","action","renderVerifyCodeForm","verifyCode","changeCode","verifyCodeStatus","location","hash","finishAuth","Divider","sendCodeSuccess","sendCodeFailure","verifyCodeSuccess","verifyCodeFailure","signIn","SignIn","InitialSetup","Accounts_Form","margin","SidebarMenu","toggleSidebar","vertical","routes","route","Route","Logo","src","logo","alt","dismissSyncWarning","setPendingChangesFlag","sync","syncRequest","syncSuccess","syncFailure","isSyncRunning","isRunning","hasPendingChanges","src_components_Logo","cursor","DemoNotice","isVisible","href","SyncWarning","warning","onDismiss","isWarningVisible","windowResize","bootstrap","App","renderNavigationRoutes","window","pathname","endsWith","isSidebarOpen","zIndex","containers_SidebarMenu","flatten","flatRoutes","forEach","render","src_components_Header","containers_DemoNotice","containers_SyncWarning","addEventListener","throttle","isLoaded","Router","history","Switch","isSetupComplete","ErrorBoundary","errorInfo","console","log","Sentry","scope","setExtra","Root","store","Sentry_ErrorBoundary","es","containers_App","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","initialState","handleActions","_handleActions","payload","combineActions","getType","Fixed","Discretionary","Variable_Non_Discretionary","DEFAULT_EXPENSE_TAGS","_DEFAULT_EXPENSE_TAGS","_initialState","defaultTags","tags_handleActions","_action$payload","filter_handleActions","recent_handleActions","combineReducers","completed","Infinity","account_handleActions","isChecked","_ref6","has","pick","_ref7","_ref8","transaction_handleActions","_ref9","_ref10","_ref11","_ref12","report_handleActions","netWorthStack","transaction_filter_handleActions","dataImport_handleActions","message","matchMedia","matches","handleAction","settings_handleActions","sync_handleActions","reducers_settings_handleActions","section","setDemoUser","signInSuccess","auth0","WebAuth","domain","process","clientID","redirectUri","responseType","auth","Promise","reject","passwordlessStart","connection","send","result","verificationCode","passwordlessLogin","parseHash","authResult","accessToken","getUserInfo","client","userInfo","couchDB","getSignInEmail","getSignInCode","getAccountsMutations","prev","createTransaction","mutations","instancePool","instance","PouchDB","auto_compaction","remoteInstance","instanceName","JSON","parse","localStorage","getItem","_userInfo$couchDB","username","password","skipSetup","destroyInstance","destroy","settingsDB","accountsDB","transactionsDB","tagsDB","remoteSettingsDB","remoteAccountsDB","remoteTransactionsDB","remoteTagsDB","destroySettingsDB","destroyAccountsDB","destroyTransactionsDB","destroyTagsDB","storage_tags","load","allDocs","include_docs","start_key","end_key","response","rows","row","doc","split","usage","docs","updateUsage","delta","put","status","_callee","readOnly","hasChanges","_args","regenerator_default","wrap","_context","abrupt","replicate","sent","docs_written","stop","difference","left","right","diff","add","loadTagsSaga","updateTagsUsage","expenseTags","incomeTags","TagsStorage","_marked","prevTags","nextTags","newTag","oldTag","_context2","t0","finish","t1","_marked2","sagas_tags","takeLatest","storage_transactions","loadRecent","descending","startkey","endkey","loadFiltered","filters","isArray","filterByAccount","intersection","filterByTags","save","_deleted","_callee2","_args2","batch_size","asyncToGenerator","mark","update","all","processIncomingTransaction","_x2","_callee3","_context3","startsWith","substr","resetTransactionFormSaga","loadFilterTransactionsSaga","loadRecentTransactionsSaga","removeTransactionSaga","saveTransactionSaga","updateAccountsBalance","initialData","select","transactions_marked","TransactionsStorage","transactions_marked2","_marked3","_context4","_marked4","_context5","_marked5","mutation","_context6","updateAccountBalanceSaga","_marked6","sagas_transactions","storage_accounts","loadAll","archive","mutateBalance","mutateAccountBalance","rev","updateLastSyncedBalance","conflicts","resolveConflicts","setItem","stringify","_callee4","lastSyncedBalance","conflictedBalances","_conflicts","resolveBalance","_x3","lastSynced","conflicted","loadAccountsSaga","saveAccountSaga","removeAccountSaga","deleteStrategyArchive","deleteStrategyCleanup","deleteStrategyMove","AccountsStorage","accounts_marked","accounts_marked2","accounts_marked3","_deleteStrategies","accounts_marked4","accounts_marked5","index","accounts_marked6","_context7","_marked7","sagas_accounts","syncSaga","setPendingChangesFlagSaga","sync_marked","sync_marked2","sagas_sync","fetchExchangeRates","pairs","fetch","join","body","json","rates","substring","storage_settings","local","defaultLocalSettings","mergeLocalWithSyncedSettings","saveLocal","defaultSettings","remote","syncSettings","synced","union","t2","t3","isEqual","t4","loadSetting","updateCurrencySaga","completeSetupSaga","saveCollapsedSectionsSaga","SettingsStorage","settings_marked","used","settings_marked2","settings_marked3","settings_marked4","sagas_settings","isUserLoggedIn","User_saga_marked","User_saga_marked2","sendCodeSaga","verifyCodeSaga","finishAuthSaga","SignIn_saga_marked","SignIn_saga_marked2","SignIn_saga_marked3","SignIn_saga","signOutSaga","SignOut_saga_marked","SignOut_saga","UserUiReducer","actions","UserUiSaga","SignInSaga","SignOutSaga","bootstrapSaga","bootstrap_marked","sagas_bootstrap","CsvReader","reader","FileReader","onerror","onload","SEPARATOR","COLUMN","line","getKind","getAccount","getAmount","getTags","NOTE","nextRow","linkedAccount","readAsText","DATE","ACCOUNT","TAGS","AMOUNT","TRANSFER","replace","trim","accountCurrencies","reverse","startDataImportSaga","updateCurrencySettings","mapAccountsId","createNewAccount","accountIdByName","lineNr","dataImport_marked","dataImport_marked2","idByName","dataImport_marked3","dataImport_marked4","sagas_dataImport","loadReportSaga","refreshReportSaga","report_marked","report_marked2","sagas_report","UserSaga","rootSaga","sagas_marked","sagaMiddleware","createSagaMiddleware","enhancer","composeWithDevTools","applyMiddleware","dsn","createStore","rootReducer","run","configureStore","createBrowserHistory","ReactDOM","containers_Root","document","getElementById","URL","origin","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d2d76eef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5419e46c.svg\";","import Currency from 'entities/Currency';\r\n\r\ntype BalanceAsCentsT = {\r\n  [currency: string]: number;\r\n};\r\ntype DebtAsCentsT = {\r\n  [currency: string]: number;\r\n};\r\n\r\ntype BalanceAsInputStringT = {\r\n  [currency: string]: string;\r\n};\r\ntype DebtAsInputStringT = {\r\n  [currency: string]: string;\r\n};\r\n\r\ninterface AccountBaseT {\r\n  group: AccountGroupT;\r\n  name: string;\r\n  currencies: string[];\r\n  on_dashboard: boolean;\r\n  archived?: boolean;\r\n}\r\n\r\nexport interface AccountStateT extends AccountBaseT {\r\n  id: string;\r\n  balance: BalanceAsCentsT;\r\n  debt: DebtAsCentsT;\r\n}\r\n\r\nexport interface AccountStorageT extends AccountBaseT {\r\n  _id: string;\r\n  _rev?: string;\r\n  _conflicts?: string[];\r\n  balance: BalanceAsCentsT;\r\n  debt: DebtAsCentsT;\r\n}\r\n\r\nexport interface AccountFormT extends AccountBaseT {\r\n  id?: string;\r\n  balance: BalanceAsInputStringT;\r\n  debt: DebtAsInputStringT;\r\n  completed?: boolean;\r\n  isModalOpen?: boolean;\r\n  isDeleteRequest?: boolean;\r\n  isDeleteRunning?: boolean;\r\n  itemsToProcess?: number;\r\n  itemsProcessed?: number;\r\n}\r\n\r\nexport enum AccountGroupT {\r\n  Cash = 'cash',\r\n  Bank = 'bank',\r\n  Deposit = 'deposit',\r\n  Credit = 'credit',\r\n  Asset = 'asset'\r\n}\r\n\r\nexport enum DeleteStrategyT {\r\n  Archive,\r\n  Cleanup,\r\n  Move\r\n}\r\n\r\nconst GroupToTextMap: { [code in AccountGroupT]?: string } = {\r\n  [AccountGroupT.Cash]: 'Cash',\r\n  [AccountGroupT.Bank]: 'Bank Account',\r\n  [AccountGroupT.Deposit]: 'Deposit',\r\n  [AccountGroupT.Credit]: 'Credit',\r\n  [AccountGroupT.Asset]: 'Asset'\r\n};\r\n\r\nexport const defaultGroup = AccountGroupT.Cash;\r\nexport const defaultDeleteStrategy = DeleteStrategyT.Archive;\r\n\r\nexport function getGroupName(code: AccountGroupT) {\r\n  return GroupToTextMap[code];\r\n}\r\nexport function getAccountGroupOptions() {\r\n  return Object.entries(GroupToTextMap).map(([code, text]) => ({\r\n    key: code,\r\n    value: code,\r\n    text\r\n  }));\r\n}\r\n\r\nexport function getDeleteStartegyOptions(hasMultipleAccounts = false) {\r\n  const stratgies = [\r\n    {\r\n      key: DeleteStrategyT.Archive,\r\n      value: DeleteStrategyT.Archive,\r\n      text: 'Archive account, keep transactions as is'\r\n    },\r\n    {\r\n      key: DeleteStrategyT.Cleanup,\r\n      value: DeleteStrategyT.Cleanup,\r\n      text: 'Delete transactions with account'\r\n    }\r\n  ];\r\n  if (hasMultipleAccounts) {\r\n    stratgies.push({\r\n      key: DeleteStrategyT.Move,\r\n      value: DeleteStrategyT.Move,\r\n      text: 'Move transactions to another account'\r\n    });\r\n  }\r\n\r\n  return stratgies;\r\n}\r\n\r\nexport function formTostate({\r\n  id,\r\n  balance,\r\n  debt,\r\n  name,\r\n  group,\r\n  currencies,\r\n  on_dashboard,\r\n  archived\r\n}: AccountFormT): AccountStateT {\r\n  return {\r\n    id: id || `A${Date.now()}`,\r\n    balance: Object.keys(balance).reduce(\r\n      (acc: BalanceAsCentsT, code: string) => {\r\n        acc[code] = Currency.numberToCents(\r\n          balance[code] !== '' ? balance[code] : '0',\r\n          code\r\n        );\r\n        return acc;\r\n      },\r\n      {}\r\n    ),\r\n    debt: Object.keys(debt).reduce(\r\n      (acc: DebtAsCentsT, code: string) => {\r\n        acc[code] = Currency.numberToCents(\r\n          debt[code] !== '' ? debt[code] : '0',\r\n          code\r\n        );\r\n        return acc;\r\n      },\r\n      {}\r\n    ),\r\n    name,\r\n    group,\r\n    currencies,\r\n    on_dashboard,\r\n    archived\r\n  };\r\n}\r\n\r\nexport function stateToForm(account: AccountStateT): AccountFormT {\r\n  return {\r\n    ...account,\r\n    balance: Object.keys(account.balance).reduce(\r\n      (acc: BalanceAsInputStringT, code: string) => {\r\n        acc[code] = Currency.centsToString(account.balance[code], code, false);\r\n        return acc;\r\n      },\r\n      {}\r\n    ),\r\n    debt: Object.keys(account.debt).reduce(\r\n      (acc: BalanceAsInputStringT, code: string) => {\r\n        acc[code] = Currency.centsToString(account.debt[code], code, false);\r\n        return acc;\r\n      },\r\n      {}\r\n    )\r\n  };\r\n}\r\n\r\nexport function storageToState({\r\n  _id,\r\n  name,\r\n  group,\r\n  balance,\r\n  debt,\r\n  currencies,\r\n  on_dashboard,\r\n  archived\r\n}: AccountStorageT): AccountStateT {\r\n  return {\r\n    id: _id,\r\n    name,\r\n    group,\r\n    balance,\r\n    debt,\r\n    currencies,\r\n    on_dashboard,\r\n    archived\r\n  };\r\n}\r\n\r\nexport function stateToStorage({\r\n  name,\r\n  group,\r\n  balance,\r\n  debt,\r\n  currencies,\r\n  on_dashboard,\r\n  archived\r\n}: AccountStateT) {\r\n  return { name, group, balance, debt, currencies, on_dashboard, archived };\r\n}\r\n\r\nexport function mutateBalance(\r\n  account: AccountStorageT,\r\n  currency: string,\r\n  amount: number\r\n): AccountStorageT {\r\n  return {\r\n    ...account,\r\n    currencies: [...new Set([...account.currencies, currency])],\r\n    balance: {\r\n      ...account.balance,\r\n      [currency]: parseInt(`${account.balance[currency] || 0}`, 10) + amount\r\n    },\r\n    debt: {\r\n      ...account.debt,\r\n      [currency]: parseInt(`${account.debt[currency] || 0}`, 10) + amount\r\n    }\r\n  };\r\n}\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  loadSettingsSuccess,\r\n  changeSettingsCurrency,\r\n  updateExchangeRate,\r\n  updateExchangeRateSuccess,\r\n  updateExchangeRateFailure,\r\n  toggleSectionCollapse,\r\n  completeSetup\r\n} = createActions(\r\n  'LOAD_SETTINGS_SUCCESS',\r\n  'CHANGE_SETTINGS_CURRENCY',\r\n  'UPDATE_EXCHANGE_RATE',\r\n  'UPDATE_EXCHANGE_RATE_SUCCESS',\r\n  'UPDATE_EXCHANGE_RATE_FAILURE',\r\n  'COMPLETE_SETUP',\r\n  'TOGGLE_SECTION_COLLAPSE'\r\n);\r\n","type CurrencyT = {\r\n  name: string;\r\n  symbol: string;\r\n  exp: number;\r\n  flag?: string;\r\n};\r\n\r\ntype AvailableCurrencyT = {\r\n  [code: string]: CurrencyT;\r\n};\r\n\r\nconst CURRENCY: AvailableCurrencyT = {\r\n  AED: { name: 'Emirati Dirham', symbol: '.د.ب', exp: 2, flag: 'ae' },\r\n  AFN: { name: 'Afghan Afghani', symbol: '؋', exp: 2, flag: 'af' },\r\n  ALL: { name: 'Albanian lek', symbol: 'lek', exp: 2, flag: 'al' },\r\n  AMD: { name: 'Armenian dram', symbol: 'AMD', exp: 2, flag: 'am' },\r\n  ANG: { name: 'Dutch Guilder', symbol: 'ƒ', exp: 2, flag: 'an' },\r\n  AOA: { name: 'Angolan Kwanza', symbol: 'Kz', exp: 2, flag: 'ao' },\r\n  ARS: { name: 'Argentine peso', symbol: '$', exp: 2, flag: 'ar' },\r\n  AUD: { name: 'Australian Dollar', symbol: '$', exp: 2, flag: 'au' },\r\n  AWG: { name: 'Arubin florin', symbol: 'ƒ', exp: 2, flag: 'aw' },\r\n  AZN: { name: 'Azerbaijani manat', symbol: 'ман', exp: 2, flag: 'az' },\r\n  BAM: { name: 'Bosnian Convertible Marka', symbol: 'KM', exp: 2, flag: 'ba' },\r\n  BBD: { name: 'Barbadian dollar', symbol: '$', exp: 2, flag: 'bb' },\r\n  BDT: { name: 'Bangladeshi Taka', symbol: 'Tk', exp: 2, flag: 'bd' },\r\n  BGN: { name: 'Bulgarian lev', symbol: 'лв', exp: 2, flag: 'bg' },\r\n  BHD: { name: 'Bahraini Dinar', symbol: '.د.ب or BD', exp: 3, flag: 'bh' },\r\n  BIF: { name: 'Burundian Franc', symbol: 'FBu', exp: 0, flag: 'bi' },\r\n  BMD: { name: 'Bermudian dollar', symbol: '$', exp: 2, flag: 'bm' },\r\n  BND: { name: 'Bruneian Dollar', symbol: '$', exp: 2, flag: 'bn' },\r\n  BOB: { name: 'Bolivian Boliviano', symbol: '$b', exp: 2, flag: 'bo' },\r\n  BRL: { name: 'Brazilian real', symbol: 'R$', exp: 2, flag: 'br' },\r\n  BSD: { name: 'Bahamian dollar', symbol: 'B$', exp: 2, flag: 'bs' },\r\n  BTN: { name: 'Bhutanese Ngultrum', symbol: 'Nu.', exp: 2, flag: 'bt' },\r\n  BWP: { name: 'Botswana Pula', symbol: 'P', exp: 2, flag: 'bw' },\r\n  BYR: { name: 'Belarusian ruble', symbol: 'р', exp: 2, flag: 'by' },\r\n  BZD: { name: 'Belize dollar', symbol: 'BZ$', exp: 2, flag: 'bz' },\r\n  CAD: { name: 'Canadian Dollar', symbol: '$', exp: 2, flag: 'ca' },\r\n  CHF: { name: 'Swiss Franc', symbol: 'CHF', exp: 2, flag: 'ch' },\r\n  CLP: { name: 'Chilean Peso', symbol: '$', exp: 0, flag: 'cl' },\r\n  CNY: { name: 'Yuan or chinese renminbi', symbol: '¥', exp: 2, flag: 'cn' },\r\n  COP: { name: 'Colombian peso', symbol: '$', exp: 2, flag: 'co' },\r\n  CRC: { name: 'Costa Rican colón', symbol: '₡', exp: 2, flag: 'cr' },\r\n  CUC: { name: 'Cuban convertible peso', symbol: '$', exp: 2, flag: 'cu' },\r\n  CUP: { name: 'Cuban peso', symbol: '₱', exp: 2, flag: 'cu' },\r\n  CVE: { name: 'Cape Verdean Escudo', symbol: '$', exp: 0, flag: 'cv' },\r\n  CZK: { name: 'Czech koruna', symbol: 'Kč', exp: 2, flag: 'cz' },\r\n  DJF: { name: 'Djiboutian Franc', symbol: 'fdj', exp: 0, flag: 'dj' },\r\n  DKK: { name: 'Danish krone', symbol: 'kr', exp: 2, flag: 'dk' },\r\n  DOP: { name: 'Dominican peso', symbol: '$', exp: 2, flag: 'do' },\r\n  DZD: { name: 'Algerian Dinar', symbol: 'جد', exp: 2, flag: 'dz' },\r\n  EGP: { name: 'Egyptian Pound', symbol: '£ ', exp: 2, flag: 'eg' },\r\n  ERN: { name: 'Eritrean nakfa', symbol: 'ናቕፋ', exp: 2, flag: 'er' },\r\n  ETB: { name: 'Ethiopian Birr', symbol: 'Br', exp: 2, flag: 'et' },\r\n  EUR: { name: 'Euro', symbol: '€', exp: 2, flag: 'eu' },\r\n  FJD: { name: 'Fijian dollar', symbol: '$', exp: 2, flag: 'fj' },\r\n  FKP: { name: 'Falkland Island Pound', symbol: '£', exp: 2, flag: 'fk' },\r\n  GBP: { name: 'British Pound', symbol: '£', exp: 2, flag: 'gb' },\r\n  GEL: { name: 'Georgian lari', symbol: 'ლ', exp: 2, flag: 'ge' },\r\n  GHS: { name: 'Ghanaian Cedi', symbol: 'GH¢', exp: 2, flag: 'gh' },\r\n  GIP: { name: 'Gibraltar pound', symbol: '£', exp: 2, flag: 'gi' },\r\n  GMD: { name: 'Gambian dalasi', symbol: 'D', exp: 2, flag: 'gm' },\r\n  GNF: { name: 'Guinean Franc', symbol: 'GNF', exp: 0, flag: 'gn' },\r\n  GTQ: { name: 'Guatemalan Quetzal', symbol: 'Q', exp: 2, flag: 'gt' },\r\n  GYD: { name: 'Guyanese dollar', symbol: '$', exp: 2, flag: 'gy' },\r\n  HKD: { name: 'Hong Kong dollar', symbol: 'HK$', exp: 2, flag: 'hk' },\r\n  HNL: { name: 'Honduran lempira', symbol: 'L', exp: 2, flag: 'hn' },\r\n  HRK: { name: 'Croatian kuna', symbol: 'kn', exp: 2, flag: 'hr' },\r\n  HTG: { name: 'Haitian gourde', symbol: 'G', exp: 2, flag: 'ht' },\r\n  HUF: { name: 'Hungarian forint', symbol: 'Ft', exp: 2, flag: 'hu' },\r\n  IDR: { name: 'Indonesian Rupiah', symbol: 'Rp', exp: 2, flag: 'id' },\r\n  ILS: { name: 'Israeli Shekel', symbol: '₪', exp: 2, flag: 'il' },\r\n  INR: { name: 'Indian Rupee', symbol: '₹', exp: 2, flag: 'in' },\r\n  IQD: { name: 'Iraqi Dinar', symbol: 'ع.د', exp: 3, flag: 'iq' },\r\n  IRR: { name: 'Iranian Rial', symbol: '﷼', exp: 2, flag: 'ir' },\r\n  ISK: { name: 'Icelandic Krona', symbol: 'kr', exp: 0, flag: 'is' },\r\n  JMD: { name: 'Jamaican dollar', symbol: 'J$', exp: 2, flag: 'jm' },\r\n  JOD: { name: 'Jordanian Dinar', symbol: 'JOD', exp: 3, flag: 'jo' },\r\n  JPY: { name: 'Japanese yen', symbol: '¥', exp: 0, flag: 'jp' },\r\n  KES: { name: 'Kenyan Shilling', symbol: 'KSh', exp: 2, flag: 'ke' },\r\n  KGS: { name: 'Kyrgyzstani som', symbol: 'лв', exp: 2, flag: 'kg' },\r\n  KHR: { name: 'Cambodian Riel', symbol: '៛', exp: 2, flag: 'kh' },\r\n  KMF: { name: 'Comoro Franc', symbol: 'KMF', exp: 0, flag: 'km' },\r\n  KPW: { name: 'North Korean won', symbol: '₩', exp: 2, flag: 'kp' },\r\n  KRW: { name: 'South Korean won', symbol: '₩', exp: 0, flag: 'kr' },\r\n  KWD: { name: 'Kuwaiti Dinar', symbol: 'ك', exp: 3, flag: 'kw' },\r\n  KYD: { name: 'Caymanian Dollar', symbol: '$', exp: 2, flag: 'ky' },\r\n  KZT: { name: 'Kazakhstani tenge', symbol: '₸', exp: 2, flag: 'kz' },\r\n  LAK: { name: 'Lao or Laotian Kip', symbol: '₭', exp: 2, flag: 'la' },\r\n  LBP: { name: 'Lebanese Pound', symbol: 'ل.ل', exp: 2, flag: 'lb' },\r\n  LKR: { name: 'Sri Lankan Rupee', symbol: 'Rs', exp: 2, flag: 'lk' },\r\n  LRD: { name: 'Liberian Dollar', symbol: '$', exp: 2, flag: 'lr' },\r\n  LSL: { name: 'Lesotho loti', symbol: 'L or M', exp: 2, flag: 'ls' },\r\n  LTL: { name: 'Lithuanian litas', symbol: 'Lt', exp: 2, flag: 'lt' },\r\n  LYD: { name: 'Libyan Dinar', symbol: ' د.ل', exp: 3, flag: 'ly' },\r\n  MAD: { name: 'Moroccan Dirham', symbol: 'م.د.', exp: 2, flag: 'ma' },\r\n  MDL: { name: 'Moldovan Leu', symbol: 'L', exp: 2, flag: 'md' },\r\n  MGA: { name: 'Malagasy Ariary', symbol: 'Ar', exp: 2, flag: 'mg' },\r\n  MKD: { name: 'Macedonian Denar', symbol: 'ден', exp: 2, flag: 'mk' },\r\n  MMK: { name: 'Burmese Kyat', symbol: 'K', exp: 2, flag: 'mm' },\r\n  MNT: { name: 'Mongolian Tughrik', symbol: '₮', exp: 2, flag: 'mn' },\r\n  MOP: { name: 'Macau Pataca', symbol: 'MOP$', exp: 2, flag: 'mo' },\r\n  MRO: { name: 'Mauritanian Ouguiya', symbol: 'UM', exp: 2, flag: 'mr' },\r\n  MUR: { name: 'Mauritian rupee', symbol: 'Rs', exp: 2, flag: 'mu' },\r\n  MVR: { name: 'Maldivian Rufiyaa', symbol: 'rf', exp: 2, flag: 'mv' },\r\n  MWK: { name: 'Malawian Kwacha', symbol: 'MK', exp: 2, flag: 'mw' },\r\n  MXN: { name: 'Mexico Peso', symbol: '$', exp: 2, flag: 'mx' },\r\n  MYR: { name: 'Malaysian Ringgit', symbol: 'RM', exp: 2, flag: 'my' },\r\n  MZN: { name: 'Mozambican Metical', symbol: 'MT', exp: 2, flag: 'mz' },\r\n  NAD: { name: 'Namibian Dollar', symbol: '$', exp: 2, flag: 'na' },\r\n  NGN: { name: 'Nigerian Naira', symbol: '₦', exp: 2, flag: 'ng' },\r\n  NIO: { name: 'Nicaraguan córdoba', symbol: 'C$', exp: 2, flag: 'ni' },\r\n  NOK: { name: 'Norwegian krone', symbol: 'kr', exp: 2, flag: 'no' },\r\n  NPR: { name: 'Nepalese Rupee', symbol: 'Rs', exp: 2, flag: 'np' },\r\n  NZD: { name: 'New Zealand Dollar', symbol: '$', exp: 2, flag: 'nz' },\r\n  OMR: { name: 'Omani Rial', symbol: 'ع.ر.', exp: 3, flag: 'om' },\r\n  PAB: { name: 'Balboa panamérn', symbol: 'B/', exp: 2, flag: 'pa' },\r\n  PEN: { name: 'Peruvian nuevo sol', symbol: 'S/', exp: 2, flag: 'pe' },\r\n  PGK: { name: 'Papua New Guinean Kina', symbol: 'K', exp: 2, flag: 'pg' },\r\n  PHP: { name: 'Philippine Peso', symbol: '₱', exp: 2, flag: 'ph' },\r\n  PKR: { name: 'Pakistani Rupee', symbol: 'Rs', exp: 2, flag: 'pk' },\r\n  PLN: { name: 'Polish złoty', symbol: 'zł', exp: 2, flag: 'pl' },\r\n  PYG: { name: 'Paraguayan guarani', symbol: '₲', exp: 0, flag: 'py' },\r\n  QAR: { name: 'Qatari Riyal', symbol: 'ق.ر ', exp: 2, flag: 'qa' },\r\n  RON: { name: 'Romanian leu', symbol: 'lei', exp: 2, flag: 'ro' },\r\n  RSD: { name: 'Serbian Dinar', symbol: 'РСД', exp: 2, flag: 'rs' },\r\n  RUB: { name: 'Russian Rouble', symbol: '₽', exp: 2, flag: 'ru' },\r\n  RWF: { name: 'Rwandan franc', symbol: 'FRw, RF, R₣', exp: 0, flag: 'rw' },\r\n  SAR: { name: 'Saudi Arabian Riyal', symbol: 'ر.س', exp: 2, flag: 'sa' },\r\n  SBD: { name: 'Solomon Islander Dollar', symbol: 'SI$', exp: 2, flag: 'sb' },\r\n  SCR: { name: 'Seychellois Rupee', symbol: 'Rs', exp: 2, flag: 'sc' },\r\n  SDG: { name: 'Sudanese Pound', symbol: 'SDG', exp: 2, flag: 'sd' },\r\n  SEK: { name: 'Swedish krona', symbol: 'kr', exp: 2, flag: 'se' },\r\n  SGD: { name: 'Singapore Dollar', symbol: '$', exp: 2, flag: 'sg' },\r\n  SLL: { name: 'Sierra Leonean Leone', symbol: 'Le', exp: 2, flag: 'sl' },\r\n  SOS: { name: 'Somali Shilling', symbol: 'S', exp: 2, flag: 'so' },\r\n  SRD: { name: 'Surinamese dollar', symbol: '$', exp: 2, flag: 'sr' },\r\n  SYP: { name: 'Syrian Pound', symbol: '£', exp: 2, flag: 'sy' },\r\n  SZL: { name: 'Swazi Lilangeni', symbol: 'L or E', exp: 2, flag: 'sz' },\r\n  THB: { name: 'Thai Baht', symbol: '฿', exp: 2, flag: 'th' },\r\n  TJS: { name: 'Tajikistani somoni', symbol: 'TJS', exp: 2, flag: 'tj' },\r\n  TMT: { name: 'Turkmenistan manat', symbol: 'T', exp: 2, flag: 'tm' },\r\n  TND: { name: 'Tunisian Dinar', symbol: 'TND', exp: 3, flag: 'tn' },\r\n  TOP: { name: \"Tongan Pa'anga\", symbol: 'T$', exp: 2, flag: 'to' },\r\n  TRY: { name: 'Turkish Lira', symbol: '₺', exp: 2, flag: 'tr' },\r\n  TTD: { name: 'Trinidadian dollar', symbol: 'TT$', exp: 2, flag: 'tt' },\r\n  TWD: { name: 'Taiwan New Dollar', symbol: 'NT$', exp: 2, flag: 'tw' },\r\n  TZS: { name: 'Tanzanian Shilling', symbol: 'Sh', exp: 2, flag: 'tz' },\r\n  UAH: { name: 'Ukrainian Hryvnia', symbol: '₴', exp: 2, flag: 'ua' },\r\n  UGX: { name: 'Ugandan Shilling', symbol: 'USh', exp: 0, flag: 'ug' },\r\n  USD: { name: 'US Dollar', symbol: '$', exp: 2, flag: 'us' },\r\n  UYU: { name: 'Uruguayan peso', symbol: '$U', exp: 2, flag: 'uy' },\r\n  UZS: { name: 'Uzbekistani som', symbol: 'лв', exp: 2, flag: 'uz' },\r\n  VEF: { name: 'Venezuelan bolivar', symbol: 'Bs', exp: 2, flag: 've' },\r\n  VND: { name: 'Vietnamese Dong', symbol: '₫', exp: 0, flag: 'vn' },\r\n  VUV: { name: 'Vanuatu Vatu', symbol: 'VT', exp: 0, flag: 'vu' },\r\n  WST: { name: 'Samoan Tālā', symbol: '$', exp: 2, flag: 'ws' },\r\n  YER: { name: 'Yemeni Rial', symbol: 'YER', exp: 2, flag: 'ye' },\r\n  ZAR: { name: 'South African Rand', symbol: 'R', exp: 2, flag: 'za' },\r\n  ZMW: { name: 'Zambian Kwacha', symbol: 'ZMK', exp: 2, flag: 'zm' },\r\n  ZWD: { name: 'Zimbabwean Dollar', symbol: 'Z$', exp: 2, flag: 'zw' },\r\n  XAU: { name: 'Gold, troy ounce', symbol: 'XAU', exp: 2 }\r\n};\r\n\r\nexport interface ExchangeRateT {\r\n  [code: string]: number;\r\n}\r\n\r\ntype CurrencyOptionT = {\r\n  key: string;\r\n  value: string;\r\n  text: string;\r\n  flag?: string;\r\n};\r\n\r\nconst Currency = {\r\n  defaultBase: 'USD',\r\n  options(): CurrencyOptionT[] {\r\n    return Object.keys(CURRENCY).map(code => ({\r\n      key: code,\r\n      value: code,\r\n      flag: CURRENCY[code].flag,\r\n      text: `${code}, ${CURRENCY[code].name}`\r\n    }));\r\n  },\r\n  name(code: string) {\r\n    return CURRENCY[code].name;\r\n  },\r\n  symbol(code: string) {\r\n    return CURRENCY[code].symbol;\r\n  },\r\n  minAmount(code: string) {\r\n    return Number(`1e-${CURRENCY[code].exp}`);\r\n  },\r\n  /**\r\n   * Convert value to currency's subunit (e.g. cents for USD).\r\n   * Subunit is the minimal currency unit and it is always whole integer.\r\n   */\r\n  numberToCents(value: string | number, code: string) {\r\n    return Math.round(parseFloat(`${value}e${CURRENCY[code].exp}`));\r\n  },\r\n  /**\r\n   * Convert value from subunit back to float representation with formatting.\r\n   * For example 199001 USD becomes 1,990.01 USD\r\n   */\r\n  centsToNumber(value: number, code: string): number {\r\n    const exp = CURRENCY[code].exp;\r\n    const num = Number(`${value}e-${exp}`);\r\n\r\n    return num;\r\n  },\r\n  centsToString(value: number, code: string, format: boolean = true): string {\r\n    const exp = CURRENCY[code].exp;\r\n    const num = Number(`${value}e-${exp}`);\r\n\r\n    return format\r\n      ? num.toLocaleString(undefined, {\r\n          minimumFractionDigits: exp,\r\n          maximumFractionDigits: exp\r\n        })\r\n      : num.toString();\r\n  },\r\n  convert(value: number, rate: number, from: string, to: string) {\r\n    return (value / rate) * Math.pow(10, CURRENCY[from].exp - CURRENCY[to].exp);\r\n  }\r\n};\r\n\r\nexport default Currency;\r\n","import Currency from '../entities/Currency';\r\n\r\nexport const getExchangeRate = state => state.settings.exchangeRate;\r\nexport const getBaseCurrency = state => state.settings.currency.base;\r\nexport const getBaseCurrencySymbol = state => {\r\n  return Currency.symbol(state.settings.currency.base);\r\n};\r\nexport const getSecondaryCurrency = state => state.settings.currency.secondary;\r\nexport const getCollapsedSections = state => state.settings.collapsedSections;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { toggleSectionCollapse } from '../../actions/settings';\r\nimport { getCollapsedSections } from '../../selectors/settings';\r\nimport './index.css';\r\n\r\nconst CollapsibleSection = ({\r\n  name,\r\n  label,\r\n  LabelComponent,\r\n  collapsed,\r\n  toggle,\r\n  children\r\n}) => (\r\n  <div className=\"section\">\r\n    <div\r\n      className={\r\n        collapsed.includes(name) ? 'section__header' : 'section__header active'\r\n      }\r\n      onClick={() => toggle(name)}\r\n    >\r\n      <Icon name=\"dropdown\" />\r\n      <h3>{label}</h3>\r\n      {LabelComponent && <LabelComponent />}\r\n    </div>\r\n    {!collapsed.includes(name) && (\r\n      <div className=\"section__body\">{children}</div>\r\n    )}\r\n  </div>\r\n);\r\n\r\nCollapsibleSection.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  LabelComponent: PropTypes.func,\r\n  collapsed: PropTypes.arrayOf(PropTypes.string),\r\n  toggle: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps,\r\n  collapsed: getCollapsedSections(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { toggle: toggleSectionCollapse }\r\n)(CollapsibleSection);\r\n","/**\r\n * Immutable map helper. All operations return new map copied from previous map.\r\n */\r\nconst EntityMap = {\r\n  /**\r\n   * Create new entity map from given array.\r\n   *\r\n   * @param {array} entities\r\n   * @param {string} keyPropName\r\n   * @return {object}\r\n   */\r\n  fromArray(entities, keyPropName = 'id') {\r\n    return EntityMap.merge({ byKey: {}, keys: [] }, entities, keyPropName);\r\n  },\r\n  /**\r\n   * Merge given entities into given map.\r\n   *\r\n   * @param {object} source\r\n   * @param {array} entities\r\n   * @return {object}\r\n   */\r\n  merge(source, entities, keyPropName = 'id') {\r\n    return {\r\n      byKey: {\r\n        ...source.byKey,\r\n        ...entities.reduce((acc, entity) => {\r\n          acc[entity[keyPropName]] = entity;\r\n          return acc;\r\n        }, {})\r\n      },\r\n      keys: [\r\n        ...new Set(\r\n          entities\r\n            .map(entity => entity[keyPropName])\r\n            .filter(key => !source.keys.includes(key))\r\n            .concat(source.keys)\r\n        )\r\n      ]\r\n    };\r\n  },\r\n  /**\r\n   * Set given entity in map.\r\n   *\r\n   * @param {object} source\r\n   * @param {striobjectng} entity\r\n   */\r\n  set(source, entity, keyPropName = 'id') {\r\n    return EntityMap.merge(source, [entity], keyPropName);\r\n  },\r\n  /**\r\n   * Remove value by given key.\r\n   *\r\n   * @param {object} source\r\n   * @param {string} key\r\n   * @return {object}\r\n   */\r\n  remove(source, key) {\r\n    if (!source.byKey || !source.byKey[key]) return source;\r\n\r\n    const keys = source.keys.filter(originalKey => originalKey !== key);\r\n    return {\r\n      byKey: keys.reduce((acc, key) => {\r\n        acc[key] = source.byKey[key];\r\n        return acc;\r\n      }, {}),\r\n      keys\r\n    };\r\n  },\r\n  /**\r\n   * Retrieve value by given key.\r\n   *\r\n   * @param {object} source\r\n   * @param {string} key\r\n   */\r\n  get(source, key, fallback = {}) {\r\n    return (source.byKey && source.byKey[key]) || fallback;\r\n  },\r\n  /**\r\n   * Map over all entities with given function and return array with results.\r\n   * Optionally slice mapping to given offset and limit.\r\n   *\r\n   * @param {object} source\r\n   * @param {function} fn\r\n   * @param {number} limit\r\n   * @param {number} offset\r\n   * @return {array}\r\n   */\r\n  map(source, fn, limit = source.keys.length, offset = 0) {\r\n    return source.keys\r\n      .slice(offset, offset + limit)\r\n      .map(key => fn(source.byKey[key], key));\r\n  },\r\n  /**\r\n   * Filter source entires with given function and return array of entries matching the filter.\r\n   *\r\n   * @param {object} source\r\n   * @param {function} fn\r\n   * @return {array}\r\n   */\r\n  filter(source, fn) {\r\n    return source.keys.reduce((acc, key) => {\r\n      if (fn(source.byKey[key], key)) {\r\n        acc.push(source.byKey[key]);\r\n      }\r\n      return acc;\r\n    }, []);\r\n  },\r\n  /**\r\n   * Apply given function to all entities and return new map with results.\r\n   *\r\n   * @param {object} source\r\n   * @param {function} fn\r\n   * @return {object}\r\n   */\r\n  apply(source, fn) {\r\n    return {\r\n      byKey: source.keys.reduce((acc, key) => {\r\n        acc[key] = fn(source.byKey[key], key);\r\n        return acc;\r\n      }, {}),\r\n      keys: source.keys\r\n    };\r\n  }\r\n};\r\n\r\nexport default EntityMap;\r\n","import format from 'date-fns/format';\r\nimport Currency from 'entities/Currency';\r\nimport { toLocalTimestamp } from 'util/timezone';\r\nimport { type } from 'os';\r\n\r\ninterface TransactionBaseT {\r\n  kind: TransationKindT;\r\n  accountId: string;\r\n  currency: string;\r\n  note?: string;\r\n  linkedAccountId?: string;\r\n  linkedCurrency?: string;\r\n}\r\n\r\nexport interface TransactionFormT extends TransactionBaseT {\r\n  id?: string;\r\n  amount: string;\r\n  date: string;\r\n  linkedAmount?: string;\r\n  tags: { [kind in TransationKindT]?: string[] };\r\n}\r\n\r\nexport interface TransactionStateT extends TransactionBaseT {\r\n  id: string;\r\n  amount: number;\r\n  date: number;\r\n  linkedAmount?: number;\r\n  tags?: string[];\r\n}\r\n\r\nexport interface TransactionStorageT extends TransactionBaseT {\r\n  _id?: string;\r\n  amount: number;\r\n  linkedAmount?: number;\r\n  tags?: string[];\r\n}\r\nexport interface TransactionTagT {\r\n  name: string,\r\n  value: string\r\n}\r\n\r\nexport enum TransationKindT {\r\n  Expense,\r\n  Transfer,\r\n  Income\r\n}\r\n\r\nexport enum ExpenseTypeT {\r\n  Fixed,\r\n  Variable_Non_Discretionary,\r\n  Discretionary,\r\n}\r\n\r\n\r\nconst { Expense, Transfer, Income } = TransationKindT;\r\nconst TransactionKindToText: { [kind in TransationKindT]: string } = {\r\n  [Expense]: 'Expense',\r\n  [Transfer]: 'Transfer',\r\n  [Income]: 'Income'\r\n};\r\n\r\nexport const defaultKind = Expense;\r\nexport const recentListLimit = 5;\r\nexport const rowsPerSearchPage = 10;\r\nexport const pagerSizeMobile = 5;\r\nexport const pagerSizeDesktop = 9;\r\n\r\nexport function getKindLabel(kind: TransationKindT) {\r\n  return TransactionKindToText[kind];\r\n}\r\n\r\nexport function formToState(form: TransactionFormT): TransactionStateT {\r\n  const tags = form.tags && form.tags[form.kind];\r\n\r\n  return {\r\n    ...form,\r\n    id: form.id || '',\r\n    amount: Currency.numberToCents(\r\n      parseFloat(form.amount) * (form.kind === Expense ? -1 : 1),\r\n      form.currency\r\n    ),\r\n    linkedAmount:\r\n      form.kind === Transfer && form.linkedCurrency && form.linkedAmount\r\n        ? Currency.numberToCents(form.linkedAmount, form.linkedCurrency)\r\n        : undefined,\r\n    note: form.note || undefined,\r\n    tags: tags && tags.length > 0 ? tags : undefined,\r\n    date: new Date(form.date).getTime()\r\n  };\r\n}\r\n\r\nexport function stateToForm(state: TransactionStateT): TransactionFormT {\r\n  return {\r\n    ...state,\r\n    amount: Currency.centsToString(\r\n      state.amount * (state.kind === Expense ? -1 : 1),\r\n      state.currency,\r\n      false\r\n    ),\r\n    linkedAmount:\r\n      state.kind === Transfer && state.linkedAmount && state.linkedCurrency\r\n        ? Currency.centsToString(\r\n            state.linkedAmount,\r\n            state.linkedCurrency,\r\n            false\r\n          )\r\n        : undefined,\r\n    note: state.note || '',\r\n    tags: {\r\n      [Expense]: [],\r\n      [Income]: [],\r\n      [state.kind]: state.tags || []\r\n    },\r\n    date: format(toLocalTimestamp(state.date), 'YYYY-MM-DD')\r\n  };\r\n}\r\n\r\nexport function storageToState({\r\n  _id,\r\n  kind,\r\n  note,\r\n  tags,\r\n  accountId,\r\n  amount,\r\n  currency,\r\n  linkedAccountId,\r\n  linkedAmount,\r\n  linkedCurrency\r\n}: TransactionStorageT): TransactionStateT {\r\n  if (!_id) throw new Error('Transaction storage object missing \"_id\"');\r\n  // date timestamp is encoded in transaction ID\r\n  const dateRegexMatch = _id.match(/T([0-9]+)-/);\r\n  if (!dateRegexMatch) throw new Error(`No date in Transaction ID \"${_id}\"`);\r\n\r\n  return {\r\n    id: _id,\r\n    date: parseInt(dateRegexMatch[1], 10),\r\n    kind,\r\n    note,\r\n    tags,\r\n    accountId,\r\n    amount,\r\n    currency,\r\n    linkedAccountId,\r\n    linkedAmount,\r\n    linkedCurrency\r\n  };\r\n}\r\n\r\nexport function stateToStorage({\r\n  kind,\r\n  note,\r\n  tags,\r\n  accountId,\r\n  amount,\r\n  currency,\r\n  linkedAccountId,\r\n  linkedAmount,\r\n  linkedCurrency\r\n}: TransactionStateT): TransactionStorageT {\r\n  return {\r\n    kind,\r\n    note,\r\n    tags,\r\n    accountId,\r\n    amount,\r\n    currency,\r\n    ...(kind === Transfer && {\r\n      linkedAccountId,\r\n      linkedAmount,\r\n      linkedCurrency\r\n    })\r\n  };\r\n}\r\n","export default (a, b) => {\r\n  if (a.name < b.name) return -1;\r\n  if (a.name > b.name) return 1;\r\n  return 0;\r\n};\r\n","import { createSelector } from 'reselect';\r\nimport { getBaseCurrency, getExchangeRate } from '../settings';\r\nimport { getGroupName } from '../../entities/Account';\r\nimport Currency from '../../entities/Currency';\r\nimport EntityMap from '../../entities/EntityMap';\r\nimport sortByName from '../../util/sortByName';\r\n\r\nexport const getAccountsMap = state => state.entities.accounts;\r\n\r\nexport const getAccount = id =>\r\n  createSelector(\r\n    getAccountsMap,\r\n    accounts => EntityMap.get(accounts, id)\r\n  );\r\n\r\nexport const getAccountByName = name =>\r\n  createSelector(\r\n    getAccountsList,\r\n    accounts => accounts.find(account => account.name === name)\r\n  );\r\n\r\nexport const getAccountsList = state =>\r\n  EntityMap.map(state.entities.accounts, account => ({ ...account })).sort(\r\n    sortByName\r\n  );\r\n\r\nexport const getVisibleAccountsList = createSelector(\r\n  getAccountsList,\r\n  accounts => accounts.filter(account => !account.archived)\r\n);\r\n\r\nexport const getDashboardAccountsList = createSelector(\r\n  getVisibleAccountsList,\r\n  accounts => accounts.filter(account => account.on_dashboard)\r\n);\r\n\r\nexport const getAccountsNameMap = createSelector(\r\n  getAccountsList,\r\n  accounts =>\r\n    accounts.reduce((acc, account) => {\r\n      acc[account.id] = account.name;\r\n      return acc;\r\n    }, {})\r\n);\r\n\r\nexport const getAccountsCurrencyMap = createSelector(\r\n  getAccountsList,\r\n  accounts =>\r\n    accounts.reduce((acc, account) => {\r\n      acc[account.id] = account.currencies;\r\n      return acc;\r\n    }, {})\r\n);\r\n\r\nexport const getAccountsCurrencyList = createSelector(\r\n  getAccountsList,\r\n  accounts =>\r\n    accounts.reduce(\r\n      (currencies, account) =>\r\n        currencies.concat(\r\n          account.currencies.filter(code => !currencies.includes(code))\r\n        ),\r\n      []\r\n    )\r\n);\r\n\r\nconst groupAccounts = (accounts, base, rate) => {\r\n  const grouped = accounts.reduce((grouped, account) => {\r\n    const group = account.group;\r\n    if (!grouped[group]) {\r\n      grouped[group] = {\r\n        type: group,\r\n        name: getGroupName(group),\r\n        accounts: [],\r\n        total: 0,\r\n        debt: 0,\r\n        netTotal: 0,\r\n      };\r\n    }\r\n\r\n    grouped[group].accounts.push(account);\r\n    const total = getBaseTotal(account, base, rate) || 0;\r\n    const debt = getBaseTotalDebt(account, base, rate) || 0;\r\n    grouped[group].total += total;\r\n    grouped[group].debt += debt;\r\n    grouped[group].netTotal += total - debt;\r\n\r\n    return grouped;\r\n  }, {});\r\n\r\n  for (const group of Object.keys(grouped)) {\r\n    grouped[group].accounts.sort(sortByName);\r\n  }\r\n\r\n  return grouped;\r\n};\r\n\r\nexport const getVisibleGroupedAccounts = createSelector(\r\n  getVisibleAccountsList,\r\n  getBaseCurrency,\r\n  getExchangeRate,\r\n  groupAccounts\r\n);\r\n\r\nexport const getDashboardGroupedAccounts = createSelector(\r\n  getDashboardAccountsList,\r\n  getBaseCurrency,\r\n  getExchangeRate,\r\n  groupAccounts\r\n);\r\n\r\nexport const getGroupedAccounts = createSelector(\r\n  getAccountsList,\r\n  getBaseCurrency,\r\n  getExchangeRate,\r\n  groupAccounts\r\n);\r\n\r\nexport const getAccountsAsOptions = createSelector(\r\n  getVisibleGroupedAccounts,\r\n  groups => {\r\n    const options = [];\r\n    for (const group of Object.keys(groups)) {\r\n      for (const account of groups[group].accounts) {\r\n        options.push({\r\n          key: account.id,\r\n          value: account.id,\r\n          text: account.name,\r\n          description: getGroupName(group)\r\n        });\r\n      }\r\n    }\r\n    return options;\r\n  }\r\n);\r\n\r\nexport const getNetWorth = createSelector(\r\n  getAccountsList,\r\n  getBaseCurrency,\r\n  getExchangeRate,\r\n  (accounts, base, rate) =>\r\n    accounts.reduce(\r\n      (netWorth, account) => netWorth + getBaseTotal(account, base, rate),\r\n      0\r\n    )\r\n);\r\n\r\nconst getBaseTotal = (account, base, rate) =>\r\n  account.currencies.reduce(\r\n    (total, code) =>\r\n      Math.floor(\r\n        total + Currency.convert(account.balance[code], rate[code], base, code)\r\n      ),\r\n    0\r\n  );\r\n\r\nconst getBaseTotalDebt = (account, base, rate) =>\r\n  account.currencies.reduce(\r\n    (total, code) =>\r\n      Math.floor(\r\n        total + Currency.convert(account.debt[code], rate[code], base, code)\r\n      ),\r\n    0\r\n  );","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Currency from '../entities/Currency';\r\n\r\nconst Amount = ({ value, code, showColor = true }) => (\r\n  <span\r\n    className={`mono ${showColor && (value >= 0 ? 'positive' : 'negative')}`}\r\n  >\r\n    {Currency.centsToString(value, code)} {code}\r\n  </span>\r\n);\r\n\r\nAmount.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  code: PropTypes.string.isRequired,\r\n  showColor: PropTypes.bool\r\n};\r\n\r\nexport default Amount;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getNetWorth } from '../../selectors/entities/accounts';\r\nimport { getBaseCurrency } from '../../selectors/settings';\r\nimport Amount from '../../components/Amount';\r\n\r\nconst NetWorth = ({ netWorth, baseCurrency }) => (\r\n  <div className=\"net-worth__total\">\r\n    <Amount value={netWorth} code={baseCurrency} />\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  netWorth: getNetWorth(state),\r\n  baseCurrency: getBaseCurrency(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(NetWorth);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\nimport Amount from '../../Amount';\r\nimport { stateToForm, AccountGroupT } from '../../../entities/Account';\r\n\r\nclass AccountItem extends React.Component {\r\n  handleEditClick = () => {\r\n    this.props.openAccountInModal(stateToForm(this.props.account));\r\n  };\r\n\r\n  render() {\r\n    const { account } = this.props;\r\n    return (\r\n      <div className=\"account-widget-account\">\r\n        <div className=\"account-widget-account__name\">\r\n          <Link to={`/transactions/${account.id}`}>\r\n            {account.name}\r\n          </Link>\r\n        </div>\r\n        <div className=\"account-widget-account__balance\">\r\n          {account.currencies.map(code => (\r\n            <React.Fragment>\r\n              <Amount\r\n                key={code}\r\n                value={account.balance[code]}\r\n                code={code}\r\n              />\r\n              {(this.props.group === AccountGroupT.Asset) &&\r\n                <React.Fragment>\r\n                  <Amount\r\n                    key={code + '-debt'}\r\n                    value={-account.debt[code]}\r\n                    code={code}\r\n                  />\r\n                  <Amount\r\n                    key={code}\r\n                    value={account.balance[code] - account.debt[code]}\r\n                    code={code}\r\n                  />\r\n                </React.Fragment>\r\n              }\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n        {this.props.openAccountInModal && (\r\n          <div className=\"account-widget-account__edit\">\r\n            <Button\r\n              basic\r\n              circular\r\n              icon=\"pencil\"\r\n              onClick={this.handleEditClick}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAccountItem.propTypes = {\r\n  account: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    balance: PropTypes.objectOf(PropTypes.number).isRequired\r\n  }).isRequired,\r\n  openAccountInModal: PropTypes.func\r\n};\r\n\r\nexport default AccountItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AccountItem from './AccountItem';\r\nimport Amount from '../../Amount';\r\nimport { AccountGroupT } from '../../../entities/Account'\r\n\r\nconst Group = ({\r\n  baseCurrency,\r\n  group,\r\n  isCollapsed,\r\n  toggleGroupCollapse,\r\n  openAccountInModal\r\n}) => (\r\n    <div className=\"account-widget-group\">\r\n      <div className=\"account-widget-group__header\" onClick={toggleGroupCollapse}>\r\n        <span className=\"account-widget-group__name\">{group.name}</span>\r\n        <span className=\"account-widget-group__total\">\r\n          <Amount value={group.type === AccountGroupT.Asset ? group.netTotal : group.total} code={baseCurrency} />\r\n        </span>\r\n      </div>\r\n      {!isCollapsed &&\r\n        group.accounts.map(account => (\r\n          <AccountItem\r\n            key={account.id}\r\n            account={account}\r\n            group={group.type}\r\n            openAccountInModal={openAccountInModal}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n\r\nGroup.propTypes = {\r\n  baseCurrency: PropTypes.string.isRequired,\r\n  group: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    accounts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    total: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  isCollapsed: PropTypes.bool.isRequired,\r\n  toggleGroupCollapse: PropTypes.func.isRequired,\r\n  openAccountInModal: PropTypes.func\r\n};\r\n\r\nexport default Group;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Group from './Group';\r\nimport './index.css';\r\n\r\nclass AccountsWidget extends React.Component {\r\n  toggle = group => () => this.props.toggleSectionCollapse(group);\r\n\r\n  render() {\r\n    const groups = Object.keys(this.props.groups);\r\n\r\n    return (\r\n      groups.length > 0 && (\r\n        <div className=\"account-widget\">\r\n          {groups.map(group => (\r\n            <Group\r\n              key={group}\r\n              baseCurrency={this.props.baseCurrency}\r\n              group={this.props.groups[group]}\r\n              isCollapsed={this.props.collapsedGroups.includes(group)}\r\n              toggleGroupCollapse={this.toggle(group)}\r\n              openAccountInModal={this.props.openAccountInModal}\r\n            />\r\n          ))}\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nAccountsWidget.propTypes = {\r\n  baseCurrency: PropTypes.string.isRequired,\r\n  groups: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  collapsedGroups: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  toggleSectionCollapse: PropTypes.func.isRequired,\r\n  openAccountInModal: PropTypes.func\r\n};\r\n\r\nexport default AccountsWidget;\r\n","import { connect } from 'react-redux';\r\nimport AccountsList from '../../components/Account/List';\r\nimport { getDashboardGroupedAccounts } from '../../selectors/entities/accounts';\r\nimport {\r\n  getCollapsedSections,\r\n  getBaseCurrency\r\n} from '../../selectors/settings';\r\nimport { toggleSectionCollapse } from '../../actions/settings';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps,\r\n  baseCurrency: getBaseCurrency(state),\r\n  collapsedGroups: getCollapsedSections(state),\r\n  groups: getDashboardGroupedAccounts(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { toggleSectionCollapse }\r\n)(AccountsList);\r\n","const offset = new Date().getTimezoneOffset();\r\n\r\nexport function toUtcTimestamp(date: Date | number) {\r\n  const timestamp = date instanceof Date ? date.getTime() : date;\r\n  return timestamp - offset * 60 * 1000;\r\n}\r\n\r\nexport function toLocalTimestamp(date: Date | number) {\r\n  const timestamp = date instanceof Date ? date.getTime() : date;\r\n  return timestamp + offset * 60 * 1000;\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const DropdownOption = PropTypes.shape({\r\n  key: PropTypes.string,\r\n  value: PropTypes.string,\r\n  text: PropTypes.string\r\n});\r\n","import React from 'react';\r\nimport { Menu } from 'semantic-ui-react';\r\nimport { getKindLabel, TransationKindT } from 'entities/Transaction';\r\n\r\nconst Header = ({ withTransfer, activeKind, changeKind }) => {\r\n  const { Expense, Transfer, Income } = TransationKindT;\r\n  const kinds = withTransfer ? [Expense, Transfer, Income] : [Expense, Income];\r\n  return (\r\n    <Menu attached=\"top\" widths={kinds.length}>\r\n      {kinds.map(kind => (\r\n        <Menu.Item\r\n          key={kind}\r\n          color={kind === Expense ? 'red' : kind === Income ? 'green' : 'black'}\r\n          name={getKindLabel(kind)}\r\n          active={kind === activeKind}\r\n          onClick={() => changeKind(kind)}\r\n        />\r\n      ))}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\r\nimport { DropdownOption } from '../../types';\r\nimport Currency from '../../../entities/Currency';\r\n\r\nconst Account = props => (\r\n  <Form.Group>\r\n    <Form.Field width={11} className=\"mobile-with-margin\">\r\n      <label>{props.label}</label>\r\n      <Dropdown\r\n        selection\r\n        options={props.accountOptions}\r\n        value={props.accountId}\r\n        onChange={props.onAccountChange}\r\n      />\r\n    </Form.Field>\r\n    <Form.Field width={5} className=\"mobile-with-margin input-right no-label\">\r\n      <Input\r\n        required\r\n        type=\"number\"\r\n        min={Currency.minAmount(props.currency)}\r\n        step={Currency.minAmount(props.currency)}\r\n        value={props.amount}\r\n        onChange={props.onAmountChange}\r\n        labelPosition=\"right\"\r\n        label={\r\n          props.currencyOptions.length === 1 ? (\r\n            props.currencyOptions[0].text\r\n          ) : (\r\n            <Dropdown\r\n              options={props.currencyOptions}\r\n              value={props.currency}\r\n              onChange={props.onCurrencyChange}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    </Form.Field>\r\n  </Form.Group>\r\n);\r\n\r\nAccount.propTypes = {\r\n  label: PropTypes.string,\r\n  accountId: PropTypes.string,\r\n  accountOptions: PropTypes.arrayOf(DropdownOption),\r\n  amount: PropTypes.string,\r\n  currency: PropTypes.string,\r\n  currencyOptions: PropTypes.arrayOf(DropdownOption),\r\n  onAccountChange: PropTypes.func,\r\n  onAmountChange: PropTypes.func,\r\n  onCurrencyChange: PropTypes.func\r\n};\r\n\r\nexport default Account;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, Dropdown, Input, Segment } from 'semantic-ui-react';\r\nimport {\r\n  TransationKindT,\r\n  getKindLabel,\r\n  formToState\r\n} from 'entities/Transaction';\r\nimport { DropdownOption } from 'components/types';\r\nimport Header from './Header';\r\nimport Account from './Account';\r\nimport './index.css';\r\n\r\nconst { Expense, Transfer, Income } = TransationKindT;\r\nconst NoAccounts = () => (\r\n  <div className=\"transactions-form__empty\">You don't have any accounts.</div>\r\n);\r\n\r\nclass TransactionForm extends React.Component {\r\n  state = { searchQuery: '' };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.saveTransaction(formToState(this.props.form));\r\n  };\r\n\r\n  onChange = handler => (_, { value }) => handler(value);\r\n\r\n  onAccountChange = handler => (_, { value }) => {\r\n    handler({\r\n      accountId: value,\r\n      currency: this.props.accountCurrency[value]\r\n    });\r\n  };\r\n\r\n  onTagAdd = (_, { value }) => {\r\n    this.props.addTag({ kind: this.props.form.kind, tag: value });\r\n  };\r\n  onTagSearchChange = (_, { searchQuery }) => this.setState({ searchQuery });\r\n  onTagClose = () => this.setState({ searchQuery: '' });\r\n\r\n  getCurrencyOptions = accountId => {\r\n    return this.props.accountCurrency[accountId].map(code => ({\r\n      key: code,\r\n      value: code,\r\n      text: code\r\n    }));\r\n  };\r\n\r\n  getGridClassName = () =>\r\n    this.props.form.kind === Transfer\r\n      ? 'transaction-form-grid single-line'\r\n      : 'transaction-form-grid';\r\n\r\n  render() {\r\n    if (!this.props.form.accountId) return <NoAccounts />;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Header\r\n          withTransfer={!!this.props.form.linkedAccountId}\r\n          activeKind={this.props.form.kind}\r\n          changeKind={this.props.changeKind}\r\n        />\r\n        <Segment attached=\"bottom\">\r\n          <Form onSubmit={this.onSubmit} className=\"transaction-form\">\r\n            <Account\r\n              label={this.props.form.kind === Income ? 'To' : 'From'}\r\n              accountId={this.props.form.accountId}\r\n              amount={this.props.form.amount}\r\n              currency={this.props.form.currency}\r\n              accountOptions={this.props.accountOptions}\r\n              currencyOptions={this.getCurrencyOptions(\r\n                this.props.form.accountId\r\n              )}\r\n              onAccountChange={this.onAccountChange(this.props.changeAccount)}\r\n              onAmountChange={this.onChange(this.props.changeAmount)}\r\n              onCurrencyChange={this.onChange(this.props.changeCurrency)}\r\n            />\r\n            {this.props.form.kind === Transfer && (\r\n              <Account\r\n                label=\"To\"\r\n                accountId={this.props.form.linkedAccountId}\r\n                amount={this.props.form.linkedAmount}\r\n                currency={this.props.form.linkedCurrency}\r\n                accountOptions={this.props.accountOptions}\r\n                currencyOptions={this.getCurrencyOptions(\r\n                  this.props.form.linkedAccountId\r\n                )}\r\n                onAccountChange={this.onAccountChange(\r\n                  this.props.changeLinkedAccount\r\n                )}\r\n                onAmountChange={this.onChange(this.props.changeLinkedAmount)}\r\n                onCurrencyChange={this.onChange(\r\n                  this.props.changeLinkedCurrency\r\n                )}\r\n              />\r\n            )}\r\n            <div className={this.getGridClassName()}>\r\n              <div className=\"transaction-form-grid__column-wide\">\r\n                {this.props.form.kind !== Transfer && (\r\n                  <div className=\"transaction-form-grid__field\">\r\n                    <Form.Field>\r\n                      <label>Tags</label>\r\n                      <Dropdown\r\n                        multiple\r\n                        selection\r\n                        search\r\n                        allowAdditions\r\n                        closeOnChange\r\n                        placeholder=\"Choose existing tags or add new\"\r\n                        value={this.props.form.tags[this.props.form.kind]}\r\n                        options={this.props.tagsOptions}\r\n                        onChange={this.onChange(this.props.changeTags)}\r\n                        onAddItem={this.onTagAdd}\r\n                        onClose={this.onTagClose}\r\n                        onSearchChange={this.onTagSearchChange}\r\n                        searchQuery={this.state.searchQuery}\r\n                      />\r\n                    </Form.Field>\r\n                  </div>\r\n                )}\r\n                <div className=\"transaction-form-grid__field\">\r\n                  <Form.Field>\r\n                    <Input\r\n                      placeholder=\"Note\"\r\n                      value={this.props.form.note}\r\n                      onChange={this.onChange(this.props.changeNote)}\r\n                    />\r\n                  </Form.Field>\r\n                </div>\r\n              </div>\r\n              <div className=\"transaction-form-grid__column-narrow\">\r\n                <div className=\"transaction-form-grid__field\">\r\n                  <Form.Field>\r\n                    <Input\r\n                      required\r\n                      fluid\r\n                      type=\"date\"\r\n                      value={this.props.form.date}\r\n                      onChange={this.onChange(this.props.changeDate)}\r\n                    />\r\n                  </Form.Field>\r\n                </div>\r\n                <div className=\"transaction-form-grid__field\">\r\n                  <Button\r\n                    primary\r\n                    fluid\r\n                    disabled={parseFloat(this.props.form.amount) === 0}\r\n                  >\r\n                    {this.props.form.id ? 'Save' : 'Add'}{' '}\r\n                    {getKindLabel(this.props.form.kind)}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </Segment>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nTransactionForm.propTypes = {\r\n  form: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\r\n    accountId: PropTypes.string,\r\n    amount: PropTypes.string,\r\n    currency: PropTypes.string,\r\n    linkedAccountId: PropTypes.string,\r\n    linkedAmount: PropTypes.string,\r\n    linkedCurrency: PropTypes.string,\r\n    tags: PropTypes.shape({\r\n      [Expense]: PropTypes.arrayOf(PropTypes.string),\r\n      [Income]: PropTypes.arrayOf(PropTypes.string)\r\n    }),\r\n    date: PropTypes.string,\r\n    note: PropTypes.string\r\n  }),\r\n  accountCurrency: PropTypes.object.isRequired,\r\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired,\r\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\r\n  changeKind: PropTypes.func.isRequired,\r\n  changeAccount: PropTypes.func.isRequired,\r\n  changeAmount: PropTypes.func.isRequired,\r\n  changeCurrency: PropTypes.func.isRequired,\r\n  changeLinkedAccount: PropTypes.func,\r\n  changeLinkedAmount: PropTypes.func,\r\n  changeLinkedCurrency: PropTypes.func,\r\n  addTag: PropTypes.func,\r\n  changeTags: PropTypes.func,\r\n  changeDate: PropTypes.func.isRequired,\r\n  changeNote: PropTypes.func.isRequired,\r\n  loadTags: PropTypes.func,\r\n  saveTransaction: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TransactionForm;\r\n","import { TransationKindT } from '../../entities/Transaction';\r\n\r\nexport const getTagOptions = state =>\r\n  state.entities.tags[state.ui.form.transaction.kind].map(tag => ({\r\n    key: tag,\r\n    value: tag,\r\n    text: tag\r\n  }));\r\n\r\nexport const getAllTagsOptions = state =>\r\n  [\r\n    ...new Set([\r\n      ...state.entities.tags[TransationKindT.Expense],\r\n      ...state.entities.tags[TransationKindT.Income]\r\n    ])\r\n  ].map(tag => ({\r\n    key: tag,\r\n    value: tag,\r\n    text: tag\r\n  }));\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  loadFilterTransactions,\r\n  loadFilterTransactionsSuccess,\r\n  loadRecentTransactions,\r\n  loadRecentTransactionsSuccess,\r\n  saveTransaction,\r\n  saveTransactionSuccess,\r\n  removeTransaction,\r\n  removeTransactionSuccess\r\n} = createActions(\r\n  'LOAD_FILTER_TRANSACTIONS',\r\n  'LOAD_FILTER_TRANSACTIONS_SUCCESS',\r\n  'LOAD_RECENT_TRANSACTIONS',\r\n  'LOAD_RECENT_TRANSACTIONS_SUCCESS',\r\n  'SAVE_TRANSACTION',\r\n  'SAVE_TRANSACTION_SUCCESS',\r\n  'REMOVE_TRANSACTION',\r\n  'REMOVE_TRANSACTION_SUCCESS'\r\n);\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  loadTags,\r\n  loadExpenseTagsSuccess,\r\n  loadIncomeTagsSuccess\r\n} = createActions(\r\n  'LOAD_TAGS',\r\n  'LOAD_EXPENSE_TAGS_SUCCESS',\r\n  'LOAD_INCOME_TAGS_SUCCESS'\r\n);\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  fillInTransactionForm,\r\n  resetTransactionForm,\r\n  openTransactionInModal,\r\n  changeKind,\r\n  changeAccount,\r\n  changeAmount,\r\n  changeCurrency,\r\n  changeLinkedAccount,\r\n  changeLinkedAmount,\r\n  changeLinkedCurrency,\r\n  changeDate,\r\n  addTag,\r\n  changeTags,\r\n  changeNote\r\n} = createActions(\r\n  'FILL_IN_TRANSACTION_FORM',\r\n  'RESET_TRANSACTION_FORM',\r\n  'OPEN_TRANSACTION_IN_MODAL',\r\n  'CHANGE_KIND',\r\n  'CHANGE_ACCOUNT',\r\n  'CHANGE_AMOUNT',\r\n  'CHANGE_CURRENCY',\r\n  'CHANGE_LINKED_ACCOUNT',\r\n  'CHANGE_LINKED_AMOUNT',\r\n  'CHANGE_LINKED_CURRENCY',\r\n  'CHANGE_DATE',\r\n  'ADD_TAG',\r\n  'CHANGE_TAGS',\r\n  'CHANGE_NOTE'\r\n);\r\n","import { connect } from 'react-redux';\r\nimport TransactionForm from '../../components/Transaction/Form';\r\nimport {\r\n  getAccountsCurrencyMap,\r\n  getAccountsAsOptions\r\n} from '../../selectors/entities/accounts';\r\nimport { getTagOptions } from '../../selectors/entities/tags';\r\nimport { saveTransaction } from '../../actions/entities/transactions';\r\nimport { loadTags } from '../../actions/entities/tags';\r\nimport {\r\n  changeKind,\r\n  changeAccount,\r\n  changeAmount,\r\n  changeCurrency,\r\n  changeLinkedAccount,\r\n  changeLinkedAmount,\r\n  changeLinkedCurrency,\r\n  addTag,\r\n  changeTags,\r\n  changeDate,\r\n  changeNote\r\n} from '../../actions/ui/form/transaction';\r\n\r\nconst mapStateToProps = state => ({\r\n  form: state.ui.form.transaction,\r\n  accountCurrency: getAccountsCurrencyMap(state),\r\n  accountOptions: getAccountsAsOptions(state),\r\n  tagsOptions: getTagOptions(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeKind,\r\n    changeAccount,\r\n    changeAmount,\r\n    changeCurrency,\r\n    changeLinkedAccount,\r\n    changeLinkedAmount,\r\n    changeLinkedCurrency,\r\n    changeDate,\r\n    changeNote,\r\n    addTag,\r\n    changeTags,\r\n    loadTags,\r\n    saveTransaction\r\n  }\r\n)(TransactionForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport format from 'date-fns/format';\r\nimport { Icon, Button, Label } from 'semantic-ui-react';\r\nimport Amount from '../../Amount';\r\nimport { stateToForm, TransationKindT } from '../../../entities/Transaction';\r\nimport { toLocalTimestamp } from '../../../util/timezone';\r\n\r\nconst { Expense, Transfer, Income } = TransationKindT;\r\n\r\nclass TransactionItem extends React.Component {\r\n  handleEditClick = () => {\r\n    this.props.openTransactionInModal(stateToForm(this.props.transaction));\r\n  };\r\n\r\n  render() {\r\n    const { transaction } = this.props;\r\n    return (\r\n      <div className=\"transaction-item\">\r\n\r\n        <div className=\"transaction-item__info\">\r\n          {transaction.accountName}\r\n          {this.renderArrow()}\r\n          {transaction.kind === Transfer && transaction.linkedAccountName}\r\n          {transaction.tags &&\r\n            transaction.tags.map(tag => <Label key={tag} content={tag} />)}\r\n          <span className=\"transaction-item__info__note\">\r\n            {transaction.note}\r\n          </span>\r\n        </div>\r\n        <div className=\"transaction-item__amount\">\r\n          <Amount\r\n            value={transaction.amount}\r\n            code={transaction.currency}\r\n            showColor={transaction.kind !== Transfer}\r\n          />\r\n          {transaction.kind === Transfer && this.renderLinkedAmount()}\r\n        </div>\r\n        <div className=\"transaction-item__edit\">\r\n          <Button\r\n            circular\r\n            basic\r\n            icon=\"pencil\"\r\n            onClick={this.handleEditClick}\r\n            disabled={transaction.archived}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderArrow() {\r\n    const { kind, tags, note } = this.props.transaction;\r\n    if (kind !== Transfer && !tags && !note) return;\r\n\r\n    return (\r\n      <Icon\r\n        color=\"grey\"\r\n        name={kind === Income ? 'arrow left' : 'arrow right'}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderLinkedAmount() {\r\n    const { linkedAmount, linkedCurrency, currency } = this.props.transaction;\r\n    if (!linkedCurrency || linkedCurrency === currency) return;\r\n\r\n    return (\r\n      <span>\r\n        <Icon color=\"grey\" name=\"arrow right\" />\r\n        <Amount value={linkedAmount} code={linkedCurrency} showColor={false} />\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nTransactionItem.propTypes = {\r\n  transaction: PropTypes.shape({\r\n    kind: PropTypes.oneOf([Expense, Transfer, Income]),\r\n    id: PropTypes.string,\r\n    accountId: PropTypes.string,\r\n    accountName: PropTypes.string,\r\n    amount: PropTypes.number,\r\n    currency: PropTypes.string,\r\n    linkedAccountId: PropTypes.string,\r\n    linkedAccountName: PropTypes.string,\r\n    linkedAmount: PropTypes.number,\r\n    linkedCurrency: PropTypes.string,\r\n    tags: PropTypes.arrayOf(PropTypes.string),\r\n    note: PropTypes.string,\r\n    date: PropTypes.number\r\n  }),\r\n  openTransactionInModal: PropTypes.func\r\n};\r\n\r\nexport default TransactionItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Header } from 'semantic-ui-react';\r\n\r\nconst ModalForm = props => (\r\n  <Modal\r\n    closeIcon\r\n    size=\"small\"\r\n    className=\"transaction\"\r\n    open={props.isOpen}\r\n    onClose={props.resetTransactionForm}\r\n  >\r\n    <Header\r\n      icon=\"file text outline\"\r\n      content={props.isEdit ? 'Edit Transaction' : 'New Transaction'}\r\n    />\r\n    <Modal.Content>\r\n      <props.EditForm />\r\n    </Modal.Content>\r\n    {props.isEdit && (\r\n      <Modal.Actions>\r\n        <Button\r\n          negative\r\n          icon=\"trash\"\r\n          content=\"Delete\"\r\n          labelPosition=\"right\"\r\n          onClick={() => props.removeTransaction(props.currentTransactionId)}\r\n        />\r\n      </Modal.Actions>\r\n    )}\r\n  </Modal>\r\n);\r\n\r\nModalForm.propTypes = {\r\n  currentTransactionId: PropTypes.string,\r\n  isOpen: PropTypes.bool,\r\n  isEdit: PropTypes.bool,\r\n  resetTransactionForm: PropTypes.func,\r\n  removeTransaction: PropTypes.func,\r\n  EditForm: PropTypes.func\r\n};\r\n\r\nexport default ModalForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Dimmer, Loader } from 'semantic-ui-react';\r\nimport TransactionItem from './TransactionItem';\r\nimport ModalForm from './ModalForm';\r\nimport './index.css';\r\n\r\nclass TransactionList extends React.Component {\r\n  render() {\r\n    return (\r\n      <Segment className=\"transactions-list__wrapper\">\r\n        <Dimmer inverted active={this.props.isLoading}>\r\n          <Loader active inline=\"centered\" />\r\n        </Dimmer>\r\n        {this.props.transactions.length > 0 ? (\r\n          this.props.transactions.map(this.renderTransaction)\r\n        ) : (\r\n          <div className=\"transactions-list__empty\">No transactions found.</div>\r\n        )}\r\n        <ModalForm\r\n          currentTransactionId={this.props.currentTransactionId}\r\n          EditForm={this.props.EditForm}\r\n          isOpen={this.props.isModalOpen}\r\n          isEdit={this.props.isEdit}\r\n          resetTransactionForm={this.props.resetTransactionForm}\r\n          removeTransaction={this.props.removeTransaction}\r\n        />\r\n      </Segment>\r\n    );\r\n  }\r\n\r\n  renderTransaction = transaction => (\r\n    <TransactionItem\r\n      key={transaction.id}\r\n      transaction={transaction}\r\n      openTransactionInModal={this.props.openTransactionInModal}\r\n    />\r\n  );\r\n}\r\n\r\nTransactionList.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  transactions: PropTypes.arrayOf(PropTypes.object),\r\n  currentTransactionId: PropTypes.string,\r\n  isModalOpen: PropTypes.bool,\r\n  isEdit: PropTypes.bool,\r\n  openTransactionInModal: PropTypes.func,\r\n  resetTransactionForm: PropTypes.func,\r\n  removeTransaction: PropTypes.func,\r\n  EditForm: PropTypes.func\r\n};\r\n\r\nexport default TransactionList;\r\n","import format from 'date-fns/format';\r\nimport { createSelector } from 'reselect';\r\nimport {\r\n  pagerSizeMobile,\r\n  pagerSizeDesktop\r\n} from '../../../entities/Transaction';\r\nimport { toLocalTimestamp } from '../../../util/timezone';\r\n\r\nexport const getDateLabel = state => {\r\n  const dateStart = toLocalTimestamp(state.ui.transaction.filter.dateStart);\r\n  const dateEnd = toLocalTimestamp(state.ui.transaction.filter.dateEnd);\r\n  return format(dateStart, 'DD MMM') !== format(dateEnd, 'DD MMM')\r\n    ? `${format(dateStart, 'DD MMM')} — ${format(dateEnd, 'DD MMM')}`\r\n    : format(dateStart, 'MMMM, Do');\r\n};\r\n\r\nexport const getFilters = state => ({\r\n  date: {\r\n    start: state.ui.transaction.filter.dateStart,\r\n    end: state.ui.transaction.filter.dateEnd\r\n  },\r\n  accounts: new Set(state.ui.transaction.filter.applied.accounts),\r\n  tags: state.ui.transaction.filter.applied.tags || []\r\n});\r\n\r\nexport const getPage = state => state.ui.transaction.filter.page;\r\n\r\nexport const getLastPage = state => {\r\n  return Math.ceil(\r\n    state.ui.transaction.filter.totalRows / state.ui.transaction.filter.perPage\r\n  );\r\n};\r\n\r\nexport const getPagerSize = state =>\r\n  state.ui.isMobile ? pagerSizeMobile : pagerSizeDesktop;\r\n\r\nexport const getVisiblePages = createSelector(\r\n  getPage,\r\n  getLastPage,\r\n  getPagerSize,\r\n  (current, last, size) => {\r\n    const pages = [];\r\n    const offset = Math.max(0, last - current - Math.ceil(size / 2));\r\n    const windowRight = last > size ? Math.max(size, last - offset) : last;\r\n    const windowLeft = Math.max(0, windowRight - size);\r\n\r\n    for (let page = windowLeft; page < windowRight; page++) {\r\n      pages.push(page);\r\n    }\r\n\r\n    return pages;\r\n  }\r\n);\r\n","import { createSelector } from 'reselect';\r\nimport { getAccountsMap } from './accounts';\r\nimport { getBaseCurrency, getExchangeRate } from '../settings';\r\nimport { getPage } from '../ui/transaction/filter';\r\nimport { recentListLimit, rowsPerSearchPage } from '../../entities/Transaction';\r\nimport Currency from '../../entities/Currency';\r\nimport EntityMap from '../../entities/EntityMap';\r\n\r\nconst recentTransactionsSelector = state => state.entities.transactions.recent;\r\nconst filterTransactionsSelector = state => state.entities.transactions.filter;\r\n\r\nexport const getRecentTransactions = createSelector(\r\n  recentTransactionsSelector,\r\n  getAccountsMap,\r\n  (transactions, accounts) =>\r\n    EntityMap.map(\r\n      transactions,\r\n      transaction => joinAccount(transaction, accounts),\r\n      recentListLimit\r\n    )\r\n);\r\n\r\nexport const getFilterTransactions = createSelector(\r\n  filterTransactionsSelector,\r\n  getPage,\r\n  getAccountsMap,\r\n  (transactions, page, accounts) =>\r\n    EntityMap.map(\r\n      transactions,\r\n      transaction => joinAccount(transaction, accounts),\r\n      rowsPerSearchPage,\r\n      page * rowsPerSearchPage\r\n    )\r\n);\r\n\r\nfunction joinAccount(transaction, accounts) {\r\n  const account = EntityMap.get(accounts, transaction.accountId);\r\n  const linked = EntityMap.get(accounts, transaction.linkedAccountId);\r\n  return {\r\n    ...transaction,\r\n    archived: account.archived || linked.archived,\r\n    accountName: account.name,\r\n    linkedAccountName: linked.name\r\n  };\r\n}\r\n\r\nexport const getFilterTotal = kind =>\r\n  createSelector(\r\n    filterTransactionsSelector,\r\n    getBaseCurrency,\r\n    getExchangeRate,\r\n    (transactions, base, rate) =>\r\n      EntityMap.filter(transactions, tx => tx.kind === kind).reduce(\r\n        (total, tx) =>\r\n          Math.floor(\r\n            total +\r\n              Currency.convert(tx.amount, rate[tx.currency], base, tx.currency)\r\n          ),\r\n        0\r\n      )\r\n  );\r\n","import format from 'date-fns/format';\r\nimport { createSelector } from 'reselect';\r\nimport {\r\n  getAccountsCurrencyMap,\r\n  getAccountsAsOptions\r\n} from '../../entities/accounts';\r\nimport { getBaseCurrency } from '../../settings';\r\nimport { defaultKind, TransationKindT } from '../../../entities/Transaction';\r\n\r\nconst { Expense, Income } = TransationKindT;\r\n\r\nexport const getForm = state => state.ui.form.transaction;\r\n\r\nconst getDefaultAccountId = createSelector(\r\n  getAccountsAsOptions,\r\n  options => options.length > 0 && options[0].key\r\n);\r\n\r\nconst getDefaultCurrency = createSelector(\r\n  getDefaultAccountId,\r\n  getAccountsCurrencyMap,\r\n  getBaseCurrency,\r\n  (accountId, currencies, base) =>\r\n    accountId &&\r\n    (currencies[accountId].includes(base) ? base : currencies[accountId][0])\r\n);\r\n\r\nconst getDefaultLinkedAccountId = createSelector(\r\n  getAccountsAsOptions,\r\n  getDefaultAccountId,\r\n  getAccountsCurrencyMap,\r\n  (options, defaultAccountId, currencies) =>\r\n    options.length > 1\r\n      ? options[1].key\r\n      : defaultAccountId &&\r\n        currencies[defaultAccountId].length > 1 &&\r\n        defaultAccountId\r\n);\r\n\r\nconst getDefaultLinkedCurrency = createSelector(\r\n  getDefaultAccountId,\r\n  getDefaultLinkedAccountId,\r\n  getAccountsCurrencyMap,\r\n  getBaseCurrency,\r\n  (accountId, linkedAccountId, currencies, base) =>\r\n    accountId && accountId === linkedAccountId\r\n      ? currencies[accountId][1]\r\n      : linkedAccountId &&\r\n        (currencies[linkedAccountId].includes(base)\r\n          ? base\r\n          : currencies[linkedAccountId][0])\r\n);\r\n\r\nexport const getDefaultState = createSelector(\r\n  getDefaultAccountId,\r\n  getDefaultCurrency,\r\n  getDefaultLinkedAccountId,\r\n  getDefaultLinkedCurrency,\r\n  (accountId, currency, linkedAccountId, linkedCurrency) => {\r\n    return {\r\n      kind: defaultKind,\r\n      isModalOpen: false,\r\n      accountId: accountId || null,\r\n      currency: currency || null,\r\n      amount: '',\r\n      linkedAccountId: linkedAccountId || null,\r\n      linkedCurrency: linkedCurrency || null,\r\n      linkedAmount: '',\r\n      tags: {\r\n        [Expense]: [],\r\n        [Income]: []\r\n      },\r\n      date: format(new Date(), 'YYYY-MM-DD'),\r\n      note: ''\r\n    };\r\n  }\r\n);\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  openTransactionInModal,\r\n  resetTransactionForm\r\n} from '../../actions/ui/form/transaction';\r\nimport { removeTransaction } from '../../actions/entities/transactions';\r\nimport TransactionList from '../../components/Transaction/List';\r\nimport { getRecentTransactions } from '../../selectors/entities/transactions';\r\nimport { getForm } from '../../selectors/ui/form/transaction';\r\nimport TransactionForm from '../Transactions/Form';\r\n\r\nconst mapStateToProps = state => ({\r\n  currentTransactionId: getForm(state).id,\r\n  transactions: getRecentTransactions(state),\r\n  isModalOpen: getForm(state).isModalOpen,\r\n  isEdit: getForm(state).id !== undefined,\r\n  EditForm: TransactionForm\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    openTransactionInModal,\r\n    resetTransactionForm,\r\n    removeTransaction\r\n  }\r\n)(TransactionList);\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  loadAccounts,\r\n  loadAccountsSuccess,\r\n  saveAccount,\r\n  saveAccountFailure,\r\n  saveAccountSuccess,\r\n  updateAccount,\r\n  removeAccount,\r\n  removeAccountRequest,\r\n  removeAccountStart,\r\n  removeAccountItemProcessed,\r\n  removeAccountFailure,\r\n  removeAccountSuccess\r\n} = createActions(\r\n  'LOAD_ACCOUNTS',\r\n  'LOAD_ACCOUNTS_SUCCESS',\r\n  'SAVE_ACCOUNT',\r\n  'SAVE_ACCOUNT_FAILURE',\r\n  'SAVE_ACCOUNT_SUCCESS',\r\n  'UPDATE_ACCOUNT',\r\n  'REMOVE_ACCOUNT',\r\n  'REMOVE_ACCOUNT_REQUEST',\r\n  'REMOVE_ACCOUNT_START',\r\n  'REMOVE_ACCOUNT_ITEM_PROCESSED',\r\n  'REMOVE_ACCOUNT_FAILURE',\r\n  'REMOVE_ACCOUNT_SUCCESS'\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport CollapsibleSection from '../../components/CollapsibleSection';\r\nimport NetWorth from './NetWorth';\r\nimport Accounts from './Accounts';\r\nimport TransactionForm from '../Transactions/Form';\r\nimport RecentTransactions from './RecentTransactions';\r\nimport { loadAccounts } from '../../actions/entities/accounts';\r\nimport { loadRecentTransactions } from '../../actions/entities/transactions';\r\nimport { loadTags } from '../../actions/entities/tags';\r\n\r\nclass Dashboard extends React.Component {\r\n  componentDidMount() {\r\n    this.props.loadTags();\r\n    this.props.loadAccounts();\r\n    this.props.loadRecentTransactions();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-full-page\">\r\n        <Grid>\r\n          <Grid.Row>\r\n            <Grid.Column computer={6} mobile={16}>\r\n              <CollapsibleSection\r\n                name=\"net_worth\"\r\n                label=\"Net Worth\"\r\n                LabelComponent={NetWorth}\r\n              >\r\n                <Accounts />\r\n              </CollapsibleSection>\r\n            </Grid.Column>\r\n            <Grid.Column computer={10} mobile={16}>\r\n              <CollapsibleSection name=\"add_tx\" label=\"New Transaction\">\r\n                <TransactionForm />\r\n              </CollapsibleSection>\r\n              <CollapsibleSection name=\"recent_tx\" label=\"Recent Transactions\">\r\n                <RecentTransactions />\r\n              </CollapsibleSection>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  loadTags: PropTypes.func,\r\n  loadAccounts: PropTypes.func,\r\n  loadRecentTransactions: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  undefined,\r\n  {\r\n    loadTags,\r\n    loadAccounts,\r\n    loadRecentTransactions\r\n  }\r\n)(Dashboard);\r\n","import { connect } from 'react-redux';\r\nimport {\r\n  openTransactionInModal,\r\n  resetTransactionForm\r\n} from '../../actions/ui/form/transaction';\r\nimport { removeTransaction } from '../../actions/entities/transactions';\r\nimport TransactionList from '../../components/Transaction/List';\r\nimport { getFilterTransactions } from '../../selectors/entities/transactions';\r\nimport { getForm } from '../../selectors/ui/form/transaction';\r\nimport TransactionForm from '../Transactions/Form';\r\n\r\nconst mapStateToProps = state => ({\r\n  currentTransactionId: getForm(state).id,\r\n  isLoading: state.ui.transaction.filter.isLoading,\r\n  transactions: getFilterTransactions(state),\r\n  isModalOpen: getForm(state).isModalOpen,\r\n  isEdit: getForm(state).id !== undefined,\r\n  EditForm: TransactionForm\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    openTransactionInModal,\r\n    resetTransactionForm,\r\n    removeTransaction\r\n  }\r\n)(TransactionList);\r\n","import React from 'react';\r\nimport { Modal, Button } from 'semantic-ui-react';\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst fromMonth = new Date(currentYear - 8, 0);\r\nconst toMonth = new Date(currentYear + 2, 11);\r\n\r\nfunction YearMonthForm({ date, localeUtils, onChange }) {\r\n  const months = localeUtils.getMonths();\r\n\r\n  const years = [];\r\n  for (let i = fromMonth.getFullYear(); i <= toMonth.getFullYear(); i += 1) {\r\n    years.push(i);\r\n  }\r\n\r\n  const handleChange = function handleChange(e) {\r\n    const { year, month } = e.target.form;\r\n    onChange(new Date(year.value, month.value));\r\n  };\r\n\r\n  return (\r\n    <form className=\"DayPicker-Caption\">\r\n      <select name=\"month\" onChange={handleChange} value={date.getMonth()}>\r\n        {months.map((month, i) => (\r\n          <option key={i} value={i}>\r\n            {month}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <select name=\"year\" onChange={handleChange} value={date.getFullYear()}>\r\n        {years.map((year, i) => (\r\n          <option key={i} value={year}>\r\n            {year}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </form>\r\n  );\r\n}\r\n\r\nclass Calendar extends React.Component {\r\n  state = {\r\n    month: null,\r\n    from: null,\r\n    to: null\r\n  };\r\n\r\n  handleDayClick = day => {\r\n    const range = DateUtils.addDayToRange(day, this.state);\r\n    this.setState(range);\r\n  };\r\n\r\n  handleYearMonthChange = month => {\r\n    this.setState({ month });\r\n  };\r\n\r\n  handleResetClick = () => {\r\n    this.setState({\r\n      month: null,\r\n      from: null,\r\n      to: null\r\n    });\r\n  };\r\n\r\n  handleApplyClick = () => {\r\n    const { from, to } = this.state;\r\n\r\n    this.props.changeFilterDate({\r\n      dateStart: from.setHours(0, 0, 0),\r\n      dateEnd: (to && to.setHours(23, 59, 59)) || from.setHours(23, 59, 59)\r\n    });\r\n    this.props.toggleFilterCalendar();\r\n  };\r\n\r\n  render() {\r\n    const { month, from, to } = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        open={this.props.isCalendarOpen}\r\n        onClose={this.props.toggleFilterCalendar}\r\n        className=\"transactions-filter-modal\"\r\n        closeIcon\r\n        size=\"small\"\r\n      >\r\n        <Modal.Header>Show transactions in range</Modal.Header>\r\n        <Modal.Content>\r\n          <DayPicker\r\n            className=\"Range\"\r\n            fixedWeeks\r\n            enableOutsideDays\r\n            numberOfMonths={this.props.isMobile ? 1 : 2}\r\n            selectedDays={[from, { from, to }]}\r\n            month={month}\r\n            captionElement={\r\n              <YearMonthForm onChange={this.handleYearMonthChange} />\r\n            }\r\n            onDayClick={this.handleDayClick}\r\n          />\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button content=\"Reset\" onClick={this.handleResetClick} />\r\n          <Button\r\n            content=\"Apply\"\r\n            onClick={this.handleApplyClick}\r\n            positive\r\n            disabled={this.state.from === null && this.state.to === null}\r\n          />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import subDays from 'date-fns/sub_days';\r\nimport startOfToday from 'date-fns/start_of_today';\r\nimport endOfToday from 'date-fns/end_of_today';\r\nimport startOfYesterday from 'date-fns/start_of_yesterday';\r\nimport endOfYesterday from 'date-fns/end_of_yesterday';\r\nimport startOfMonth from 'date-fns/start_of_month';\r\n\r\nexport enum DateFilterRangeT {\r\n  today,\r\n  yesterday,\r\n  lastWeek,\r\n  lastMonth,\r\n  thisMonth,\r\n  custom\r\n}\r\n\r\ninterface DateFilterItemT {\r\n  text: string;\r\n  start: () => Date;\r\n  end: () => Date;\r\n}\r\n\r\nfunction daysFromToday(days: number) {\r\n  return () => subDays(startOfToday(), days);\r\n}\r\n\r\nfunction firstDayOfThisMonth() {\r\n  const date = new Date();\r\n\r\n  return startOfMonth(date);\r\n}\r\n\r\nconst lastWeek = daysFromToday(7);\r\nconst lastMonth = daysFromToday(30);\r\n\r\nconst DateFilterRangeMap: { [range in DateFilterRangeT]: DateFilterItemT } = {\r\n  [DateFilterRangeT.today]: {\r\n    text: 'Today',\r\n    start: startOfToday,\r\n    end: endOfToday\r\n  },\r\n  [DateFilterRangeT.yesterday]: {\r\n    text: 'Yesterday',\r\n    start: startOfYesterday,\r\n    end: endOfYesterday\r\n  },\r\n  [DateFilterRangeT.lastWeek]: {\r\n    text: 'Last 7 days',\r\n    start: lastWeek,\r\n    end: endOfToday\r\n  },\r\n  [DateFilterRangeT.lastMonth]: {\r\n    text: 'Last 30 days',\r\n    start: lastMonth,\r\n    end: endOfToday\r\n  },\r\n  [DateFilterRangeT.thisMonth]: {\r\n    text: 'This month',\r\n    start: firstDayOfThisMonth,\r\n    end: endOfToday\r\n  },\r\n  [DateFilterRangeT.custom]: {\r\n    text: 'Custom date',\r\n    start: startOfToday,\r\n    end: endOfToday\r\n  }\r\n};\r\n\r\nexport const defaultDateFilterRange = DateFilterRangeT.lastWeek;\r\nexport const defaultStart = DateFilterRangeMap[defaultDateFilterRange].start;\r\nexport const defaultEnd = DateFilterRangeMap[defaultDateFilterRange].end;\r\n\r\nexport function getDateFilterRangeStart(key: DateFilterRangeT) {\r\n  return DateFilterRangeMap[key].start();\r\n}\r\n\r\nexport function getDateFilterRangeEnd(key: DateFilterRangeT) {\r\n  return DateFilterRangeMap[key].end();\r\n}\r\n\r\nexport function getDateRangeFilterOptions() {\r\n  return Object.entries(DateFilterRangeMap).map(([key, { text }]) => ({\r\n    key,\r\n    value: parseInt(key),\r\n    text\r\n  }));\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Modal, Button, Form, Dropdown } from 'semantic-ui-react';\r\nimport { DropdownOption } from '../../types';\r\n\r\nclass Filters extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      accounts: this.props.appliedAccounts,\r\n      tags: this.props.appliedTags\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps({ appliedAccounts, appliedTags }) {\r\n    this.setState({\r\n      accounts: appliedAccounts,\r\n      tags: appliedTags\r\n    });\r\n  }\r\n\r\n  handleAccountChange = (event, { value }) =>\r\n    this.setState({ accounts: value });\r\n  handleTagsChange = (event, { value }) => this.setState({ tags: value });\r\n\r\n  handleResetClick = () => {\r\n    this.setState({\r\n      accounts: [],\r\n      tags: []\r\n    });\r\n  };\r\n\r\n  handleApplyClick = () => {\r\n    this.props.applyFilters(this.state);\r\n    this.props.toggleFilterModal();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        open={this.props.isFilterModalOpen}\r\n        onClose={this.props.toggleFilterModal}\r\n        closeIcon\r\n        size=\"tiny\"\r\n      >\r\n        <Modal.Header>Filter transactions</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>Account</label>\r\n                <Dropdown\r\n                  multiple\r\n                  selection\r\n                  search\r\n                  closeOnChange\r\n                  onChange={this.handleAccountChange}\r\n                  options={this.props.accountOptions}\r\n                  value={this.state.accounts}\r\n                />\r\n              </Form.Field>\r\n            </Form.Group>\r\n            <Form.Group widths=\"equal\">\r\n              <Form.Field>\r\n                <label>Tags</label>\r\n                <Dropdown\r\n                  multiple\r\n                  selection\r\n                  search\r\n                  closeOnChange\r\n                  onChange={this.handleTagsChange}\r\n                  options={this.props.tagsOptions}\r\n                  value={this.state.tags}\r\n                />\r\n              </Form.Field>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button content=\"Reset\" onClick={this.handleResetClick} />\r\n          <Button content=\"Apply\" onClick={this.handleApplyClick} positive />\r\n        </Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nFilters.propTypes = {\r\n  isFilterModalOpen: PropTypes.bool,\r\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\r\n  accountOptions: PropTypes.arrayOf(DropdownOption),\r\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\r\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\r\n  toggleFilterModal: PropTypes.func,\r\n  applyFilters: PropTypes.func\r\n};\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Label } from 'semantic-ui-react';\r\n\r\nclass AppliedFilters extends React.Component {\r\n  removeAppliedAccount = accountId => () => {\r\n    this.props.applyFilters({\r\n      accounts: this.props.appliedAccounts.filter(acc => acc !== accountId),\r\n      tags: this.props.appliedTags\r\n    });\r\n  };\r\n\r\n  removeAppliedTag = tag => () => {\r\n    this.props.applyFilters({\r\n      accounts: this.props.appliedAccounts,\r\n      tags: this.props.appliedTags.filter(t => t !== tag)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (\r\n      this.props.appliedAccounts.length === 0 &&\r\n      this.props.appliedTags.length === 0\r\n    ) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"transactions-filters-applied\">\r\n        {this.props.appliedAccounts.map(accountId => (\r\n          <Label\r\n            key={accountId}\r\n            content={this.props.accountNameMap[accountId]}\r\n            icon=\"credit card\"\r\n            onRemove={this.removeAppliedAccount(accountId)}\r\n          />\r\n        ))}\r\n        {this.props.appliedTags.map(tag => (\r\n          <Label\r\n            key={tag}\r\n            content={tag}\r\n            icon=\"tag\"\r\n            onRemove={this.removeAppliedTag(tag)}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppliedFilters.propTypes = {\r\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\r\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\r\n  accountNameMap: PropTypes.object,\r\n  applyFilters: PropTypes.func\r\n};\r\n\r\nexport default AppliedFilters;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Dropdown, Button } from 'semantic-ui-react';\r\nimport Calendar from './Calendar';\r\nimport Filters from './Filters';\r\nimport AppliedFilters from './AppliedFilters';\r\nimport {\r\n  DateFilterRangeT,\r\n  getDateRangeFilterOptions,\r\n  defaultDateFilterRange,\r\n  getDateFilterRangeStart,\r\n  getDateFilterRangeEnd\r\n} from 'entities/Transaction/DateFilterRange';\r\nimport { DropdownOption } from 'components/types';\r\nimport './index.css';\r\n\r\nclass Filter extends React.Component {\r\n  options = getDateRangeFilterOptions();\r\n  lastValue = defaultDateFilterRange;\r\n\r\n  handleDateRange = (_, { value }) => {\r\n    if (value === this.lastValue) return;\r\n    if (value === DateFilterRangeT.custom) {\r\n      this.props.toggleFilterCalendar();\r\n    } else {\r\n      this.props.changeFilterDate({\r\n        dateStart: getDateFilterRangeStart(value),\r\n        dateEnd: getDateFilterRangeEnd(value)\r\n      });\r\n      this.lastValue = value;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container-header\">\r\n          <Button.Group basic fluid>\r\n            <Button\r\n              icon=\"plus\"\r\n              labelPosition=\"left\"\r\n              content=\"New\"\r\n              onClick={() => this.props.openTransactionInModal()}\r\n            />\r\n            <Dropdown\r\n              button\r\n              className=\"icon\"\r\n              options={this.options}\r\n              defaultValue={defaultDateFilterRange}\r\n              onChange={this.handleDateRange}\r\n              text={this.props.dateRangeLabel}\r\n              labeled\r\n              icon=\"calendar\"\r\n            />\r\n            <Button icon=\"filter\" onClick={this.props.toggleFilterModal} />\r\n          </Button.Group>\r\n          <Calendar {...this.props} />\r\n          <Filters {...this.props} />\r\n        </div>\r\n        <AppliedFilters {...this.props} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  isMobile: PropTypes.bool,\r\n  dateRangeLabel: PropTypes.string,\r\n  isCalendarOpen: PropTypes.bool,\r\n  isFilterModalOpen: PropTypes.bool,\r\n  appliedAccounts: PropTypes.arrayOf(PropTypes.string),\r\n  accountOptions: PropTypes.arrayOf(DropdownOption),\r\n  accountNameMap: PropTypes.object,\r\n  appliedTags: PropTypes.arrayOf(PropTypes.string),\r\n  tagsOptions: PropTypes.arrayOf(DropdownOption),\r\n  changeFilterDate: PropTypes.func,\r\n  toggleFilterCalendar: PropTypes.func,\r\n  toggleFilterModal: PropTypes.func,\r\n  applyFilters: PropTypes.func,\r\n  openTransactionInModal: PropTypes.func\r\n};\r\n\r\nexport default Filter;\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  changeFilterDate,\r\n  toggleFilterCalendar,\r\n  changeFilterPage,\r\n  toggleFilterModal,\r\n  applyFilters\r\n} = createActions(\r\n  'CHANGE_FILTER_DATE',\r\n  'TOGGLE_FILTER_CALENDAR',\r\n  'CHANGE_FILTER_PAGE',\r\n  'TOGGLE_FILTER_MODAL',\r\n  'APPLY_FILTERS'\r\n);\r\n","import { connect } from 'react-redux';\r\nimport Filter from '../../components/Transaction/Filter';\r\nimport {\r\n  changeFilterDate,\r\n  toggleFilterCalendar,\r\n  toggleFilterModal,\r\n  applyFilters\r\n} from '../../actions/ui/transaction/filter';\r\nimport { openTransactionInModal } from '../../actions/ui/form/transaction';\r\nimport { getDateLabel } from '../../selectors/ui/transaction/filter';\r\nimport {\r\n  getAccountsAsOptions,\r\n  getAccountsNameMap\r\n} from '../../selectors/entities/accounts';\r\nimport { getAllTagsOptions } from '../../selectors/entities/tags';\r\n\r\nconst mapStateToProps = state => ({\r\n  isMobile: state.ui.isMobile,\r\n  dateRangeLabel: getDateLabel(state),\r\n  isCalendarOpen: state.ui.transaction.filter.isCalendarOpen,\r\n  isFilterModalOpen: state.ui.transaction.filter.isFilterModalOpen,\r\n  accountOptions: getAccountsAsOptions(state),\r\n  accountNameMap: getAccountsNameMap(state),\r\n  appliedAccounts: state.ui.transaction.filter.applied.accounts || [],\r\n  tagsOptions: getAllTagsOptions(state),\r\n  appliedTags: state.ui.transaction.filter.applied.tags || []\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeFilterDate,\r\n    toggleFilterCalendar,\r\n    toggleFilterModal,\r\n    applyFilters,\r\n    openTransactionInModal\r\n  }\r\n)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Menu, Icon } from 'semantic-ui-react';\r\n\r\nclass Pager extends React.Component {\r\n  handlePageChange = nextPage => () => this.props.changeFilterPage(nextPage);\r\n\r\n  handlePrevClick = () => {\r\n    if (this.props.page > 0) {\r\n      this.props.changeFilterPage(this.props.page - 1);\r\n    }\r\n  };\r\n\r\n  handleNextClick = () => {\r\n    const lastPage = this.props.pages[this.props.pages.length - 1];\r\n    if (this.props.page < lastPage) {\r\n      this.props.changeFilterPage(this.props.page + 1);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.pages.length < 2) return null;\r\n\r\n    return (\r\n      <div className=\"transactions-list-pager\">\r\n        <Menu pagination>\r\n          <Menu.Item as=\"a\" icon onClick={this.handlePrevClick}>\r\n            <Icon name=\"left chevron\" />\r\n          </Menu.Item>\r\n          {this.props.pages.map(page => (\r\n            <Menu.Item\r\n              as=\"a\"\r\n              key={page}\r\n              active={page === this.props.page}\r\n              onClick={this.handlePageChange(page)}\r\n            >\r\n              {page + 1}\r\n            </Menu.Item>\r\n          ))}\r\n          <Menu.Item as=\"a\" icon onClick={this.handleNextClick}>\r\n            <Icon name=\"right chevron\" />\r\n          </Menu.Item>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nPager.propTypes = {\r\n  page: PropTypes.number,\r\n  pages: PropTypes.arrayOf(PropTypes.number),\r\n  changeFilterPage: PropTypes.func\r\n};\r\n\r\nexport default Pager;\r\n","import { connect } from 'react-redux';\r\nimport Pager from '../../components/Transaction/List/Pager';\r\nimport { changeFilterPage } from '../../actions/ui/transaction/filter';\r\nimport {\r\n  getPage,\r\n  getVisiblePages\r\n} from '../../selectors/ui/transaction/filter';\r\n\r\nconst mapStateToProps = state => ({\r\n  page: getPage(state),\r\n  pages: getVisiblePages(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeFilterPage }\r\n)(Pager);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'semantic-ui-react';\r\nimport Amount from '../../Amount';\r\n\r\nconst Footer = ({ base, income, expense }) => (\r\n  <div className=\"transactions-list-footer\">\r\n    <Table fixed basic=\"very\" unstackable>\r\n      <Table.Body>\r\n        <Table.Row>\r\n          <Table.Cell>Total income</Table.Cell>\r\n          <Table.Cell textAlign=\"right\">\r\n            <Amount code={base} value={income} />\r\n          </Table.Cell>\r\n        </Table.Row>\r\n        <Table.Row>\r\n          <Table.Cell>Total expense</Table.Cell>\r\n          <Table.Cell textAlign=\"right\">\r\n            <Amount code={base} value={expense} />\r\n          </Table.Cell>\r\n        </Table.Row>\r\n        <Table.Row>\r\n          <Table.Cell />\r\n          <Table.Cell textAlign=\"right\">\r\n            <Amount code={base} value={income + expense} />\r\n          </Table.Cell>\r\n        </Table.Row>\r\n      </Table.Body>\r\n    </Table>\r\n  </div>\r\n);\r\n\r\nFooter.propTypes = {\r\n  base: PropTypes.string,\r\n  income: PropTypes.number,\r\n  expense: PropTypes.number\r\n};\r\n\r\nexport default Footer;\r\n","import { connect } from 'react-redux';\r\nimport Footer from '../../components/Transaction/List/Footer';\r\nimport { getFilterTotal } from '../../selectors/entities/transactions';\r\nimport { getBaseCurrency } from '../../selectors/settings';\r\nimport { TransationKindT } from '../../entities/Transaction';\r\n\r\nconst mapStateToProps = state => ({\r\n  base: getBaseCurrency(state),\r\n  income: getFilterTotal(TransationKindT.Income)(state),\r\n  expense: getFilterTotal(TransationKindT.Expense)(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Footer);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport List from './List';\r\nimport Filter from './Filter';\r\nimport Pager from './Pager';\r\nimport Footer from './Footer';\r\nimport { loadAccounts } from '../../actions/entities/accounts';\r\nimport { loadTags } from '../../actions/entities/tags';\r\nimport { loadFilterTransactions } from '../../actions/entities/transactions';\r\nimport { applyFilters } from '../../actions/ui/transaction/filter';\r\n\r\nclass Transactions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.props.applyFilters({\r\n      accounts: props.match.params.accountId\r\n        ? [props.match.params.accountId]\r\n        : []\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadAccounts();\r\n    this.props.loadTags();\r\n    this.props.loadFilterTransactions();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-full-page flat search-page\">\r\n        <Filter />\r\n        <List />\r\n        <Pager />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  undefined,\r\n  {\r\n    loadAccounts,\r\n    loadTags,\r\n    loadFilterTransactions,\r\n    applyFilters\r\n  }\r\n)(Transactions);\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  fillInAccountForm,\r\n  resetAccountForm,\r\n  openAccountInModal,\r\n  changeName,\r\n  changeGroup,\r\n  changeBalance,\r\n  changeDebt,\r\n  toggleCurrency,\r\n  toggleOnDashboard\r\n} = createActions(\r\n  'FILL_IN_ACCOUNT_FORM',\r\n  'RESET_ACCOUNT_FORM',\r\n  'OPEN_ACCOUNT_IN_MODAL',\r\n  'CHANGE_NAME',\r\n  'CHANGE_GROUP',\r\n  'CHANGE_BALANCE',\r\n  'CHANGE_DEBT',\r\n  'TOGGLE_CURRENCY',\r\n  'TOGGLE_ON_DASHBOARD'\r\n);\r\n","export const getForm = state => state.ui.form.account;\r\nexport const getModal = state => ({\r\n  isOpen: state.ui.form.account.isModalOpen,\r\n  isDeleteRequest: state.ui.form.account.isDeleteRequest,\r\n  isDeleteRunning: state.ui.form.account.isDeleteRunning,\r\n  itemsToProcess: state.ui.form.account.itemsToProcess,\r\n  itemsProcessed: state.ui.form.account.itemsProcessed\r\n});\r\n","import React from 'react';\r\nimport { Button, Radio, Dropdown, Form, Progress } from 'semantic-ui-react';\r\nimport {\r\n  defaultDeleteStrategy,\r\n  getDeleteStartegyOptions,\r\n  DeleteStrategyT\r\n} from 'entities/Account';\r\n\r\nclass DeleteStrategy extends React.Component {\r\n  state = {\r\n    strategy: defaultDeleteStrategy\r\n  };\r\n\r\n  onStrategyChange = (e, { value }) => {\r\n    this.setState({ ...this.state, strategy: value });\r\n  };\r\n\r\n  onAccountChange = (e, { value }) => {\r\n    this.setState({ ...this.state, moveTo: value });\r\n  };\r\n\r\n  onProceed = () => {\r\n    this.props.removeAccount({\r\n      id: this.props.form.id,\r\n      strategy: this.state.strategy,\r\n      moveTo: this.getMoveTo()\r\n    });\r\n  };\r\n\r\n  getMoveTo = () =>\r\n    this.state.moveTo ||\r\n    (this.props.accountOptions.length && this.props.accountOptions[0].key);\r\n\r\n  render() {\r\n    const hasMultipleAccounts = this.props.accountOptions.length > 0;\r\n    return (\r\n      <React.Fragment>\r\n        <h3>You are about to delete account \"{this.props.form.name}\"</h3>\r\n        <p style={{ marginTop: '1em' }}>\r\n          What should we do with transactions linked to this account?\r\n        </p>\r\n        <Form>\r\n          {getDeleteStartegyOptions(hasMultipleAccounts).map(strategy => (\r\n            <Form.Field key={strategy.key}>\r\n              <Radio\r\n                name=\"deleteStrategy\"\r\n                label={strategy.text}\r\n                value={strategy.value}\r\n                checked={this.state.strategy === strategy.value}\r\n                onChange={this.onStrategyChange}\r\n                disabled={this.props.modal.isDeleteRunning}\r\n              />\r\n            </Form.Field>\r\n          ))}\r\n          {hasMultipleAccounts && this.state.strategy === DeleteStrategyT.Move && (\r\n            <Form.Field>\r\n              <Dropdown\r\n                selection\r\n                value={this.getMoveTo()}\r\n                options={this.props.accountOptions}\r\n                onChange={this.onAccountChange}\r\n                disabled={this.props.modal.isDeleteRunning}\r\n              />\r\n            </Form.Field>\r\n          )}\r\n          <Form.Field>\r\n            {this.props.modal.isDeleteRunning ? (\r\n              <Progress\r\n                value={this.props.modal.itemsProcessed}\r\n                total={this.props.modal.itemsToProcess}\r\n              />\r\n            ) : (\r\n              <Button\r\n                negative\r\n                labelPosition=\"right\"\r\n                icon=\"arrow right\"\r\n                content=\"Proceed\"\r\n                onClick={this.onProceed}\r\n              />\r\n            )}\r\n          </Form.Field>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeleteStrategy;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button, Header, Modal } from 'semantic-ui-react';\r\nimport { DropdownOption } from '../../types';\r\nimport DeleteStrategy from './DeleteStrategy';\r\n\r\nclass ModalForm extends React.Component {\r\n  reset = () => {\r\n    if (this.props.modal.isDeleteRunning) return false;\r\n    this.props.resetAccountForm();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        closeIcon\r\n        size=\"small\"\r\n        className=\"account-form\"\r\n        open={this.props.modal.isOpen}\r\n        onClose={this.reset}\r\n      >\r\n        <Header\r\n          icon=\"file text outline\"\r\n          content={this.props.isEdit ? 'Edit Account' : 'New Account'}\r\n        />\r\n        <Modal.Content>\r\n          {this.props.modal.isDeleteRequest ? (\r\n            <DeleteStrategy {...this.props} />\r\n          ) : (\r\n            <this.props.EditForm />\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>{this.renderModalActions()}</Modal.Actions>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n  renderModalActions() {\r\n    if (!this.props.isEdit) return;\r\n\r\n    return this.props.modal.isDeleteRequest ? (\r\n      <Button\r\n        labelPosition=\"left\"\r\n        disabled={this.props.modal.isDeleteRunning}\r\n        onClick={this.props.removeAccountRequest}\r\n        content=\"Cancel\"\r\n        icon=\"cancel\"\r\n      />\r\n    ) : (\r\n      <Button\r\n        negative\r\n        labelPosition=\"right\"\r\n        onClick={this.props.removeAccountRequest}\r\n        content=\"Delete\"\r\n        icon=\"trash\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nModalForm.propTypes = {\r\n  modal: PropTypes.shape({\r\n    isOpen: PropTypes.bool,\r\n    isDeleteRequest: PropTypes.bool,\r\n    isDeleteRunning: PropTypes.bool,\r\n    itemsToProcess: PropTypes.number,\r\n    itemsProcessed: PropTypes.number\r\n  }),\r\n  isEdit: PropTypes.bool,\r\n  resetAccountForm: PropTypes.func,\r\n  removeAccountRequest: PropTypes.func,\r\n  removeAccount: PropTypes.func,\r\n  EditForm: PropTypes.func,\r\n  accountOptions: PropTypes.arrayOf(DropdownOption).isRequired\r\n};\r\n\r\nexport default ModalForm;\r\n","import { connect } from 'react-redux';\r\nimport AccountsList from '../../components/Account/List';\r\nimport { getVisibleGroupedAccounts } from '../../selectors/entities/accounts';\r\nimport {\r\n  getCollapsedSections,\r\n  getBaseCurrency\r\n} from '../../selectors/settings';\r\nimport { toggleSectionCollapse } from '../../actions/settings';\r\nimport { openAccountInModal } from '../../actions/ui/form/account';\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps,\r\n  baseCurrency: getBaseCurrency(state),\r\n  collapsedGroups: getCollapsedSections(state),\r\n  groups: getVisibleGroupedAccounts(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    toggleSectionCollapse,\r\n    openAccountInModal\r\n  }\r\n)(AccountsList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Checkbox, Input, Form } from 'semantic-ui-react';\r\nimport Amount from '../../../components/Amount';\r\nimport Currency from '../../../entities/Currency';\r\nimport { AccountGroupT } from '../../../entities/Account';\r\n\r\nclass BalanceTable extends React.Component {\r\n  componentWillMount() {\r\n    this.updateCurrencyList(this.props.base, this.props.secondary);\r\n    this.setInitialCurrencyCheckbox(this.props.base);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.updateCurrencyList(nextProps.base, nextProps.secondary);\r\n    this.setInitialCurrencyCheckbox(nextProps.base);\r\n  }\r\n\r\n  updateCurrencyList(base, secondary) {\r\n    this.currencies = [base, ...secondary];\r\n  }\r\n\r\n  setInitialCurrencyCheckbox(base) {\r\n    if (this.props.form.currencies.length === 0) {\r\n      this.props.toggleCurrency(base);\r\n    }\r\n  }\r\n\r\n  handleCurrencyChange = (event, { value }) => {\r\n    this.props.toggleCurrency(value);\r\n  };\r\n\r\n  handleBalanceChange = code => (event, { value }) => {\r\n    this.props.changeBalance({ code, balance: value });\r\n  };\r\n\r\n  handleDebtChange = code => (event, { value }) => {\r\n    this.props.changeDebt({ code, debt: value });\r\n  };\r\n\r\n  render() {\r\n    return this.currencies.map(code => {\r\n      const { form } = this.props;\r\n      const { balance, debt } = this.props.form;\r\n      return <Form.Group\r\n        unstackable\r\n        key={code}\r\n        style={{ marginBottom: '1em', marginTop: '1em' }}\r\n      >\r\n        <Form.Field className=\"checkbox\" width={9}>\r\n          <Checkbox\r\n            value={code}\r\n            label={Currency.name(code)}\r\n            checked={this.props.form.currencies.includes(code)}\r\n            onChange={this.handleCurrencyChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Group className=\"input-right\">\r\n          {this.props.form.id ? (\r\n            <React.Fragment>\r\n              <Amount\r\n                code={code}\r\n                value={Currency.numberToCents(\r\n                  balance[code] || 0,\r\n                  code\r\n                )}\r\n              />\r\n              (form.group === AccountGroupT.Asset) && {\r\n                <Amount\r\n                  code={code}\r\n                  value={Currency.numberToCents(\r\n                    debt[code] || 0,\r\n                    code\r\n                  )}\r\n                />\r\n              }\r\n            </React.Fragment>\r\n          ) : (\r\n              <React.Fragment>\r\n                {(form.group === AccountGroupT.Asset) && <Input\r\n                  className=\"debt-input\"\r\n                  type=\"number\"\r\n                  placeholder=\"Debt\"\r\n                  step={Currency.minAmount(code)}\r\n                  value={debt[code] || ''}\r\n                  onChange={this.handleDebtChange(code)}\r\n                />}\r\n                <Input\r\n                  className={form.group === AccountGroupT.Asset ? \"value-input-small\" : ''}\r\n                  type=\"number\"\r\n                  placeholder=\"Balance\"\r\n                  labelPosition=\"right\"\r\n                  label={code}\r\n                  step={Currency.minAmount(code)}\r\n                  value={balance[code] || ''}\r\n                  onChange={this.handleBalanceChange(code)}\r\n                />\r\n              </React.Fragment>\r\n            )}\r\n        </Form.Group>\r\n      </Form.Group >\r\n    });\r\n  }\r\n}\r\n\r\nBalanceTable.propTypes = {\r\n  base: PropTypes.string.isRequired,\r\n  secondary: PropTypes.arrayOf(PropTypes.string),\r\n  form: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    balance: PropTypes.objectOf(PropTypes.string),\r\n    debt: PropTypes.objectOf(PropTypes.string),\r\n    currencies: PropTypes.arrayOf(PropTypes.string)\r\n  }).isRequired,\r\n  toggleCurrency: PropTypes.func.isRequired,\r\n  changeBalance: PropTypes.func.isRequired\r\n};\r\n\r\nexport default BalanceTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Checkbox } from 'semantic-ui-react';\r\nimport { getAccountGroupOptions, formTostate } from 'entities/Account';\r\nimport BalanceTable from './BalanceTable';\r\nimport './index.css';\r\n\r\nclass AccountForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.groups = getAccountGroupOptions();\r\n  }\r\n\r\n  handleNameChange = (event, { value }) => this.props.changeName(value);\r\n  handleGroupChange = (event, { value }) => this.props.changeGroup(value);\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.saveAccount(formTostate(this.props.form));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"account-form\" onSubmit={this.handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Input\r\n            width={9}\r\n            required\r\n            label=\"Name\"\r\n            placeholder=\"Account name\"\r\n            value={this.props.form.name}\r\n            onChange={this.handleNameChange}\r\n          />\r\n          <Form.Select\r\n            width={7}\r\n            label=\"Group\"\r\n            value={this.props.form.group}\r\n            options={this.groups}\r\n            onChange={this.handleGroupChange}\r\n          />\r\n        </Form.Group>\r\n        <BalanceTable {...this.props} />\r\n        <Form.Group unstackable>\r\n          <Form.Field width={9} style={{ paddingTop: '0.5em' }}>\r\n            <Checkbox\r\n              label=\"Show on Dashboard\"\r\n              checked={this.props.form.on_dashboard}\r\n              onChange={this.props.toggleOnDashboard}\r\n            />\r\n          </Form.Field>\r\n          <Form.Button width={7} primary fluid content=\"Save Account\" />\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nAccountForm.propTypes = {\r\n  form: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    group: PropTypes.string,\r\n    balance: PropTypes.objectOf(PropTypes.string),\r\n    currencies: PropTypes.arrayOf(PropTypes.string),\r\n    on_dashboard: PropTypes.bool\r\n  }),\r\n  base: PropTypes.string.isRequired,\r\n  secondary: PropTypes.arrayOf(PropTypes.string),\r\n  changeName: PropTypes.func,\r\n  changeGroup: PropTypes.func,\r\n  toggleOnDashboard: PropTypes.func,\r\n  toggleCurrency: PropTypes.func.isRequired,\r\n  changeBalance: PropTypes.func.isRequired,\r\n  saveAccount: PropTypes.func\r\n};\r\n\r\nexport default AccountForm;\r\n","import { connect } from 'react-redux';\r\nimport AccountForm from '../../components/Account/Form';\r\nimport {\r\n  changeName,\r\n  changeGroup,\r\n  changeBalance,\r\n  changeDebt,\r\n  toggleOnDashboard,\r\n  toggleCurrency\r\n} from '../../actions/ui/form/account';\r\nimport { saveAccount, removeAccount } from '../../actions/entities/accounts';\r\nimport {\r\n  getBaseCurrency,\r\n  getSecondaryCurrency\r\n} from '../../selectors/settings';\r\nimport { getForm } from '../../selectors/ui/form/account';\r\n\r\nconst mapStateToProps = state => ({\r\n  form: getForm(state),\r\n  base: getBaseCurrency(state),\r\n  secondary: getSecondaryCurrency(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeName,\r\n    changeGroup,\r\n    changeBalance,\r\n    changeDebt,\r\n    toggleCurrency,\r\n    toggleOnDashboard,\r\n    saveAccount,\r\n    removeAccount\r\n  }\r\n)(AccountForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\nimport {\r\n  loadAccounts,\r\n  removeAccountRequest,\r\n  removeAccount\r\n} from '../../actions/entities/accounts';\r\nimport {\r\n  openAccountInModal,\r\n  resetAccountForm\r\n} from '../../actions/ui/form/account';\r\nimport { getForm, getModal } from '../../selectors/ui/form/account';\r\nimport ModalForm from '../../components/Account/ModalForm';\r\nimport AccountsList from './List';\r\nimport AccountForm from './Form';\r\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\r\n\r\nclass Accounts extends React.Component {\r\n  componentWillMount() {\r\n    this.props.loadAccounts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-full-page flat\">\r\n        <div className=\"container-header\">\r\n          <Button.Group basic>\r\n            <Button\r\n              icon=\"plus\"\r\n              labelPosition=\"left\"\r\n              content=\"New\"\r\n              onClick={this.props.openAccountInModal}\r\n            />\r\n          </Button.Group>\r\n        </div>\r\n        <div className=\"accounts-list-wrapper\">\r\n          <AccountsList />\r\n        </div>\r\n        <ModalForm {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  form: getForm(state),\r\n  modal: getModal(state),\r\n  isEdit: getForm(state).id !== undefined,\r\n  accountOptions: getAccountsAsOptions(state).filter(\r\n    option => option.key !== getForm(state).id\r\n  ),\r\n  EditForm: AccountForm\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    loadAccounts,\r\n    openAccountInModal,\r\n    resetAccountForm,\r\n    removeAccountRequest,\r\n    removeAccount\r\n  }\r\n)(Accounts);\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  changeReportKind,\r\n  changeReportTimespan,\r\n  changeReportAccounts,\r\n  moveReportDateBackwards,\r\n  moveReportDateForwards,\r\n  loadReport,\r\n  loadReportSuccess,\r\n  loadReportFailure\r\n} = createActions(\r\n  'CHANGE_REPORT_KIND',\r\n  'CHANGE_REPORT_TIMESPAN',\r\n  'CHANGE_REPORT_ACCOUNTS',\r\n  'MOVE_REPORT_DATE_BACKWARDS',\r\n  'MOVE_REPORT_DATE_FORWARDS',\r\n  'LOAD_REPORT',\r\n  'LOAD_REPORT_SUCCESS',\r\n  'LOAD_REPORT_FAILURE'\r\n);\r\n","import format from 'date-fns/format';\r\nimport getDaysInMonth from 'date-fns/get_days_in_month';\r\nimport range from 'lodash/range';\r\nimport Currency, { ExchangeRateT } from 'entities/Currency';\r\nimport { ReportStateT, ReportDataT, ReportTimespanT } from 'entities/Report';\r\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\r\nimport { toUtcTimestamp } from 'util/timezone';\r\n\r\nconst { Expense, Income } = TransationKindT;\r\n\r\nexport default function ExpenseIncomeData(\r\n  report: ReportStateT,\r\n  transactions: TransactionStateT[],\r\n  exchangeRate: ExchangeRateT,\r\n  base: string\r\n): ReportDataT {\r\n  const labels =\r\n    report.timespan === ReportTimespanT.Yearly\r\n      ? range(0, 12).map(month => format(new Date().setMonth(month), 'MMM'))\r\n      : range(1, getDaysInMonth(report.date.start) + 1).map(day =>\r\n          `${day}`.padStart(2, '0')\r\n        );\r\n  const data = [\r\n    new Array(labels.length).fill(0), // income series\r\n    new Array(labels.length).fill(0) // expense series\r\n  ];\r\n\r\n  for (const tx of transactions) {\r\n    if (tx.kind !== Expense && tx.kind !== Income) continue;\r\n\r\n    const period = format(\r\n      toUtcTimestamp(tx.date),\r\n      report.timespan === ReportTimespanT.Yearly ? 'M' : 'D'\r\n    );\r\n    data[tx.kind === Income ? 0 : 1][parseInt(period) - 1] += Currency.convert(\r\n      Math.abs(tx.amount),\r\n      exchangeRate[tx.currency],\r\n      base,\r\n      tx.currency\r\n    );\r\n  }\r\n\r\n  return {\r\n    labels,\r\n    series: data.map(set =>\r\n      set.map(amount => Math.floor(Currency.centsToNumber(amount, base)))\r\n    )\r\n  };\r\n}\r\n","import addMonths from 'date-fns/add_months';\r\nimport addYears from 'date-fns/add_years';\r\nimport endOfMonth from 'date-fns/end_of_month';\r\nimport endOfYear from 'date-fns/end_of_year';\r\nimport format from 'date-fns/format';\r\nimport startOfMonth from 'date-fns/start_of_month';\r\nimport startOfYear from 'date-fns/start_of_year';\r\nimport subMonths from 'date-fns/sub_months';\r\nimport subYears from 'date-fns/sub_years';\r\nimport { ExchangeRateT } from 'entities/Currency';\r\nimport { toUtcTimestamp } from 'util/timezone';\r\nimport { TransactionStateT } from './Transaction';\r\nimport ExpenseIncomeDataLoader from './Report/ExpenseIncomeData';\r\nimport NetWorthDataLoader from './Report/NetWorthData';\r\nimport ExpenseTagsDataLoader from './Report/ExpenseTagsData';\r\n\r\nexport interface ReportDataT {\r\n  labels: string[];\r\n  series: number[][];\r\n  netWorthStart?: number;\r\n  netWorthEnd?: number;\r\n}\r\n\r\nexport interface ReportStateT {\r\n  kind: ReportKindT;\r\n  data: ReportDataT;\r\n  date: DateRangeT;\r\n  timespan: ReportTimespanT;\r\n  accounts: string[];\r\n  netWorthStack: number[];\r\n  isLoading: boolean;\r\n}\r\n\r\nexport enum ReportKindT {\r\n  ExpenseIncome = 'expense_income',\r\n  ExpenseTags = 'expense_tags',\r\n  NetWorth = 'net_worth'\r\n}\r\n\r\nexport enum ReportTimespanT {\r\n  Yearly = 'yearly',\r\n  Monthly = 'monthly'\r\n}\r\n\r\ninterface DateRangeT {\r\n  start: number; // timestamp\r\n  end: number; // timestamp\r\n}\r\n\r\nconst { Yearly, Monthly } = ReportTimespanT;\r\nexport const defaultKind = ReportKindT.ExpenseIncome;\r\nexport const defaultTimespan = Yearly;\r\n\r\nexport function defaultDate(timespan = defaultTimespan) {\r\n  return dateRange(new Date(), timespan);\r\n}\r\n\r\nexport function moveDateBackwards(\r\n  { start }: DateRangeT,\r\n  timespan: ReportTimespanT\r\n) {\r\n  return dateRange(\r\n    timespan === Yearly ? subYears(start, 1) : subMonths(start, 1),\r\n    timespan\r\n  );\r\n}\r\n\r\nexport function moveDateForwards(\r\n  { start }: DateRangeT,\r\n  timespan: ReportTimespanT\r\n) {\r\n  return dateRange(\r\n    timespan === Yearly ? addYears(start, 1) : addMonths(start, 1),\r\n    timespan\r\n  );\r\n}\r\n\r\nexport function kindOptions() {\r\n  return [\r\n    {\r\n      key: ReportKindT.ExpenseIncome,\r\n      value: ReportKindT.ExpenseIncome,\r\n      text: 'Expense & Income'\r\n    },\r\n    {\r\n      key: ReportKindT.ExpenseTags,\r\n      value: ReportKindT.ExpenseTags,\r\n      text: 'Expense by Tags'\r\n    },\r\n    {\r\n      key: ReportKindT.NetWorth,\r\n      value: ReportKindT.NetWorth,\r\n      text: 'Net Worth'\r\n    }\r\n  ];\r\n}\r\n\r\nexport function timespanOptions() {\r\n  return [\r\n    {\r\n      key: Yearly,\r\n      value: Yearly,\r\n      text: 'Yearly'\r\n    },\r\n    {\r\n      key: Monthly,\r\n      value: Monthly,\r\n      text: 'Monthly'\r\n    }\r\n  ];\r\n}\r\n\r\nexport function timespanLabel(date: Date, timespan: ReportTimespanT) {\r\n  return format(date, timespan === Yearly ? 'YYYY' : 'MMM, YYYY');\r\n}\r\n\r\nexport function transactionFilters({ date, accounts }: ReportStateT) {\r\n  return { date, accounts };\r\n}\r\n\r\ntype DataLoaderFn = (\r\n  report: ReportStateT,\r\n  transactions: TransactionStateT[],\r\n  exchangeRate: ExchangeRateT,\r\n  base: string,\r\n  netWorthEnd: number\r\n) => ReportDataT;\r\ntype DataLoaderMapT = { [kind in ReportKindT]: DataLoaderFn };\r\n\r\nconst DataLoaderMap: DataLoaderMapT = {\r\n  [ReportKindT.ExpenseIncome]: ExpenseIncomeDataLoader,\r\n  [ReportKindT.ExpenseTags]: ExpenseTagsDataLoader,\r\n  [ReportKindT.NetWorth]: NetWorthDataLoader\r\n};\r\n\r\nexport const loadReportData: DataLoaderFn = (report, ...rest) => {\r\n  return DataLoaderMap[report.kind](report, ...rest);\r\n};\r\n\r\nfunction dateRange(date: Date | number, timespan: ReportTimespanT): DateRangeT {\r\n  const startFn = timespan === Yearly ? startOfYear : startOfMonth;\r\n  const endFn = timespan === Yearly ? endOfYear : endOfMonth;\r\n  const tomorrow = new Date(date);\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n\r\n  return {\r\n    start: toUtcTimestamp(startFn(tomorrow)),\r\n    end: toUtcTimestamp(endFn(tomorrow))\r\n  };\r\n}\r\n","import format from 'date-fns/format';\r\nimport getDaysInMonth from 'date-fns/get_days_in_month';\r\nimport range from 'lodash/range';\r\nimport { toUtcTimestamp } from 'util/timezone';\r\nimport Currency, { ExchangeRateT } from 'entities/Currency';\r\nimport { ReportStateT, ReportDataT, ReportTimespanT } from 'entities/Report';\r\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\r\n\r\nconst { Expense, Income } = TransationKindT;\r\n\r\nexport default function NetWorthData(\r\n  report: ReportStateT,\r\n  transactions: TransactionStateT[],\r\n  exchangeRate: ExchangeRateT,\r\n  base: string,\r\n  netWorthEnd: number\r\n): ReportDataT {\r\n  const labels =\r\n    report.timespan === ReportTimespanT.Yearly\r\n      ? range(0, 12).map(month => format(new Date().setMonth(month), 'MMM'))\r\n      : range(1, getDaysInMonth(report.date.start) + 1).map(day =>\r\n          `${day}`.padStart(2, '0')\r\n        );\r\n\r\n  const data = [];\r\n  let lastPeriod: number | undefined;\r\n  for (const tx of transactions) {\r\n    if (tx.kind !== Expense && tx.kind !== Income) continue;\r\n\r\n    const period =\r\n      parseInt(\r\n        format(\r\n          toUtcTimestamp(tx.date),\r\n          report.timespan === ReportTimespanT.Yearly ? 'M' : 'D'\r\n        )\r\n      ) - 1;\r\n    if (period !== lastPeriod) {\r\n      if (lastPeriod === undefined) {\r\n        lastPeriod = period + 1;\r\n        data[lastPeriod] = netWorthEnd;\r\n      }\r\n      data[period] = data[lastPeriod];\r\n    }\r\n\r\n    lastPeriod = period;\r\n\r\n    data[period] -= Currency.convert(\r\n      tx.amount,\r\n      exchangeRate[tx.currency],\r\n      base,\r\n      tx.currency\r\n    );\r\n  }\r\n\r\n  if (lastPeriod && lastPeriod > 0) data[0] = data[lastPeriod];\r\n  if (report.date.end < Date.now() && data.length < labels.length) {\r\n    data[labels.length - 1] = data[data.length - 1];\r\n  }\r\n\r\n  return {\r\n    labels,\r\n    series: [\r\n      data.map(amount => Math.floor(Currency.centsToNumber(amount, base)))\r\n    ],\r\n    netWorthStart: data[0],\r\n    netWorthEnd\r\n  };\r\n}\r\n","import Currency, { ExchangeRateT } from 'entities/Currency';\r\nimport { TransactionStateT, TransationKindT } from 'entities/Transaction';\r\nimport { ReportStateT, ReportDataT } from 'entities/Report';\r\n\r\nexport default function ExpenseTagsData(\r\n  report: ReportStateT,\r\n  transactions: TransactionStateT[],\r\n  exchangeRate: ExchangeRateT,\r\n  base: string\r\n): ReportDataT {\r\n  const data = new Map();\r\n\r\n  for (const tx of transactions) {\r\n    if (tx.kind !== TransationKindT.Expense || !tx.tags) continue;\r\n    for (const tag of tx.tags) {\r\n      const tagAmount = data.get(tag) || 0;\r\n      const amount = Currency.convert(\r\n        Math.abs(tx.amount),\r\n        exchangeRate[tx.currency],\r\n        base,\r\n        tx.currency\r\n      );\r\n      data.set(tag, tagAmount + amount);\r\n    }\r\n  }\r\n\r\n  const sorted = new Map([...data.entries()].sort((a, b) => b[1] - a[1]));\r\n\r\n  return {\r\n    labels: [...sorted.keys()],\r\n    series: [\r\n      [...sorted.values()].map(amount =>\r\n        Math.floor(Currency.centsToNumber(amount, base))\r\n      )\r\n    ]\r\n  };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChartistGraph from 'react-chartist';\r\nimport Chartist from 'chartist';\r\nimport abbreviate from 'number-abbreviate';\r\nimport 'chartist-plugin-tooltips';\r\nimport 'chartist/dist/chartist.min.css';\r\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\r\n\r\nclass ExpenseIncome extends React.Component {\r\n  render() {\r\n    const options = {\r\n      axisY: {\r\n        labelInterpolationFnc: value => abbreviate(value, 2)\r\n      },\r\n      plugins: [\r\n        Chartist.plugins.tooltip({\r\n          class: 'mono',\r\n          currency: this.props.currency,\r\n          anchorToPoint: true\r\n        })\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <ChartistGraph\r\n        type=\"Bar\"\r\n        className=\"ct-octave mt-report-expense-income\"\r\n        data={this.props.data}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nExpenseIncome.propTypes = {\r\n  currency: PropTypes.string,\r\n  data: PropTypes.shape({\r\n    labels: PropTypes.array,\r\n    series: PropTypes.array\r\n  })\r\n};\r\n\r\nexport default ExpenseIncome;\r\n","import Chartist from 'chartist';\r\nimport 'chartist-plugin-tooltips';\r\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\r\nimport 'chartist/dist/chartist.min.css';\r\nimport abbreviate from 'number-abbreviate';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ChartistGraph from 'react-chartist';\r\n\r\nclass ExpenseTags extends React.Component {\r\n  render() {\r\n    const options = {\r\n      axisY: {\r\n        offset: 70\r\n      },\r\n      axisX: {\r\n        labelInterpolationFnc: value => abbreviate(value, 2)\r\n      },\r\n      reverseData: true,\r\n      horizontalBars: true,\r\n      plugins: [\r\n        Chartist.plugins.tooltip({\r\n          class: 'mono',\r\n          currency: this.props.currency,\r\n          anchorToPoint: true\r\n        })\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <ChartistGraph\r\n        type=\"Bar\"\r\n        className=\"mt-report-expense-tags\"\r\n        style={{ height: `${this.props.data.labels.length * 3}em` }}\r\n        data={this.props.data}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nExpenseTags.propTypes = {\r\n  currency: PropTypes.string,\r\n  data: PropTypes.shape({\r\n    labels: PropTypes.array,\r\n    series: PropTypes.array\r\n  })\r\n};\r\n\r\nexport default ExpenseTags;\r\n","import Chartist from 'chartist';\r\nimport 'chartist-plugin-tooltips';\r\nimport 'chartist-plugin-tooltips/dist/chartist-plugin-tooltip.css';\r\nimport 'chartist/dist/chartist.min.css';\r\nimport abbreviate from 'number-abbreviate';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ChartistGraph from 'react-chartist';\r\n\r\nclass NetWorth extends React.Component {\r\n  render() {\r\n    const options = {\r\n      showArea: true,\r\n      low: 0,\r\n      axisY: {\r\n        labelInterpolationFnc: value => abbreviate(value, 2)\r\n      },\r\n      plugins: [\r\n        Chartist.plugins.tooltip({\r\n          class: 'mono',\r\n          currency: this.props.currency,\r\n          anchorToPoint: true\r\n        })\r\n      ]\r\n    };\r\n\r\n    return (\r\n      <ChartistGraph\r\n        type=\"Line\"\r\n        className=\"ct-octave mt-report-net-worth\"\r\n        data={this.props.data}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNetWorth.propTypes = {\r\n  currency: PropTypes.string,\r\n  data: PropTypes.shape({\r\n    labels: PropTypes.array,\r\n    series: PropTypes.array\r\n  })\r\n};\r\n\r\nexport default NetWorth;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Loader } from 'semantic-ui-react';\r\nimport { ReportKindT } from 'entities/Report';\r\nimport ExpenseIncome from './Kind/ExpenseIncome';\r\nimport ExpenseTags from './Kind/ExpenseTags';\r\nimport NetWorth from './Kind/NetWorth';\r\nimport './index.css';\r\n\r\nclass Report extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ct-octave mt-report\">\r\n        <Loader active={this.props.isLoading} />\r\n\r\n        {!this.props.isLoading && this.renderReportByKind()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderReportByKind() {\r\n    switch (this.props.kind) {\r\n      case ReportKindT.ExpenseIncome:\r\n        return <ExpenseIncome {...this.props} />;\r\n      case ReportKindT.NetWorth:\r\n        return <NetWorth {...this.props} />;\r\n      case ReportKindT.ExpenseTags:\r\n        return <ExpenseTags {...this.props} />;\r\n      default:\r\n        return 'Not available';\r\n    }\r\n  }\r\n}\r\n\r\nReport.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  currency: PropTypes.string,\r\n  kind: PropTypes.string,\r\n  data: PropTypes.shape({\r\n    labels: PropTypes.array,\r\n    series: PropTypes.array\r\n  })\r\n};\r\n\r\nexport default Report;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Dropdown, Button } from 'semantic-ui-react';\r\n\r\nclass Navigation extends React.Component {\r\n  handleKindChange = (_, { value }) => {\r\n    this.props.changeReportKind(value);\r\n  };\r\n\r\n  handleTimespanChange = (_, { value }) => {\r\n    this.props.changeReportTimespan(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-header\">\r\n        <Button.Group basic>\r\n          <Dropdown\r\n            button\r\n            value={this.props.kind}\r\n            options={this.props.kindOptions}\r\n            onChange={this.handleKindChange}\r\n          />\r\n          <Button\r\n            icon=\"chevron left\"\r\n            onClick={this.props.moveReportDateBackwards}\r\n          />\r\n          <Dropdown\r\n            basic\r\n            button\r\n            icon={false}\r\n            text={this.props.timespanLabel}\r\n            value={this.props.timespan}\r\n            options={this.props.timespanOptions}\r\n            onChange={this.handleTimespanChange}\r\n          />\r\n          <Button\r\n            icon=\"chevron right\"\r\n            onClick={this.props.moveReportDateForwards}\r\n          />\r\n        </Button.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavigation.propTypes = {\r\n  kind: PropTypes.string,\r\n  kindOptions: PropTypes.array,\r\n  timespan: PropTypes.string,\r\n  timespanLabel: PropTypes.string,\r\n  timespanOptions: PropTypes.array,\r\n  changeReportKind: PropTypes.func,\r\n  changeReportTimespan: PropTypes.func,\r\n  moveReportDateBackwards: PropTypes.func,\r\n  moveReportDateForwards: PropTypes.func\r\n};\r\n\r\nexport default Navigation;\r\n","import { timespanLabel } from 'entities/Report';\r\n\r\nexport const getReport = state => state.ui.report;\r\nexport const getTimespanLabel = state => {\r\n  const startDate = new Date(state.ui.report.date.start);\r\n  startDate.setDate(startDate.getDate() + 1);\r\n  return timespanLabel(startDate, state.ui.report.timespan);\r\n};\r\n","import { connect } from 'react-redux';\r\nimport Navigation from 'components/Report/Navigation';\r\nimport {\r\n  changeReportKind,\r\n  changeReportTimespan,\r\n  moveReportDateBackwards,\r\n  moveReportDateForwards\r\n} from 'actions/ui/report';\r\nimport { getTimespanLabel } from 'selectors/ui/report';\r\nimport { kindOptions, timespanOptions } from 'entities/Report';\r\n\r\nconst mapStateToProps = state => ({\r\n  kind: state.ui.report.kind,\r\n  kindOptions: kindOptions(),\r\n  timespan: state.ui.report.timespan,\r\n  timespanOptions: timespanOptions(),\r\n  timespanLabel: getTimespanLabel(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeReportKind,\r\n    changeReportTimespan,\r\n    moveReportDateBackwards,\r\n    moveReportDateForwards\r\n  }\r\n)(Navigation);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nclass Filter extends React.Component {\r\n  handleAccountsChange = (_, { value }) => {\r\n    this.props.changeReportAccounts(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-footer\">\r\n        <Dropdown\r\n          multiple\r\n          selection\r\n          fluid\r\n          placeholder=\"Specify accounts\"\r\n          value={this.props.accounts}\r\n          options={this.props.accountOptions}\r\n          onChange={this.handleAccountsChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  accounts: PropTypes.array,\r\n  accountOptions: PropTypes.array,\r\n  changeReportAccounts: PropTypes.func\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from 'react-redux';\r\nimport Filter from '../../components/Report/Filter';\r\nimport { changeReportAccounts } from '../../actions/ui/report';\r\nimport { getAccountsAsOptions } from '../../selectors/entities/accounts';\r\n\r\nconst mapStateToProps = state => ({\r\n  accounts: state.ui.report.accounts,\r\n  accountOptions: getAccountsAsOptions(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeReportAccounts }\r\n)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadReport } from 'actions/ui/report';\r\nimport { loadAccounts } from 'actions/entities/accounts';\r\nimport { getBaseCurrencySymbol } from 'selectors/settings';\r\nimport Report from 'components/Report';\r\nimport Navigation from './Navigation';\r\nimport Filter from './Filter';\r\n\r\nclass Reports extends React.Component {\r\n  componentWillMount() {\r\n    this.props.loadAccounts();\r\n    this.props.loadReport();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-full-page flat\">\r\n        <Navigation />\r\n        <Report {...this.props} />\r\n        <Filter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.ui.report.isLoading,\r\n  currency: getBaseCurrencySymbol(state),\r\n  kind: state.ui.report.kind,\r\n  data: state.ui.report.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadAccounts, loadReport }\r\n)(Reports);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Dropdown, Form } from 'semantic-ui-react';\r\nimport Currency from '../../../entities/Currency';\r\n\r\nclass Input extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.options = Currency.options();\r\n    this.updateSecondaryOptions(props.base);\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.updateSecondaryOptions(props.base);\r\n  }\r\n\r\n  updateSecondaryOptions(base) {\r\n    this.secondaryOptions = this.options.filter(option => option.key !== base);\r\n  }\r\n\r\n  handleBaseChange = (event, { value }) => {\r\n    this.props.changeSettingsCurrency({\r\n      base: value,\r\n      secondary: this.props.secondary\r\n    });\r\n  };\r\n\r\n  handleSecondaryChange = (event, { value }) => {\r\n    this.props.changeSettingsCurrency({\r\n      base: this.props.base,\r\n      secondary: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <label>Base Currency</label>\r\n            <Dropdown\r\n              search\r\n              selection\r\n              onChange={this.handleBaseChange}\r\n              options={this.options}\r\n              value={this.props.base}\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Additional Currencies (optional)</label>\r\n            <Dropdown\r\n              placeholder=\"Select additional currencies\"\r\n              search\r\n              selection\r\n              multiple\r\n              renderLabel={item => item.key}\r\n              closeOnChange\r\n              onChange={this.handleSecondaryChange}\r\n              options={this.secondaryOptions}\r\n              value={this.props.secondary}\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nInput.propTypes = {\r\n  base: PropTypes.string,\r\n  secondary: PropTypes.arrayOf(PropTypes.string),\r\n  changeSettingsCurrency: PropTypes.func\r\n};\r\n\r\nexport default Input;\r\n","import { connect } from 'react-redux';\r\nimport { changeSettingsCurrency } from '../../../actions/settings';\r\nimport {\r\n  getBaseCurrency,\r\n  getSecondaryCurrency\r\n} from '../../../selectors/settings';\r\nimport Input from '../../../components/Settings/Currency/Input';\r\n\r\nconst mapStateToProps = state => ({\r\n  base: getBaseCurrency(state),\r\n  secondary: getSecondaryCurrency(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changeSettingsCurrency }\r\n)(Input);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nconst ExchangeRateGrid = props => {\r\n  const currencies = [props.base, ...props.secondary];\r\n  return (\r\n    <Table celled unstackable definition>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell />\r\n          {currencies.map(code => (\r\n            <Table.HeaderCell key={code} textAlign=\"center\" content={code} />\r\n          ))}\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {currencies.map(code => (\r\n          <Table.Row key={code}>\r\n            <Table.Cell textAlign=\"center\" content={code} />\r\n            {currencies.map(other => {\r\n              const rate = props.exchangeRate[other] / props.exchangeRate[code];\r\n              return (\r\n                <Table.Cell\r\n                  key={`${code}-${other}`}\r\n                  disabled={code === other}\r\n                  textAlign=\"center\"\r\n                  content={Number(rate).toLocaleString(undefined, {\r\n                    minimumFractionDigits: 4,\r\n                    maximumFractionDigits: rate < 0.001 ? 6 : 4\r\n                  })}\r\n                />\r\n              );\r\n            })}\r\n          </Table.Row>\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nExchangeRateGrid.propTypes = {\r\n  base: PropTypes.string,\r\n  secondary: PropTypes.arrayOf(PropTypes.string),\r\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\r\n};\r\n\r\nexport default ExchangeRateGrid;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'semantic-ui-react';\r\n\r\nclass ExchangeRateTable extends React.Component {\r\n  render() {\r\n    const { base, secondary, exchangeRate } = this.props;\r\n    return (\r\n      <Table basic>\r\n        <Table.Body>\r\n          {secondary.map(code => (\r\n            <Table.Row key={code}>\r\n              <Table.Cell>\r\n                1 {code} = {Number(1 / exchangeRate[code]).toFixed(6)} {base}\r\n              </Table.Cell>\r\n              <Table.Cell>\r\n                1 {base} = {exchangeRate[code]} {code}\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          ))}\r\n        </Table.Body>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nExchangeRateTable.propTypes = {\r\n  base: PropTypes.string,\r\n  secondary: PropTypes.arrayOf(PropTypes.string),\r\n  exchangeRate: PropTypes.objectOf(PropTypes.number)\r\n};\r\n\r\nexport default ExchangeRateTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Segment, Dimmer, Loader, Responsive, Button } from 'semantic-ui-react';\r\nimport ExchangeRateGrid from './ExchangeRateGrid';\r\nimport ExchangeRateTable from './ExchangeRateTable';\r\nimport './index.css';\r\n\r\nconst ExchangeRate = props =>\r\n  props.secondary.length > 0 && (\r\n    <Segment basic className=\"exchange-rate-table\">\r\n      <Dimmer inverted active={props.isLoading}>\r\n        <Loader />\r\n      </Dimmer>\r\n      <Responsive minWidth={768}>\r\n        <ExchangeRateGrid {...props} />\r\n      </Responsive>\r\n      <Responsive maxWidth={767}>\r\n        <ExchangeRateTable {...props} />\r\n      </Responsive>\r\n      <Button\r\n        basic\r\n        content=\"Update exchange rate\"\r\n        icon=\"refresh\"\r\n        onClick={props.updateExchangeRate}\r\n      />\r\n    </Segment>\r\n  );\r\n\r\nExchangeRate.propTypes = {\r\n  base: PropTypes.string,\r\n  secondary: PropTypes.arrayOf(PropTypes.string),\r\n  isLoading: PropTypes.bool,\r\n  exchangeRate: PropTypes.objectOf(PropTypes.number),\r\n  updateExchangeRate: PropTypes.func\r\n};\r\n\r\nexport default ExchangeRate;\r\n","import { connect } from 'react-redux';\r\nimport { updateExchangeRate } from '../../../actions/settings';\r\nimport {\r\n  getBaseCurrency,\r\n  getSecondaryCurrency,\r\n  getExchangeRate\r\n} from '../../../selectors/settings';\r\nimport ExchangeRate from '../../../components/Settings/Currency/ExchangeRate';\r\n\r\nconst mapStateToProps = state => ({\r\n  base: getBaseCurrency(state),\r\n  secondary: getSecondaryCurrency(state),\r\n  exchangeRate: getExchangeRate(state),\r\n  isLoading: state.ui.settings.isExchangeLoading\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateExchangeRate }\r\n)(ExchangeRate);\r\n","const UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\nexport default num => {\r\n  if (!Number.isFinite(num)) {\r\n    throw new TypeError(`Expected a finite number, got ${typeof num}: ${num}`);\r\n  }\r\n\r\n  const neg = num < 0;\r\n\r\n  if (neg) {\r\n    num = -num;\r\n  }\r\n\r\n  if (num < 1) {\r\n    return (neg ? '-' : '') + num + ' B';\r\n  }\r\n\r\n  const exponent = Math.min(Math.floor(Math.log10(num) / 3), UNITS.length - 1);\r\n  const numStr = Number((num / Math.pow(1000, exponent)).toPrecision(3));\r\n  const unit = UNITS[exponent];\r\n\r\n  return (neg ? '-' : '') + numStr + ' ' + unit;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport prettyBytes from '../../util/PrettyBytes';\r\nimport { Button, Progress, Message } from 'semantic-ui-react';\r\nimport './index.css';\r\n\r\nclass DataImport extends React.Component {\r\n  handleFileChange = event => this.props.openImportFile(event.target.files[0]);\r\n  handleOpenFile = () => this.fileInput.click();\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"mt-dataImport\">\r\n        <p>Import transactions from a CSV file.</p>\r\n        {this.props.error && (\r\n          <Message\r\n            error\r\n            icon=\"warning circle\"\r\n            header=\"Failed to import\"\r\n            content={this.props.error}\r\n          />\r\n        )}\r\n        {!this.props.isFileSelected && (\r\n          <React.Fragment>\r\n            <Button\r\n              content=\"Open File\"\r\n              icon=\"file text\"\r\n              onClick={this.handleOpenFile}\r\n            />\r\n            <input\r\n              type=\"file\"\r\n              accept=\"text/csv\"\r\n              ref={input => {\r\n                this.fileInput = input;\r\n              }}\r\n              onChange={this.handleFileChange}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        {this.props.isFileSelected && (\r\n          <React.Fragment>\r\n            <p>\r\n              Selected file:{' '}\r\n              <strong>\r\n                {this.props.filename} ({prettyBytes(this.props.filesize)})\r\n              </strong>\r\n            </p>\r\n            {!this.props.isProcessing && (\r\n              <Button.Group>\r\n                <Button onClick={this.props.discardImportFile}>\r\n                  Discard File\r\n                </Button>\r\n                <Button.Or />\r\n                <Button onClick={this.props.startDataImport} positive>\r\n                  Start Import\r\n                </Button>\r\n              </Button.Group>\r\n            )}\r\n            {this.props.isProcessing && (\r\n              <Progress\r\n                active\r\n                indicating\r\n                autoSuccess\r\n                total={this.props.linesToProcess}\r\n                value={this.props.linesProcessed}\r\n              />\r\n            )}\r\n          </React.Fragment>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDataImport.propTypes = {\r\n  isFileSelected: PropTypes.bool,\r\n  isProcessing: PropTypes.bool,\r\n  filename: PropTypes.string,\r\n  filesize: PropTypes.number,\r\n  linesToProcess: PropTypes.number,\r\n  linesProcessed: PropTypes.number,\r\n  error: PropTypes.string,\r\n  openImportFile: PropTypes.func,\r\n  discardImportFile: PropTypes.func,\r\n  startDataImport: PropTypes.func\r\n};\r\n\r\nexport default DataImport;\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  openImportFile,\r\n  discardImportFile,\r\n  startDataImport,\r\n  importFileReadSuccess,\r\n  importLineProcessed,\r\n  importFailure\r\n} = createActions(\r\n  'OPEN_IMPORT_FILE',\r\n  'DISCARD_IMPORT_FILE',\r\n  'START_DATA_IMPORT',\r\n  'IMPORT_FILE_READ_SUCCESS',\r\n  'IMPORT_LINE_PROCESSED',\r\n  'IMPORT_FAILURE'\r\n);\r\n","export const getImportFile = state => state.ui.dataImport.file;\r\n","import { connect } from 'react-redux';\r\nimport DataImport from '../../components/DataImport';\r\nimport {\r\n  openImportFile,\r\n  discardImportFile,\r\n  startDataImport\r\n} from '../../actions/ui/dataImport';\r\nimport { getImportFile } from '../../selectors/ui/dataImport';\r\n\r\nconst mapStateToProps = state => {\r\n  const file = getImportFile(state);\r\n  return {\r\n    isFileSelected: state.ui.dataImport.isFileSelected,\r\n    isProcessing: state.ui.dataImport.isProcessing,\r\n    linesToProcess: state.ui.dataImport.linesToProcess,\r\n    linesProcessed: state.ui.dataImport.linesProcessed,\r\n    filename: file && file.name,\r\n    filesize: file && file.size,\r\n    error: state.ui.dataImport.error\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    openImportFile,\r\n    discardImportFile,\r\n    startDataImport\r\n  }\r\n)(DataImport);\r\n","import { createAction } from 'typesafe-actions';\r\n\r\nexport const signOut = createAction('user/ui/sign_out/SIGN_OUT_REQUEST');\r\nexport const signOutSuccess = createAction('user/ui/sign_out/SIGN_OUT_SUCCESS');\r\nexport const signOutFailure = createAction(\r\n  'user/ui/sign_out/SIGN_OUT_FAILURE',\r\n  resolve => (error: Error) => resolve(error)\r\n);\r\n","import { RootStateT } from 'reducers';\r\n\r\nexport const isDemoUser = ({ user }: RootStateT) => user.isDemoUser;\r\nexport const isSignedIn = ({ user }: RootStateT) => user.isSignedIn;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Popup, Button } from 'semantic-ui-react';\r\nimport { signOut } from 'features/user/state/ui/SignOut.action';\r\nimport { isSignedIn, isDemoUser } from 'features/user/state/User.selector';\r\n\r\nclass User extends React.Component {\r\n  render() {\r\n    if (this.props.isSignOutComplete) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <Popup\r\n        on=\"click\"\r\n        trigger={\r\n          <Button\r\n            content={this.signOutButtonLabel()}\r\n            icon={this.signOutButtonIcon()}\r\n            labelPosition=\"right\"\r\n          />\r\n        }\r\n        header=\"Local data will de deleted!\"\r\n        content={\r\n          <Button\r\n            content=\"Confirm\"\r\n            negative\r\n            style={{ marginTop: '1em' }}\r\n            floated=\"right\"\r\n            loading={this.props.isSignOutRunning}\r\n            disabled={this.props.isSignOutRunning}\r\n            onClick={this.props.signOut}\r\n          />\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  signOutButtonLabel() {\r\n    if (this.props.isDemo) return 'Reset demo';\r\n\r\n    return this.props.isAuthenticated ? 'Sign out' : 'Delete data';\r\n  }\r\n\r\n  signOutButtonIcon() {\r\n    if (this.props.isDemo) return 'refresh';\r\n\r\n    return this.props.isAuthenticated ? 'sign out' : 'trash';\r\n  }\r\n}\r\n\r\nUser.propTypes = {\r\n  isDemo: PropTypes.bool,\r\n  isAuthenticated: PropTypes.bool,\r\n  isSignOutRunning: PropTypes.bool,\r\n  isSignOutComplete: PropTypes.bool,\r\n  signOut: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isDemo: isDemoUser(state),\r\n  isAuthenticated: isSignedIn(state),\r\n  isSignOutRunning: state.user.ui.signOut.signOutState === 'REQUEST',\r\n  isSignOutComplete: state.user.ui.signOut.signOutState === 'COMPLETE'\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signOut }\r\n)(User);\r\n","import Dashboard from '../containers/Dashboard';\r\nimport Transactions from '../containers/Transactions';\r\nimport Accounts from '../containers/Accounts';\r\nimport Reports from '../containers/Reports';\r\nimport Settings from '../containers/Settings';\r\nimport WorkInProgress from '../containers/WorkInProgress';\r\n\r\nexport default [\r\n  {\r\n    path: '/',\r\n    exact: true,\r\n    label: 'Fintest Dashboard',\r\n    icon: 'newspaper',\r\n    component: Dashboard\r\n  },\r\n  {\r\n    path: '/transactions/:accountId?',\r\n    link: '/transactions',\r\n    exact: false,\r\n    label: 'Transactions',\r\n    icon: 'exchange',\r\n    component: Transactions\r\n  },\r\n  {\r\n    path: '/accounts',\r\n    exact: false,\r\n    label: 'Accounts',\r\n    icon: 'credit card',\r\n    component: Accounts\r\n  },\r\n  {\r\n    path: '/reports',\r\n    exact: false,\r\n    label: 'Reports',\r\n    icon: 'line chart',\r\n    component: Reports\r\n  },\r\n  {\r\n    path: '/budget',\r\n    exact: false,\r\n    label: 'Budget',\r\n    icon: 'shopping basket',\r\n    component: WorkInProgress\r\n  },\r\n  {\r\n    path: '/settings',\r\n    exact: true,\r\n    label: 'Settings',\r\n    icon: 'options',\r\n    component: Settings\r\n  }\r\n];\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\nexport default () => (\r\n  <Message\r\n    size=\"large\"\r\n    icon=\"hourglass half\"\r\n    header=\"Work in Progress\"\r\n    content=\"This page is not ready yet, check back later 😉\"\r\n  />\r\n);\r\n","import React from 'react';\r\nimport CurrencyInput from './Currency/Input';\r\nimport CurrenchExchangeRate from './Currency/ExchangeRate';\r\nimport DataImport from './DataImport';\r\nimport User from './User';\r\nimport CollapsibleSection from '../../components/CollapsibleSection';\r\n\r\nconst Settings = () => (\r\n  <div className=\"container-full-page mt-settings\">\r\n    <CollapsibleSection name=\"settings_currency\" label=\"Currency\">\r\n      <CurrencyInput />\r\n      <CurrenchExchangeRate />\r\n    </CollapsibleSection>\r\n    <CollapsibleSection name=\"settings_import\" label=\"Data Import\">\r\n      <DataImport />\r\n    </CollapsibleSection>\r\n    <CollapsibleSection name=\"settings_user\" label=\"User\">\r\n      <User />\r\n    </CollapsibleSection>\r\n  </div>\r\n);\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\nimport { Redirect, Link, RouteProps } from 'react-router-dom';\r\nimport {\r\n  Header,\r\n  Divider,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Message,\r\n  Loader\r\n} from 'semantic-ui-react';\r\nimport { AsyncOperationStateT } from 'typings/async';\r\nimport {\r\n  changeEmail,\r\n  changeCode,\r\n  sendCode,\r\n  verifyCode,\r\n  finishAuth\r\n} from 'features/user/state/ui/SignIn.action';\r\nimport './index.css';\r\n\r\nexport interface SignInPropsT {\r\n  isSignedIn: boolean;\r\n  sendCodeStatus?: AsyncOperationStateT;\r\n  verifyCodeStatus?: AsyncOperationStateT;\r\n  email: string;\r\n  code: string;\r\n  error?: string;\r\n  changeEmail: typeof changeEmail;\r\n  changeCode: typeof changeCode;\r\n  sendCode: typeof sendCode;\r\n  verifyCode: typeof verifyCode;\r\n  finishAuth: typeof finishAuth;\r\n}\r\n\r\nclass Auth extends React.Component<SignInPropsT & RouteProps> {\r\n  componentDidMount() {\r\n    if (this.props.location && this.props.location.hash) {\r\n      this.props.finishAuth();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isSignedIn) return <Redirect to=\"/\" />;\r\n    if (this.props.location && this.props.location.hash) {\r\n      return (\r\n        <Loader\r\n          active\r\n          content=\"Synchronizing data, this might take a moment...\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-raised-desktop\">\r\n        <Header as=\"h2\" icon=\"id card outline\" content=\"Sign In\" />\r\n        <Divider />\r\n        {this.props.error && (\r\n          <Message error>\r\n            <Message.Header>Error</Message.Header>\r\n            <Message.Content>{this.props.error}</Message.Content>\r\n          </Message>\r\n        )}\r\n        {this.props.sendCodeStatus !== 'SUCCESS'\r\n          ? this.renderSendCodeForm()\r\n          : this.renderVerifyCodeForm()}\r\n        <Divider />\r\n        <p>\r\n          <Link to=\"/\">Back</Link>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSendCodeForm = () => (\r\n    <React.Fragment>\r\n      <p>\r\n        Please provide your email address and we will send you a verification\r\n        code for sign in.\r\n      </p>\r\n      <Form onSubmit={this.props.sendCode}>\r\n        <div className=\"auth--input-field\">\r\n          <Input\r\n            fluid\r\n            required\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            icon=\"mail\"\r\n            iconPosition=\"left\"\r\n            value={this.props.email}\r\n            onChange={(_, { value }) => this.props.changeEmail(value)}\r\n            disabled={this.props.sendCodeStatus === 'REQUEST'}\r\n            action={{\r\n              primary: true,\r\n              content: 'Send Code',\r\n              loading: this.props.sendCodeStatus === 'REQUEST'\r\n            }}\r\n          />\r\n        </div>\r\n      </Form>\r\n      <Header as=\"h3\">Why do I need to sign in?</Header>\r\n      <p style={{ marginTop: '1em' }}>\r\n        After you sign in for the first time we will create a new database for\r\n        you hosted in the cloud. This database will be used to synchronize your\r\n        data among different devices as well as for back up.\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n\r\n  renderVerifyCodeForm = () => (\r\n    <Form onSubmit={this.props.verifyCode}>\r\n      <p>An email with the code has been sent to {this.props.email}</p>\r\n      <div className=\"auth--input-field\">\r\n        <Input\r\n          fluid\r\n          required\r\n          placeholder=\"Your Code\"\r\n          type=\"number\"\r\n          icon=\"lock\"\r\n          iconPosition=\"left\"\r\n          value={this.props.code}\r\n          onChange={(_, { value }) => this.props.changeCode(value)}\r\n          disabled={this.props.verifyCodeStatus === 'REQUEST'}\r\n          action={\r\n            <Button\r\n              primary\r\n              content=\"Sign In\"\r\n              loading={this.props.verifyCodeStatus === 'REQUEST'}\r\n            />\r\n          }\r\n        />\r\n        <Button basic as=\"a\">\r\n          Didn't get the code?\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Auth;\r\n","import { createAction } from 'typesafe-actions';\r\n\r\nexport const changeEmail = createAction(\r\n  'user/ui/sign_in/CHANGE_EMAIL',\r\n  resolve => (email: string) => resolve(email)\r\n);\r\nexport const changeCode = createAction(\r\n  'user/ui/sign_in/CHANGE_CODE',\r\n  resolve => (code: string) => resolve(code)\r\n);\r\nexport const sendCode = createAction('user/ui/sign_in/SEND_CODE');\r\nexport const sendCodeSuccess = createAction(\r\n  'user/ui/sign_in/SEND_CODE_SUCCESS'\r\n);\r\nexport const sendCodeFailure = createAction(\r\n  'user/ui/sign_in/SEND_CODE_FAILURE',\r\n  resolve => (error: Error) => resolve(error)\r\n);\r\nexport const verifyCode = createAction('user/ui/sign_in/VERIFY_CODE');\r\nexport const verifyCodeSuccess = createAction(\r\n  'user/ui/sign_in/VERIFY_CODE_SUCCESS'\r\n);\r\nexport const verifyCodeFailure = createAction(\r\n  'user/ui/sign_in/VERIFY_CODE_FAILURE',\r\n  resolve => (error: Error) => resolve(error)\r\n);\r\nexport const finishAuth = createAction('user/ui/sign_in/FINISH_AUTH');\r\n","import { connect } from 'react-redux';\r\nimport SignIn from 'features/user/components/SignIn';\r\nimport {\r\n  changeEmail,\r\n  changeCode,\r\n  sendCode,\r\n  verifyCode,\r\n  finishAuth\r\n} from 'features/user/state/ui/SignIn.action';\r\nimport { RootStateT } from 'reducers';\r\n\r\nconst mapStateToProps = ({ user }: RootStateT) => ({\r\n  ...user.ui.signIn,\r\n  isSignedIn: user.isSignedIn\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeEmail,\r\n    changeCode,\r\n    sendCode,\r\n    verifyCode,\r\n    finishAuth\r\n  }\r\n)(SignIn);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Divider, Header } from 'semantic-ui-react';\r\nimport CurrencyInput from '../Settings/Currency/Input';\r\nimport CurrencyExchangeRate from '../Settings/Currency/ExchangeRate';\r\nimport AccountForm from '../Accounts/Form';\r\nimport AccountList from '../Accounts/List';\r\nimport { completeSetup } from '../../actions/settings';\r\nimport { loadAccounts } from '../../actions/entities/accounts';\r\nimport { getAccountsList } from '../../selectors/entities/accounts';\r\nimport { isSignedIn } from 'features/user/state/User.selector';\r\n\r\nclass InitialSetup extends React.Component {\r\n  componentDidMount() {\r\n    this.props.loadAccounts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-raised-desktop\">\r\n        <Header as=\"h2\" icon=\"settings\" content=\"Fintest Setup\" />\r\n        <Divider />\r\n        {!this.props.isAuthenticated && (\r\n          <p>\r\n            <Link to=\"/auth\">Sign in</Link> if you want to sync your data with\r\n            the cloud. You may also use the tracker without signing in. Your\r\n            data will be stored only on current device in this case. You can\r\n            sign in and sync your data any time later.\r\n          </p>\r\n        )}\r\n        <Header as=\"h2\">Currencies</Header>\r\n        <p>\r\n          Select your base currency — the currency which will be used by\r\n          default.\r\n          <br />\r\n          You can also select any number of additional currencies, if you use\r\n          them.\r\n        </p>\r\n        <CurrencyInput />\r\n        <CurrencyExchangeRate />\r\n        <Header as=\"h2\">Accounts</Header>\r\n        <p>\r\n          Create accounts that you would like to keep track of.\r\n          <br />\r\n          It could be cash in your wallet, bank accounts, credit cards or even a\r\n          loan to your friend.\r\n        </p>\r\n        <AccountForm />\r\n        {this.props.accounts.length > 0 && (\r\n          <div style={{ margin: '1em' }}>\r\n            <AccountList />\r\n            <div className=\"form-submit\">\r\n              <Button\r\n                primary\r\n                content=\"Finish\"\r\n                onClick={this.props.completeSetup}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nInitialSetup.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  accounts: PropTypes.arrayOf(PropTypes.object),\r\n  loadAccounts: PropTypes.func,\r\n  completeSetup: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: isSignedIn(state),\r\n  accounts: getAccountsList(state)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loadAccounts, completeSetup }\r\n)(InitialSetup);\r\n","import React from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { Icon, Menu } from 'semantic-ui-react';\r\nimport routes from '../router/routes';\r\n\r\nconst SidebarMenu = ({ isOpen, toggleSidebar }) => (\r\n  <nav className={isOpen ? 'open' : 'closed'} onClick={toggleSidebar}>\r\n    <Menu fluid color=\"blue\" vertical icon=\"labeled\">\r\n      {routes.map(route => (\r\n        <Route\r\n          key={route.path}\r\n          exact={route.exact}\r\n          path={route.path}\r\n          children={({ match }) => (\r\n            <Menu.Item as={Link} to={route.link || route.path} active={!!match}>\r\n              <Icon name={route.icon} />\r\n              {route.label}\r\n            </Menu.Item>\r\n          )}\r\n        />\r\n      ))}\r\n    </Menu>\r\n  </nav>\r\n);\r\n\r\nexport default SidebarMenu;\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './index.css';\r\n\r\nconst Logo = () => (\r\n  <div className=\"logo\">\r\n    <img src={logo} alt=\"Money Tracker\" />\r\n  </div>\r\n);\r\n\r\nexport default Logo;\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const toggleSidebar = createAction('TOGGLE_SIDEBAR');\r\n","import { createActions } from 'redux-actions';\r\n\r\nexport const {\r\n  dismissSyncWarning,\r\n  setPendingChangesFlag,\r\n  sync,\r\n  syncRequest,\r\n  syncSuccess,\r\n  syncFailure\r\n} = createActions(\r\n  'DISMISS_SYNC_WARNING',\r\n  'SET_PENDING_CHANGES_FLAG',\r\n  'SYNC',\r\n  'SYNC_REQUEST',\r\n  'SYNC_SUCCESS',\r\n  'SYNC_FAILURE'\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Icon, Header } from 'semantic-ui-react';\r\nimport Logo from '../Logo';\r\nimport { toggleSidebar } from '../../actions/ui/sidebar';\r\nimport { sync } from '../../actions/ui/sync';\r\nimport { isSignedIn } from 'features/user/state/User.selector';\r\nimport './index.css';\r\n\r\nconst AppHeader = ({\r\n  label,\r\n  isMobile,\r\n  isAuthenticated,\r\n  isSyncRunning,\r\n  hasPendingChanges,\r\n  toggleSidebar,\r\n  sync\r\n}) => (\r\n  <header>\r\n    <Header>\r\n      {isMobile && <Icon name=\"bars\" onClick={toggleSidebar} />}\r\n      {!isMobile && <Logo />}\r\n      <Header.Content as=\"h2\">{label}</Header.Content>\r\n      {isAuthenticated &&\r\n        (isSyncRunning ? (\r\n          <Icon name=\"refresh\" loading />\r\n        ) : (\r\n          <Icon\r\n            name=\"refresh\"\r\n            color={hasPendingChanges ? 'olive' : undefined}\r\n            onClick={sync}\r\n            style={{ cursor: 'pointer' }}\r\n          />\r\n        ))}\r\n    </Header>\r\n  </header>\r\n);\r\n\r\nAppHeader.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  isMobile: PropTypes.bool,\r\n  isAuthenticated: PropTypes.bool,\r\n  isSyncRunning: PropTypes.bool,\r\n  toggleSidebar: PropTypes.func,\r\n  sync: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  ...ownProps,\r\n  isMobile: state.ui.isMobile,\r\n  isAuthenticated: isSignedIn(state),\r\n  isSyncRunning: state.ui.sync.isRunning,\r\n  hasPendingChanges: state.ui.sync.hasPendingChanges\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { toggleSidebar, sync }\r\n)(AppHeader);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Message, Button } from 'semantic-ui-react';\r\nimport { isDemoUser } from 'features/user/state/User.selector';\r\n\r\nclass DemoNotice extends React.Component {\r\n  render() {\r\n    if (!this.props.isVisible) return null;\r\n\r\n    return (\r\n      <Message\r\n        size=\"large\"\r\n        icon=\"user circle outline\"\r\n        header=\"Welcome to demo account!\"\r\n        content={\r\n          <div style={{ marginTop: '0.5em' }}>\r\n            <p>\r\n              You are logged in as a demo user with sample data generated to\r\n              show you how things might look like.\r\n            </p>\r\n            <p>\r\n              All the changes you make will only be stored locally on your\r\n              device.\r\n            </p>\r\n            <p>\r\n              <Button\r\n                as=\"a\"\r\n                href=\"https://app.moneytracker.cc\"\r\n                icon=\"sign in\"\r\n                content=\"Go to Live app\"\r\n                labelPosition=\"right\"\r\n              />\r\n            </p>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nDemoNotice.propTypes = {\r\n  isVisible: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isVisible: isDemoUser(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(DemoNotice);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Message } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { dismissSyncWarning } from '../actions/ui/sync';\r\nimport { isSignedIn } from 'features/user/state/User.selector';\r\n\r\nclass SyncWarning extends React.Component {\r\n  render() {\r\n    if (!this.props.isVisible) return null;\r\n\r\n    return (\r\n      <Message warning size=\"large\" onDismiss={this.props.dismissSyncWarning}>\r\n        <Message.Header>No Synchronization</Message.Header>\r\n        <Message.Content>\r\n          Your data is stored only on this device and might be lost when browser\r\n          storage is cleared.\r\n        </Message.Content>\r\n        <Message.Content>\r\n          <Link to=\"/auth\">Sign in</Link> if you want to sync your data with the\r\n          cloud and be able to access it from multiple devices.\r\n        </Message.Content>\r\n      </Message>\r\n    );\r\n  }\r\n}\r\n\r\nSyncWarning.propTypes = {\r\n  isVisible: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isVisible: !isSignedIn(state) && state.ui.sync.isWarningVisible\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { dismissSyncWarning }\r\n)(SyncWarning);\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const windowResize = createAction('WINDOW_RESIZE');\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const bootstrap = createAction('BOOTSTRAP');\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\nimport throttle from 'lodash/throttle';\r\nimport routes from '../router/routes';\r\nimport SignIn from 'features/user/containers/SignIn';\r\nimport InitialSetup from './InitialSetup';\r\nimport SidebarMenu from './SidebarMenu';\r\nimport Header from '../components/Header';\r\nimport DemoNotice from './DemoNotice';\r\nimport SyncWarning from './SyncWarning';\r\nimport { windowResize } from '../actions/ui/windowResize';\r\nimport { toggleSidebar } from '../actions/ui/sidebar';\r\nimport { bootstrap } from '../actions/app';\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    window.addEventListener('resize', throttle(this.props.windowResize, 500));\r\n    this.props.bootstrap();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isLoaded) {\r\n      return (\r\n        <Loader\r\n          active\r\n          content={\r\n            this.props.isSyncRunning &&\r\n            'Synchronizing data, this might take a moment...'\r\n          }\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Router history={this.props.history}>\r\n        <Switch>\r\n          <Route path=\"/auth\" exact={true} component={SignIn} />\r\n          {!this.props.isSetupComplete ? (\r\n            <Route component={InitialSetup} />\r\n          ) : (\r\n            <Route render={this.renderNavigationRoutes} />\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Navigation routes are the pages associated to navigation menu items,\r\n   * e.g. Dashboard, Transactions, Settings etc.\r\n   * They are rendered with common structure: sidebar menu and sticky header.\r\n   */\r\n  renderNavigationRoutes = () => {\r\n    if (window.location.pathname.endsWith('index.html')) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    const { isSidebarOpen, isMobile, toggleSidebar } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Dimmer\r\n          page\r\n          active={isMobile && isSidebarOpen}\r\n          onClick={toggleSidebar}\r\n          style={{ zIndex: 100 }}\r\n        />\r\n        <SidebarMenu\r\n          isOpen={!isMobile || isSidebarOpen}\r\n          toggleSidebar={toggleSidebar}\r\n        />\r\n        {flatten(routes).map(route => (\r\n          <Route\r\n            key={route.path}\r\n            path={route.path}\r\n            exact={route.exact}\r\n            render={props => (\r\n              <React.Fragment>\r\n                <Header label={route.label} />\r\n                <div className=\"container\">\r\n                  <DemoNotice />\r\n                  <SyncWarning />\r\n                  <route.component {...props} />\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          />\r\n        ))}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n}\r\n\r\nfunction flatten(routes) {\r\n  let flatRoutes = [];\r\n  routes.forEach(route => {\r\n    if (route.routes) {\r\n      flatRoutes.push({ ...route, exact: true });\r\n      flatRoutes.push(...flatten(route.routes));\r\n    } else {\r\n      flatRoutes.push(route);\r\n    }\r\n  });\r\n\r\n  return flatRoutes;\r\n}\r\n\r\nApp.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  isLoaded: PropTypes.bool,\r\n  isSyncRunning: PropTypes.bool,\r\n  isSetupComplete: PropTypes.bool,\r\n  isMobile: PropTypes.bool,\r\n  isSidebarOpen: PropTypes.bool,\r\n  bootstrap: PropTypes.func,\r\n  windowResize: PropTypes.func,\r\n  toggleSidebar: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  history: ownProps.history,\r\n  isLoaded: state.settings.isLoaded,\r\n  isSyncRunning: state.ui.sync.isRunning,\r\n  isSetupComplete: state.settings.isSetupComplete,\r\n  isMobile: state.ui.isMobile,\r\n  isSidebarOpen: state.ui.isSidebarOpen\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    bootstrap,\r\n    windowResize,\r\n    toggleSidebar\r\n  }\r\n)(App);\r\n","import React from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ error });\r\n    console.log('sentry error', error);\r\n    Sentry.withScope(scope => {\r\n      Object.keys(errorInfo).forEach(key => {\r\n        scope.setExtra(key, errorInfo[key]);\r\n      });\r\n      Sentry.captureException(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      //render fallback UI\r\n      return (\r\n        <button onClick={() => Sentry.showReportDialog()}>\r\n          Report feedback\r\n        </button>\r\n      );\r\n    } else {\r\n      //when there's not an error, render children untouched\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport ErrorBoundary from 'components/Sentry/ErrorBoundary';\r\n\r\nconst Root = ({ store, history }) => (\r\n  <ErrorBoundary>\r\n    <Provider store={store}>\r\n      <App history={history} />\r\n    </Provider>\r\n  </ErrorBoundary>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired,\r\n  history: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { handleActions, combineActions } from 'redux-actions';\r\nimport { getType } from 'typesafe-actions';\r\nimport {\r\n  loadAccountsSuccess,\r\n  saveAccount,\r\n  saveAccountFailure,\r\n  updateAccount,\r\n  removeAccountSuccess\r\n} from '../../actions/entities/accounts';\r\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\r\nimport EntityMap from '../../entities/EntityMap';\r\n\r\nconst initialState = EntityMap.fromArray([]);\r\n\r\nexport default handleActions(\r\n  {\r\n    [loadAccountsSuccess]: (state, action) => {\r\n      const accounts = action.payload;\r\n      return EntityMap.fromArray(accounts);\r\n    },\r\n    [combineActions(saveAccount, updateAccount)]: (state, action) => {\r\n      debugger;\r\n      const account = action.payload;\r\n      return EntityMap.set(state, account);\r\n    },\r\n    [combineActions(removeAccountSuccess, saveAccountFailure)]: (\r\n      state,\r\n      action\r\n    ) => {\r\n      const accountId = action.payload;\r\n      return EntityMap.remove(state, accountId);\r\n    },\r\n    [getType(signOutSuccess)]: () => initialState\r\n  },\r\n  initialState\r\n);\r\n","import { ExpenseTypeT } from '../entities/Transaction';\r\n\r\nconst { Fixed, Discretionary, Variable_Non_Discretionary } = ExpenseTypeT;\r\n\r\nconst TRANSACTIONS = {\r\n    DEFAULT_EXPENSE_TAGS: {\r\n        ['Alimony']: Fixed,\r\n        ['Food']: Fixed,\r\n        ['Gifts']: Discretionary,\r\n        ['Groceries']: Variable_Non_Discretionary,\r\n        ['Healthcare']: Fixed,\r\n        ['InterestExpense']: Variable_Non_Discretionary,\r\n        ['Transportation']: Fixed,\r\n        ['Personal']: Discretionary,\r\n        ['Pets']: Fixed,\r\n        ['Utilities (Electricity)']: Variable_Non_Discretionary,\r\n        ['Utilities (Gas)']: Variable_Non_Discretionary,\r\n        ['Utilities (Phone)']: Variable_Non_Discretionary,\r\n        ['Utilities (Tv)']: Fixed,\r\n        ['Utilities (Water)']: Variable_Non_Discretionary,\r\n        ['Travel']: Fixed,\r\n        ['Car Payment']: Fixed,\r\n        ['Car Insurance']: Fixed,\r\n        ['Car Repair/Licenses']: Variable_Non_Discretionary,\r\n        ['Car Replacement Fund']: Discretionary,\r\n        ['Charity']: Discretionary,\r\n        ['Child Care']: Fixed,\r\n        ['Cleaning']: Variable_Non_Discretionary,\r\n        ['Clothing']: Discretionary,\r\n        ['Debt']: Fixed,\r\n        ['Dining']: Discretionary,\r\n        ['Doctor/Dentist']: Variable_Non_Discretionary,\r\n        ['Education']: Fixed,\r\n        ['Emergency Fund']: Variable_Non_Discretionary,\r\n        ['Fuel']: Fixed,\r\n        ['Fun / Entertainment']: Discretionary,\r\n        ['Furniture / Appliances']: Discretionary,\r\n        ['Health Insurance']: Fixed,\r\n        ['Life Insurance']: Fixed,\r\n        ['Home Insurance']: Fixed,\r\n        ['Home Supplies']: Variable_Non_Discretionary,\r\n        ['Medicine']: Variable_Non_Discretionary,\r\n        ['Rent']: Fixed,\r\n        ['Mortgage']: Fixed,\r\n        ['Other Savings']: Variable_Non_Discretionary,\r\n        ['Gym']: Discretionary,\r\n        ['Taxes']: Fixed,\r\n        ['Other expenses']: Fixed,\r\n        ['Retirement Fund']: Fixed,\r\n        ['Subscriptions/Dues']: Discretionary,\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    TRANSACTIONS,\r\n}","import { handleActions } from 'redux-actions';\r\nimport { getType } from 'typesafe-actions';\r\nimport {\r\n  loadExpenseTagsSuccess,\r\n  loadIncomeTagsSuccess\r\n} from '../../actions/entities/tags';\r\nimport { addTag } from '../../actions/ui/form/transaction';\r\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\r\nimport { TransationKindT } from '../../entities/Transaction';\r\nimport { TRANSACTIONS } from '../../entities/constants';\r\n\r\nconst { DEFAULT_EXPENSE_TAGS } = TRANSACTIONS;\r\n\r\nconst { Expense, Transfer, Income } = TransationKindT;\r\nconst initialState = {\r\n  [Expense]: [],\r\n  [Transfer]: [],\r\n  [Income]: []\r\n};\r\n\r\nconst defaultTags = Object.keys(DEFAULT_EXPENSE_TAGS);\r\n\r\nexport default handleActions(\r\n  {\r\n    [loadExpenseTagsSuccess]: (state, { payload }) => ({\r\n      ...state,\r\n      [Expense]: [...defaultTags, ...payload]\r\n    }),\r\n    [loadIncomeTagsSuccess]: (state, { payload }) => ({\r\n      ...state,\r\n      [Income]: payload\r\n    }),\r\n    [addTag]: (state, action) => {\r\n      const { kind, tag } = action.payload;\r\n      return state[kind].includes(tag)\r\n        ? state\r\n        : { ...state, [kind]: state[kind].concat(tag) };\r\n    },\r\n    [getType(signOutSuccess)]: () => initialState\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport { getType } from 'typesafe-actions';\r\nimport { loadFilterTransactionsSuccess } from '../../../actions/entities/transactions';\r\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\r\nimport EntityMap from '../../../entities/EntityMap';\r\n\r\nconst initialState = EntityMap.fromArray([]);\r\n\r\nexport default handleActions(\r\n  {\r\n    [loadFilterTransactionsSuccess]: (state, action) => {\r\n      const transactions = action.payload;\r\n      return EntityMap.fromArray(transactions);\r\n    },\r\n    [getType(signOutSuccess)]: () => initialState\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport { getType } from 'typesafe-actions';\r\nimport { loadRecentTransactionsSuccess } from '../../../actions/entities/transactions';\r\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\r\nimport EntityMap from '../../../entities/EntityMap';\r\n\r\nconst initialState = EntityMap.fromArray([]);\r\n\r\nexport default handleActions(\r\n  {\r\n    [loadRecentTransactionsSuccess]: (state, action) => {\r\n      const transactions = action.payload;\r\n      return EntityMap.fromArray(transactions);\r\n    },\r\n    [getType(signOutSuccess)]: () => initialState\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport filter from './filter';\r\nimport recent from './recent';\r\n\r\nexport default combineReducers({\r\n  filter,\r\n  recent\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport accounts from './accounts';\r\nimport tags from './tags';\r\nimport transactions from './transactions';\r\n\r\nexport default combineReducers({ accounts, tags, transactions });\r\n","import { handleActions, combineActions } from 'redux-actions';\r\nimport pick from 'lodash/pick';\r\nimport {\r\n  fillInAccountForm,\r\n  openAccountInModal,\r\n  resetAccountForm,\r\n  toggleOnDashboard,\r\n  toggleCurrency,\r\n  changeBalance,\r\n  changeDebt,\r\n  changeGroup,\r\n  changeName\r\n} from '../../../actions/ui/form/account';\r\nimport {\r\n  saveAccountSuccess,\r\n  removeAccountRequest,\r\n  removeAccountStart,\r\n  removeAccountFailure,\r\n  removeAccountSuccess,\r\n  removeAccountItemProcessed\r\n} from '../../../actions/entities/accounts';\r\nimport { changeSettingsCurrency } from '../../../actions/settings';\r\nimport { defaultGroup, stateToForm } from '../../../entities/Account';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  group: defaultGroup,\r\n  balance: {},\r\n  debt: {},\r\n  currencies: [],\r\n  on_dashboard: true,\r\n  completed: false,\r\n  isModalOpen: false,\r\n  isDeleteRequest: false,\r\n  isDeleteRunning: false,\r\n  itemsToProcess: Infinity,\r\n  itemsProcessed: 0\r\n};\r\nexport default handleActions(\r\n  {\r\n    [changeGroup]: (state, { payload }) => ({ ...state, group: payload }),\r\n    [changeName]: (state, { payload }) => ({ ...state, name: payload }),\r\n    [toggleCurrency]: (state, { payload }) => {\r\n      const isChecked = state.currencies.includes(payload);\r\n      if (isChecked && state.currencies.length === 1) return state;\r\n      return {\r\n        ...state,\r\n        currencies: isChecked\r\n          ? state.currencies.filter(code => code !== payload)\r\n          : state.currencies.concat(payload),\r\n        balance:\r\n          !isChecked && state.balance[payload] === undefined\r\n            ? { ...state.balance, [payload]: '' }\r\n            : state.balance,\r\n        debt:\r\n          !isChecked && state.debt[payload] === undefined\r\n            ? { ...state.debt, [payload]: '' }\r\n            : state.debt\r\n      };\r\n    },\r\n    [changeBalance]: (state, { payload }) => ({\r\n      ...state,\r\n      currencies: state.currencies.includes(payload.code)\r\n        ? state.currencies\r\n        : state.currencies.concat(payload.code),\r\n      balance: { ...state.balance, [payload.code]: (payload.balance) },\r\n    }),\r\n    [changeDebt]: (state, { payload }) => ({\r\n      ...state,\r\n      currencies: state.currencies.includes(payload.code)\r\n        ? state.currencies\r\n        : state.currencies.concat(payload.code),\r\n      debt: { ...state.debt, [payload.code]: payload.debt }\r\n    }),\r\n    [toggleOnDashboard]: state => ({\r\n      ...state,\r\n      on_dashboard: !state.on_dashboard\r\n    }),\r\n    [changeSettingsCurrency]: (state, { payload }) => {\r\n      const currencies = new Set([payload.base, ...payload.secondary]);\r\n      return {\r\n        ...state,\r\n        currencies: state.currencies.filter(code => currencies.has(code)),\r\n        balance: pick(state.balance, [...currencies]),\r\n        debt: pick(state.debt, [...currencies])\r\n      };\r\n    },\r\n    [openAccountInModal]: (state, { payload }) => ({\r\n      ...state,\r\n      ...payload,\r\n      isModalOpen: true\r\n    }),\r\n    [resetAccountForm]: () => initialState,\r\n    [combineActions(saveAccountSuccess, removeAccountSuccess)]: () => ({\r\n      ...initialState,\r\n      completed: true\r\n    }),\r\n    [fillInAccountForm]: (state, { payload }) => ({\r\n      ...state,\r\n      ...stateToForm(payload)\r\n    }),\r\n    [removeAccountRequest]: state => ({\r\n      ...state,\r\n      isDeleteRequest: !state.isDeleteRequest\r\n    }),\r\n    [removeAccountStart]: (state, action) => ({\r\n      ...state,\r\n      isDeleteRunning: true,\r\n      itemsToProcess: action.payload\r\n    }),\r\n    [combineActions(removeAccountSuccess, removeAccountFailure)]: state => ({\r\n      ...state,\r\n      isDeleteRunning: false\r\n    }),\r\n    [removeAccountItemProcessed]: (state, action) => ({\r\n      ...state,\r\n      itemsProcessed: action.payload\r\n    })\r\n  },\r\n  initialState\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  fillInTransactionForm,\r\n  openTransactionInModal,\r\n  changeKind,\r\n  changeAccount,\r\n  changeAmount,\r\n  changeCurrency,\r\n  changeLinkedAccount,\r\n  changeLinkedAmount,\r\n  changeLinkedCurrency,\r\n  changeTags,\r\n  changeDate,\r\n  changeNote\r\n} from '../../../actions/ui/form/transaction';\r\nimport { defaultKind } from '../../../entities/Transaction';\r\n\r\nconst initialState = {\r\n  kind: defaultKind,\r\n  isModalOpen: false\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [fillInTransactionForm]: (state, { payload }) => payload,\r\n    [openTransactionInModal]: (state, { payload }) => ({\r\n      ...state,\r\n      ...payload,\r\n      isModalOpen: true\r\n    }),\r\n    [changeKind]: (state, { payload }) => ({ ...state, kind: payload }),\r\n    [changeAccount]: (state, { payload }) => ({\r\n      ...state,\r\n      accountId: payload.accountId,\r\n      currency: payload.currency.includes(state.currency)\r\n        ? state.currency\r\n        : payload.currency[0]\r\n    }),\r\n    [changeLinkedAccount]: (state, { payload }) => ({\r\n      ...state,\r\n      linkedAccountId: payload.accountId,\r\n      linkedCurrency: payload.currency.includes(state.linkedCurrency)\r\n        ? state.linkedCurrency\r\n        : payload.currency[0]\r\n    }),\r\n    [changeAmount]: (state, { payload }) => ({\r\n      ...state,\r\n      amount: payload,\r\n      linkedAmount:\r\n        state.currency === state.linkedCurrency ? payload : state.linkedAmount\r\n    }),\r\n    [changeLinkedAmount]: (state, { payload }) => ({\r\n      ...state,\r\n      amount: state.currency === state.linkedCurrency ? payload : state.amount,\r\n      linkedAmount: payload\r\n    }),\r\n    [changeCurrency]: (state, { payload }) => ({\r\n      ...state,\r\n      currency: payload,\r\n      linkedAmount:\r\n        state.linkedCurrency === payload ? state.amount : state.linkedAmount\r\n    }),\r\n    [changeLinkedCurrency]: (state, { payload }) => ({\r\n      ...state,\r\n      linkedCurrency: payload,\r\n      linkedAmount:\r\n        state.currency === payload ? state.amount : state.linkedAmount\r\n    }),\r\n    [changeTags]: (state, { payload }) => ({\r\n      ...state,\r\n      tags: { ...state.tags, [state.kind]: payload }\r\n    }),\r\n    [changeDate]: (state, { payload }) => ({ ...state, date: payload }),\r\n    [changeNote]: (state, { payload }) => ({ ...state, note: payload })\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport account from './account';\r\nimport transaction from './transaction';\r\n\r\nexport default combineReducers({ account, transaction });\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  changeReportKind,\r\n  changeReportTimespan,\r\n  changeReportAccounts,\r\n  moveReportDateBackwards,\r\n  moveReportDateForwards,\r\n  loadReport,\r\n  loadReportSuccess,\r\n  loadReportFailure\r\n} from 'actions/ui/report';\r\nimport {\r\n  defaultKind,\r\n  defaultTimespan,\r\n  defaultDate,\r\n  moveDateBackwards,\r\n  moveDateForwards\r\n} from 'entities/Report';\r\n\r\nexport default handleActions(\r\n  {\r\n    [changeReportKind]: (state, { payload }) => ({ ...state, kind: payload }),\r\n    [changeReportTimespan]: (state, { payload }) => ({\r\n      ...state,\r\n      timespan: payload,\r\n      date: defaultDate(payload)\r\n    }),\r\n    [changeReportAccounts]: (state, { payload }) => ({\r\n      ...state,\r\n      accounts: payload\r\n    }),\r\n    [moveReportDateBackwards]: state => ({\r\n      ...state,\r\n      date: moveDateBackwards(state.date, state.timespan),\r\n      data: {\r\n        ...state.data,\r\n        netWorthEnd: state.data.netWorthStart\r\n      },\r\n      netWorthStack: [state.data.netWorthEnd, ...state.netWorthStack]\r\n    }),\r\n    [moveReportDateForwards]: state => ({\r\n      ...state,\r\n      date: moveDateForwards(state.date, state.timespan),\r\n      data: {\r\n        ...state.data,\r\n        netWorthEnd: state.netWorthStack[0]\r\n      },\r\n      netWorthStack: state.netWorthStack.slice(1)\r\n    }),\r\n    [loadReport]: state => ({ ...state, isLoading: true }),\r\n    [loadReportSuccess]: (state, { payload }) => ({\r\n      ...state,\r\n      isLoading: false,\r\n      data: payload\r\n    }),\r\n    [loadReportFailure]: state => ({ ...state, isLoading: false })\r\n  },\r\n  {\r\n    isLoading: false,\r\n    data: {},\r\n    kind: defaultKind,\r\n    timespan: defaultTimespan,\r\n    date: defaultDate(),\r\n    accounts: [],\r\n    netWorthStack: []\r\n  }\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  changeFilterDate,\r\n  changeFilterPage,\r\n  toggleFilterCalendar,\r\n  toggleFilterModal,\r\n  applyFilters\r\n} from 'actions/ui/transaction/filter';\r\nimport {\r\n  loadFilterTransactions,\r\n  loadFilterTransactionsSuccess\r\n} from 'actions/entities/transactions';\r\nimport { defaultStart, defaultEnd } from 'entities/Transaction/DateFilterRange';\r\nimport { rowsPerSearchPage } from 'entities/Transaction';\r\nimport { toUtcTimestamp } from 'util/timezone';\r\n\r\nconst initialState = {\r\n  dateStart: toUtcTimestamp(defaultStart()),\r\n  dateEnd: toUtcTimestamp(defaultEnd()),\r\n  isCalendarOpen: false,\r\n  isFilterModalOpen: false,\r\n  applied: {},\r\n  isLoading: false,\r\n  totalRows: 0,\r\n  page: 0,\r\n  perPage: rowsPerSearchPage\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [loadFilterTransactions]: state => ({ ...state, isLoading: true }),\r\n    [loadFilterTransactionsSuccess]: (state, { payload }) => ({\r\n      ...state,\r\n      page: 0,\r\n      totalRows: payload.length,\r\n      isLoading: false\r\n    }),\r\n    [changeFilterDate]: (state, { payload }) => ({\r\n      ...state,\r\n      dateStart: toUtcTimestamp(payload.dateStart),\r\n      dateEnd: toUtcTimestamp(payload.dateEnd),\r\n      isLoading: true\r\n    }),\r\n    [changeFilterPage]: (state, { payload }) => ({ ...state, page: payload }),\r\n    [toggleFilterCalendar]: state => ({\r\n      ...state,\r\n      isCalendarOpen: !state.isCalendarOpen\r\n    }),\r\n    [toggleFilterModal]: state => ({\r\n      ...state,\r\n      isFilterModalOpen: !state.isFilterModalOpen\r\n    }),\r\n    [applyFilters]: (state, { payload }) => ({ ...state, applied: payload })\r\n  },\r\n  initialState\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport filter from './filter';\r\n\r\nexport default combineReducers({ filter });\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  openImportFile,\r\n  discardImportFile,\r\n  startDataImport,\r\n  importFileReadSuccess,\r\n  importLineProcessed,\r\n  importFailure\r\n} from '../../actions/ui/dataImport';\r\n\r\nconst initialState = {\r\n  isFileSelected: false,\r\n  file: undefined,\r\n  error: '',\r\n  isProcessing: false,\r\n  linesToProcess: Infinity,\r\n  linesProcessed: 0\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [openImportFile]: (state, action) => ({\r\n      ...state,\r\n      isFileSelected: true,\r\n      file: action.payload\r\n    }),\r\n    [discardImportFile]: state => ({\r\n      ...state,\r\n      isFileSelected: false,\r\n      file: undefined\r\n    }),\r\n    [startDataImport]: state => ({ ...state, isProcessing: true }),\r\n    [importFileReadSuccess]: (state, action) => ({\r\n      ...state,\r\n      linesToProcess: action.payload\r\n    }),\r\n    [importLineProcessed]: (state, action) => ({\r\n      ...state,\r\n      linesProcessed: action.payload\r\n    }),\r\n    [importFailure]: (state, action) => ({\r\n      ...state,\r\n      isFileSelected: false,\r\n      isProcessing: false,\r\n      file: undefined,\r\n      error: action.payload.message\r\n    })\r\n  },\r\n  initialState\r\n);\r\n","import { handleAction } from 'redux-actions';\r\nimport { windowResize } from '../../actions/ui/windowResize';\r\n\r\nconst isMobile = () => window.matchMedia('(max-width: 768px)').matches;\r\nexport default handleAction(windowResize, isMobile, isMobile());\r\n","import { handleAction } from 'redux-actions';\r\nimport { toggleSidebar } from '../../actions/ui/sidebar';\r\n\r\nexport default handleAction(toggleSidebar, state => !state, false);\r\n","import { handleActions, combineActions } from 'redux-actions';\r\nimport {\r\n  changeSettingsCurrency,\r\n  updateExchangeRate,\r\n  updateExchangeRateSuccess,\r\n  updateExchangeRateFailure\r\n} from '../../actions/settings';\r\n\r\nexport default handleActions(\r\n  {\r\n    [combineActions(changeSettingsCurrency, updateExchangeRate)]: state => ({\r\n      ...state,\r\n      isExchangeLoading: true\r\n    }),\r\n    [combineActions(\r\n      updateExchangeRateSuccess,\r\n      updateExchangeRateFailure\r\n    )]: state => ({\r\n      ...state,\r\n      isExchangeLoading: false\r\n    })\r\n  },\r\n  { isExchangeLoading: false }\r\n);\r\n","import { handleActions } from 'redux-actions';\r\nimport {\r\n  dismissSyncWarning,\r\n  setPendingChangesFlag,\r\n  syncRequest,\r\n  syncSuccess,\r\n  syncFailure\r\n} from '../../actions/ui/sync';\r\n\r\nexport default handleActions(\r\n  {\r\n    [syncRequest]: state => ({ ...state, isRunning: true }),\r\n    [syncSuccess]: state => ({\r\n      ...state,\r\n      isRunning: false,\r\n      hasPendingChanges: false\r\n    }),\r\n    [syncFailure]: state => ({ isRunning: false }),\r\n    [dismissSyncWarning]: state => ({ ...state, isWarningVisible: false }),\r\n    [setPendingChangesFlag]: state => ({ ...state, hasPendingChanges: true })\r\n  },\r\n  {\r\n    isRunning: false,\r\n    isWarningVisible: true,\r\n    hasPendingChanges: false\r\n  }\r\n);\r\n","import { combineReducers } from 'redux';\r\nimport form from './form';\r\nimport report from './report';\r\nimport transaction from './transaction';\r\nimport dataImport from './dataImport';\r\nimport isMobile from './isMobile';\r\nimport isSidebarOpen from './isSidebarOpen';\r\nimport settings from './settings';\r\nimport sync from './sync';\r\n\r\nexport default combineReducers({\r\n  form,\r\n  report,\r\n  transaction,\r\n  dataImport,\r\n  settings,\r\n  sync,\r\n  isMobile,\r\n  isSidebarOpen\r\n});\r\n","import pick from 'lodash/pick';\r\nimport { handleActions } from 'redux-actions';\r\nimport { getType } from 'typesafe-actions';\r\nimport {\r\n  loadSettingsSuccess,\r\n  changeSettingsCurrency,\r\n  updateExchangeRateSuccess,\r\n  toggleSectionCollapse,\r\n  completeSetup\r\n} from '../actions/settings';\r\nimport { signOutSuccess } from 'features/user/state/ui/SignOut.action';\r\nimport Currency from '../entities/Currency';\r\n\r\nconst initialState = {\r\n  isLoaded: false,\r\n  isSetupComplete: false,\r\n  currency: { base: Currency.defaultBase, secondary: [] },\r\n  exchangeRate: { [Currency.defaultBase]: 1.0 },\r\n  collapsedSections: []\r\n};\r\n\r\nexport default handleActions(\r\n  {\r\n    [loadSettingsSuccess]: (state, { payload }) => ({\r\n      ...state,\r\n      isLoaded: true,\r\n      ...pick(payload, Object.keys(state))\r\n    }),\r\n    [changeSettingsCurrency]: (state, { payload }) => {\r\n      let { base, secondary } = payload;\r\n      if (secondary.includes(base)) {\r\n        secondary = secondary\r\n          .concat(state.currency.base)\r\n          .filter(code => code !== base);\r\n      }\r\n\r\n      return { ...state, currency: { base, secondary } };\r\n    },\r\n    [updateExchangeRateSuccess]: (state, { payload }) => ({\r\n      ...state,\r\n      exchangeRate: payload\r\n    }),\r\n    [toggleSectionCollapse]: (state, { payload }) => ({\r\n      ...state,\r\n      collapsedSections: state.collapsedSections.includes(payload)\r\n        ? state.collapsedSections.filter(section => section !== payload)\r\n        : state.collapsedSections.concat(payload)\r\n    }),\r\n    [completeSetup]: state => ({ ...state, isSetupComplete: true }),\r\n    [getType(signOutSuccess)]: () => initialState\r\n  },\r\n  initialState\r\n);\r\n","import { createAction } from 'typesafe-actions';\r\n\r\nexport const setDemoUser = createAction('user/SET_DEMO_USER');\r\nexport const signInSuccess = createAction('user/SIGN_IN_SUCCESS');\r\n","import { ActionType, getType } from 'typesafe-actions';\r\nimport * as SignIn from './SignIn.action';\r\nimport { AsyncOperationStateT } from 'typings/async';\r\n\r\nexport interface SignInStateT {\r\n  email: string;\r\n  code: string;\r\n  error?: string;\r\n  sendCodeStatus?: AsyncOperationStateT;\r\n  verifyCodeStatus?: AsyncOperationStateT;\r\n}\r\n\r\nexport type SignInActionT = ActionType<typeof SignIn>;\r\n\r\nconst initialState: SignInStateT = {\r\n  email: '',\r\n  code: ''\r\n};\r\n\r\nexport default (state = initialState, action: SignInActionT): SignInStateT => {\r\n  switch (action.type) {\r\n    case getType(SignIn.changeEmail):\r\n      return { ...state, email: action.payload };\r\n    case getType(SignIn.changeCode):\r\n      return { ...state, code: action.payload };\r\n    case getType(SignIn.sendCode):\r\n      return { ...state, sendCodeStatus: 'REQUEST' };\r\n    case getType(SignIn.sendCodeSuccess):\r\n      return { ...state, sendCodeStatus: 'SUCCESS' };\r\n    case getType(SignIn.sendCodeFailure):\r\n      return {\r\n        ...state,\r\n        sendCodeStatus: 'FAILURE',\r\n        error: action.payload.message\r\n      };\r\n    case getType(SignIn.verifyCode):\r\n      return { ...state, verifyCodeStatus: 'REQUEST' };\r\n    case getType(SignIn.verifyCodeSuccess):\r\n      return { ...state, verifyCodeStatus: 'SUCCESS' };\r\n    case getType(SignIn.verifyCodeFailure):\r\n      return {\r\n        ...state,\r\n        verifyCodeStatus: 'FAILURE',\r\n        error: action.payload.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { WebAuth } from 'auth0-js';\r\n/**\r\n * @see https://auth0.com/docs/connections/passwordless/spa-email-code/v8\r\n */\r\nconst auth0 = new WebAuth({\r\n  domain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  clientID: process.env.REACT_APP_AUTH_CLIENT_ID,\r\n  redirectUri: process.env.REACT_APP_AUTH_REDIRECT,\r\n  responseType: 'token'\r\n});\r\n\r\nexport default {\r\n  sendCode,\r\n  verifyCode,\r\n  parseHash,\r\n  getUserInfo\r\n};\r\n\r\nfunction sendCode(email) {\r\n  return new Promise((resolve, reject) => {\r\n    auth0.passwordlessStart(\r\n      {\r\n        connection: 'email',\r\n        send: 'code',\r\n        email\r\n      },\r\n      (error, result) => (error ? reject(error) : resolve(result))\r\n    );\r\n  });\r\n}\r\n\r\nfunction verifyCode(email, verificationCode) {\r\n  return new Promise((resolve, reject) => {\r\n    auth0.passwordlessLogin(\r\n      {\r\n        connection: 'email',\r\n        email,\r\n        verificationCode\r\n      },\r\n      (error, result) => (error ? reject(error) : resolve(result))\r\n    );\r\n  });\r\n}\r\n\r\nfunction parseHash() {\r\n  return new Promise((resolve, reject) => {\r\n    auth0.parseHash((error, authResult) => {\r\n      if (error) return reject(error);\r\n\r\n      resolve(authResult.accessToken);\r\n    });\r\n  });\r\n}\r\n\r\nfunction getUserInfo(accessToken) {\r\n  return new Promise((resolve, reject) => {\r\n    auth0.client.userInfo(accessToken, (error, userInfo) => {\r\n      if (error) return reject(error);\r\n\r\n      resolve({ accessToken, couchDB: userInfo.couchDB });\r\n    });\r\n  });\r\n}\r\n","import { RootStateT } from 'reducers';\r\n\r\nexport const getSignInEmail = ({ user }: RootStateT) => user.ui.signIn.email;\r\nexport const getSignInCode = ({ user }: RootStateT) => user.ui.signIn.code;\r\n","import { TransactionStateT, TransationKindT } from 'entities/Transaction';\r\n\r\nconst { Transfer } = TransationKindT;\r\n\r\nexport interface AccountMutationT {\r\n  accountId: string;\r\n  currency: string;\r\n  amount: number;\r\n}\r\n\r\n/**\r\n * Get all necessary accounts balance mutations for given transaction change.\r\n */\r\nexport default function getAccountsMutations(\r\n  prev?: TransactionStateT,\r\n  next?: TransactionStateT\r\n): AccountMutationT[] {\r\n  if (!prev && next) {\r\n    return createTransaction(next);\r\n  } else if (prev && !next) {\r\n    return removeTransaction(prev);\r\n  } else if (prev && next) {\r\n    return [...removeTransaction(prev), ...createTransaction(next)];\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction createTransaction(transaction: TransactionStateT): AccountMutationT[] {\r\n  const mutations: AccountMutationT[] = [];\r\n  if (\r\n    transaction.kind === Transfer &&\r\n    transaction.accountId === transaction.linkedAccountId &&\r\n    transaction.currency === transaction.linkedCurrency\r\n  ) {\r\n    return mutations;\r\n  }\r\n\r\n  mutations.push({\r\n    accountId: transaction.accountId,\r\n    currency: transaction.currency,\r\n    amount: transaction.amount * (transaction.kind === Transfer ? -1 : 1)\r\n  });\r\n\r\n  if (\r\n    transaction.kind === Transfer &&\r\n    transaction.linkedAccountId &&\r\n    transaction.linkedCurrency &&\r\n    transaction.linkedAmount\r\n  ) {\r\n    mutations.push({\r\n      accountId: transaction.linkedAccountId,\r\n      currency: transaction.linkedCurrency,\r\n      amount: transaction.linkedAmount\r\n    });\r\n  }\r\n\r\n  return mutations;\r\n}\r\n\r\nfunction removeTransaction(transaction: TransactionStateT): AccountMutationT[] {\r\n  const mutations = [];\r\n  mutations.push({\r\n    accountId: transaction.accountId,\r\n    currency: transaction.currency,\r\n    amount: transaction.amount * (transaction.kind === Transfer ? 1 : -1)\r\n  });\r\n  if (\r\n    transaction.kind === Transfer &&\r\n    transaction.linkedAccountId &&\r\n    transaction.linkedCurrency &&\r\n    transaction.linkedAmount\r\n  ) {\r\n    mutations.push({\r\n      accountId: transaction.linkedAccountId,\r\n      currency: transaction.linkedCurrency,\r\n      amount: transaction.linkedAmount * -1\r\n    });\r\n  }\r\n\r\n  return mutations;\r\n}\r\n","import PouchDB from 'pouchdb';\r\n\r\nconst instancePool = {};\r\n\r\nfunction instance(name) {\r\n  if (instancePool[name] === undefined) {\r\n    instancePool[name] = new PouchDB(name, { auto_compaction: true });\r\n  }\r\n\r\n  return instancePool[name];\r\n}\r\n\r\nfunction remoteInstance(name) {\r\n  const instanceName = `remote_${name}`;\r\n  if (instancePool[instanceName] === undefined) {\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n    if (userInfo && userInfo.couchDB && userInfo.couchDB[name]) {\r\n      const { username, password } = userInfo.couchDB;\r\n      instancePool[instanceName] = new PouchDB(userInfo.couchDB[name], {\r\n        skipSetup: true,\r\n        auth: username && password ? { username, password } : undefined\r\n      });\r\n    }\r\n  }\r\n\r\n  return instancePool[instanceName];\r\n}\r\n\r\nfunction destroyInstance(name) {\r\n  if (instancePool[name] !== undefined) {\r\n    const instance = instancePool[name];\r\n    delete instancePool[name];\r\n    delete instancePool[`remote_${name}`];\r\n\r\n    return instance.destroy();\r\n  }\r\n}\r\n\r\nexport const settingsDB = () => instance('settings');\r\nexport const accountsDB = () => instance('accounts');\r\nexport const transactionsDB = () => instance('transactions');\r\nexport const tagsDB = () => instance('tags');\r\nexport const remoteSettingsDB = () => remoteInstance('settings');\r\nexport const remoteAccountsDB = () => remoteInstance('accounts');\r\nexport const remoteTransactionsDB = () => remoteInstance('transactions');\r\nexport const remoteTagsDB = () => remoteInstance('tags');\r\nexport const destroySettingsDB = () => destroyInstance('settings');\r\nexport const destroyAccountsDB = () => destroyInstance('accounts');\r\nexport const destroyTransactionsDB = () => destroyInstance('transactions');\r\nexport const destroyTagsDB = () => destroyInstance('tags');\r\n","import { tagsDB, remoteTagsDB, destroyTagsDB } from './pouchdb';\r\n\r\nexport default {\r\n  sync,\r\n  load,\r\n  updateUsage,\r\n  destroy\r\n};\r\n\r\nasync function sync(readOnly = false) {\r\n  let hasChanges = false;\r\n  if (!remoteTagsDB()) return hasChanges;\r\n\r\n  const from = await tagsDB().replicate.from(remoteTagsDB());\r\n  if (from.docs_written > 0) hasChanges = true;\r\n  if (readOnly) return hasChanges;\r\n\r\n  await tagsDB().replicate.to(remoteTagsDB());\r\n\r\n  return hasChanges;\r\n}\r\n\r\nfunction destroy() {\r\n  return destroyTagsDB();\r\n}\r\n\r\nfunction load(kind) {\r\n  return tagsDB()\r\n    .allDocs({\r\n      include_docs: true,\r\n      start_key: `t${kind}`,\r\n      end_key: `t${kind}\\uffff`\r\n    })\r\n    .then(response =>\r\n      response.rows.map(row => ({\r\n        tag: row.doc._id.split('/')[1],\r\n        usage: row.doc.usage\r\n      }))\r\n    )\r\n    .then(docs => docs.sort((a, b) => b.usage - a.usage))\r\n    .then(docs => docs.map(doc => doc.tag));\r\n}\r\n\r\nfunction updateUsage(kind, tag, delta) {\r\n  const id = `t${kind}/${tag}`;\r\n  return tagsDB()\r\n    .get(id)\r\n    .then(doc =>\r\n      tagsDB().put({ ...doc, usage: parseInt(doc.usage, 10) + delta })\r\n    )\r\n    .catch(err => {\r\n      if (err.status !== 404) throw err;\r\n\r\n      return tagsDB().put({ _id: id, usage: 1 });\r\n    });\r\n}\r\n","/**\r\n * Return new set containing set difference of given left and right sets.\r\n *\r\n * @param {Set} left\r\n * @param {Set} right\r\n * @return {Set}\r\n */\r\nexport default function difference(left, right) {\r\n  const diff = new Set();\r\n  for (const item of left) {\r\n    if (!right.has(item)) diff.add(item);\r\n  }\r\n\r\n  return diff;\r\n}\r\n","import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport {\r\n  loadTags,\r\n  loadExpenseTagsSuccess,\r\n  loadIncomeTagsSuccess\r\n} from '../actions/entities/tags';\r\nimport { TransationKindT } from '../entities/Transaction';\r\nimport TagsStorage from '../util/storage/tags';\r\nimport difference from '../util/SetDifference';\r\n\r\nconst { Expense, Income } = TransationKindT;\r\n\r\nexport function* loadTagsSaga() {\r\n  const expenseTags = yield call(TagsStorage.load, Expense);\r\n  yield put(loadExpenseTagsSuccess(expenseTags));\r\n  const incomeTags = yield call(TagsStorage.load, Income);\r\n  yield put(loadIncomeTagsSuccess(incomeTags));\r\n}\r\n\r\nexport function* updateTagsUsage(prev, next) {\r\n  const prevTags = new Set((prev && prev.tags) || []);\r\n  const nextTags = new Set((next && next.tags) || []);\r\n\r\n  for (const newTag of difference(nextTags, prevTags)) {\r\n    yield call(TagsStorage.updateUsage, next.kind, newTag, 1);\r\n  }\r\n  for (const oldTag of difference(prevTags, nextTags)) {\r\n    yield call(TagsStorage.updateUsage, prev.kind, oldTag, -1);\r\n  }\r\n}\r\n\r\nexport default [takeLatest(loadTags, loadTagsSaga)];\r\n","import {\r\n  transactionsDB,\r\n  remoteTransactionsDB,\r\n  destroyTransactionsDB\r\n} from './pouchdb';\r\nimport {\r\n  recentListLimit,\r\n  storageToState,\r\n  stateToStorage\r\n} from '../../entities/Transaction';\r\nimport intersection from 'lodash/intersection';\r\n\r\nexport default {\r\n  sync,\r\n  load,\r\n  loadRecent,\r\n  loadFiltered,\r\n  save,\r\n  remove,\r\n  destroy\r\n};\r\n\r\nasync function sync(readOnly = true) {\r\n  if (!remoteTransactionsDB()) return;\r\n  const options = { batch_size: 500 };\r\n\r\n  await transactionsDB()\r\n    .replicate.from(remoteTransactionsDB(), options)\r\n    .on('change', async update => {\r\n      await Promise.all(update.docs.map(processIncomingTransaction));\r\n    });\r\n\r\n  if (!readOnly) {\r\n    await transactionsDB().replicate.to(remoteTransactionsDB(), options);\r\n  }\r\n}\r\n\r\nasync function processIncomingTransaction(tx) {\r\n  if (tx._id.startsWith('T') && !tx._id.includes('-') && !tx._deleted) {\r\n    await save({\r\n      ...tx,\r\n      id: `T${tx.date}-${tx._id.substr(1)}`,\r\n      date: undefined,\r\n      tags: tx.tags && tx.tags.length ? tx.tags : undefined,\r\n      note: tx.note && tx.note.length ? tx.note : undefined\r\n    });\r\n    await transactionsDB().remove(tx);\r\n  }\r\n\r\n  return tx;\r\n}\r\n\r\nfunction load(id) {\r\n  return transactionsDB()\r\n    .get(id)\r\n    .then(storageToState)\r\n    .catch(error => {\r\n      if (error.status !== 404) throw error;\r\n    });\r\n}\r\n\r\nfunction loadRecent(limit = recentListLimit) {\r\n  return transactionsDB()\r\n    .allDocs({\r\n      include_docs: true,\r\n      descending: true,\r\n      startkey: 'T\\uffff',\r\n      endkey: 'T',\r\n      limit\r\n    })\r\n    .then(response => response.rows.map(row => row.doc))\r\n    .then(docs => docs.map(storageToState));\r\n}\r\n\r\nfunction loadFiltered(filters = {}) {\r\n  return transactionsDB()\r\n    .allDocs({\r\n      include_docs: true,\r\n      descending: true,\r\n      startkey: filters.date ? `T${filters.date.end}-\\uffff` : 'T\\uffff',\r\n      endkey: filters.date ? `T${filters.date.start}-` : 'T'\r\n    })\r\n    .then(response => response.rows.map(row => row.doc))\r\n    .then(docs => filterByAccount(docs, filters.accounts))\r\n    .then(docs => filterByTags(docs, filters.tags))\r\n    .then(docs => docs.map(doc => storageToState(doc)));\r\n}\r\n\r\n/**\r\n * Filter transactions by account.\r\n *\r\n * @param {array} docs\r\n * @param {Set} accounts\r\n * @return {array}\r\n */\r\nfunction filterByAccount(docs, accounts) {\r\n  if (Array.isArray(accounts)) accounts = new Set(accounts);\r\n  if (!accounts || !accounts.size) return docs;\r\n\r\n  return docs.filter(\r\n    tx => accounts.has(tx.accountId) || accounts.has(tx.linkedAccountId)\r\n  );\r\n}\r\n\r\n/**\r\n * Filter transactions by tag.\r\n *\r\n * @param {array} docs\r\n * @param {array} tags\r\n * @return {array}\r\n */\r\nfunction filterByTags(docs, tags) {\r\n  return tags && tags.length > 0\r\n    ? docs.filter(tx => intersection(tx.tags, tags).length > 0)\r\n    : docs;\r\n}\r\n\r\nfunction save(transaction) {\r\n  return transactionsDB()\r\n    .get(transaction.id)\r\n    .then(doc =>\r\n      transactionsDB().put({\r\n        ...doc,\r\n        ...stateToStorage(transaction)\r\n      })\r\n    )\r\n    .catch(err => {\r\n      if (err.status !== 404) throw err;\r\n\r\n      return transactionsDB().put({\r\n        _id: transaction.id,\r\n        ...stateToStorage(transaction)\r\n      });\r\n    });\r\n}\r\n\r\nfunction remove(id) {\r\n  if (!id) return false;\r\n\r\n  return transactionsDB()\r\n    .get(id)\r\n    .then(doc =>\r\n      transactionsDB()\r\n        .put({ ...doc, _deleted: true })\r\n        .then(() => doc)\r\n    )\r\n    .catch(err => {\r\n      if (err.status !== 404) throw err;\r\n      return false;\r\n    });\r\n}\r\n\r\nfunction destroy() {\r\n  return destroyTransactionsDB();\r\n}\r\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\r\nimport {\r\n  loadFilterTransactions,\r\n  loadFilterTransactionsSuccess,\r\n  loadRecentTransactions,\r\n  loadRecentTransactionsSuccess,\r\n  saveTransaction,\r\n  saveTransactionSuccess,\r\n  removeTransaction,\r\n  removeTransactionSuccess\r\n} from '../actions/entities/transactions';\r\nimport {\r\n  changeFilterDate,\r\n  applyFilters\r\n} from '../actions/ui/transaction/filter';\r\nimport {\r\n  fillInTransactionForm,\r\n  resetTransactionForm\r\n} from '../actions/ui/form/transaction';\r\nimport { getDefaultState } from '../selectors/ui/form/transaction';\r\nimport { getFilters } from '../selectors/ui/transaction/filter';\r\nimport getAccountsMutations from '../entities/Transaction/AccountMutations';\r\nimport { updateAccountBalanceSaga } from './accounts';\r\nimport { updateTagsUsage } from './tags';\r\nimport TransactionsStorage from '../util/storage/transactions';\r\n\r\nexport function* resetTransactionFormSaga() {\r\n  const initialData = yield select(getDefaultState);\r\n  yield put(fillInTransactionForm(initialData));\r\n}\r\n\r\nexport function* loadFilterTransactionsSaga() {\r\n  const filters = yield select(getFilters);\r\n  const transactions = yield call(TransactionsStorage.loadFiltered, filters);\r\n  yield put(loadFilterTransactionsSuccess(transactions));\r\n}\r\n\r\nexport function* loadRecentTransactionsSaga() {\r\n  const transactions = yield call(TransactionsStorage.loadRecent);\r\n  yield put(loadRecentTransactionsSuccess(transactions));\r\n}\r\n\r\nexport function* removeTransactionSaga(action) {\r\n  const prev = yield call(TransactionsStorage.remove, action.payload);\r\n\r\n  yield call(updateAccountsBalance, prev);\r\n  yield call(updateTagsUsage, prev);\r\n  yield call(loadRecentTransactionsSaga);\r\n  yield call(loadFilterTransactionsSaga);\r\n  yield call(resetTransactionFormSaga);\r\n  yield put(removeTransactionSuccess());\r\n}\r\n\r\nexport function* saveTransactionSaga(action) {\r\n  const next = action.payload;\r\n  const prev = yield call(TransactionsStorage.remove, next.id);\r\n  next.id = `T${next.date}-${Date.now()}`;\r\n\r\n  yield call(TransactionsStorage.save, next);\r\n  yield call(updateAccountsBalance, prev, next);\r\n  yield call(updateTagsUsage, prev, next);\r\n  yield call(loadRecentTransactionsSaga);\r\n  yield call(loadFilterTransactionsSaga);\r\n  yield call(resetTransactionFormSaga);\r\n  yield put(saveTransactionSuccess());\r\n}\r\n\r\nfunction* updateAccountsBalance(prev, next) {\r\n  for (const mutation of getAccountsMutations(prev, next)) {\r\n    yield call(updateAccountBalanceSaga, mutation);\r\n  }\r\n}\r\n\r\nexport default [\r\n  takeLatest(resetTransactionForm, resetTransactionFormSaga),\r\n  takeLatest(loadFilterTransactions, loadFilterTransactionsSaga),\r\n  takeLatest(changeFilterDate, loadFilterTransactionsSaga),\r\n  takeLatest(applyFilters, loadFilterTransactionsSaga),\r\n  takeLatest(loadRecentTransactions, loadRecentTransactionsSaga),\r\n  takeLatest(removeTransaction, removeTransactionSaga),\r\n  takeLatest(saveTransaction, saveTransactionSaga)\r\n];\r\n","import { accountsDB, remoteAccountsDB, destroyAccountsDB } from './pouchdb';\r\nimport {\r\n  storageToState,\r\n  stateToStorage,\r\n  mutateBalance as mutateAccountBalance\r\n} from '../../entities/Account';\r\n\r\nexport default {\r\n  sync,\r\n  loadAll,\r\n  save,\r\n  archive,\r\n  mutateBalance,\r\n  remove,\r\n  destroy\r\n};\r\n\r\nasync function sync(readOnly = false) {\r\n  if (!remoteAccountsDB()) return;\r\n  let accounts;\r\n\r\n  const from = await accountsDB().replicate.from(remoteAccountsDB());\r\n  if (from.docs_written > 0) {\r\n    accounts = await loadAll();\r\n    updateLastSyncedBalance(accounts);\r\n  }\r\n\r\n  if (readOnly) return;\r\n\r\n  const to = await accountsDB().replicate.to(remoteAccountsDB());\r\n  if (to.docs_written > 0) {\r\n    accounts = await loadAll();\r\n    updateLastSyncedBalance(accounts);\r\n  }\r\n}\r\n\r\nfunction destroy() {\r\n  return destroyAccountsDB();\r\n}\r\n\r\nfunction loadAll() {\r\n  return accountsDB()\r\n    .allDocs({\r\n      include_docs: true,\r\n      conflicts: true,\r\n      startkey: 'A',\r\n      endkey: 'A\\uffff'\r\n    })\r\n    .then(response => Promise.all(response.rows.map(resolveConflicts)))\r\n    .then(docs => docs.map(storageToState));\r\n}\r\n\r\nfunction save(account) {\r\n  return accountsDB()\r\n    .get(account.id)\r\n    .then(doc => accountsDB().put({ ...doc, ...stateToStorage(account) }))\r\n    .catch(err => {\r\n      if (err.status !== 404) throw err;\r\n      return accountsDB().put({\r\n        _id: account.id,\r\n        ...stateToStorage(account)\r\n      });\r\n    });\r\n}\r\n\r\nfunction archive(accountId) {\r\n  return accountsDB()\r\n    .get(accountId)\r\n    .then(doc => accountsDB().put({ ...doc, archived: true }));\r\n}\r\n\r\nfunction mutateBalance({ accountId, currency, amount }) {\r\n  return accountsDB()\r\n    .get(accountId)\r\n    .then(doc => accountsDB().put(mutateAccountBalance(doc, currency, amount)))\r\n    .then(({ rev }) => accountsDB().get(accountId, rev))\r\n    .then(doc => storageToState(doc));\r\n}\r\n\r\nfunction remove(accountId) {\r\n  return accountsDB()\r\n    .get(accountId)\r\n    .then(doc => accountsDB().put({ ...doc, _deleted: true }))\r\n    .catch(err => {\r\n      if (err.status !== 404) throw err;\r\n      return true;\r\n    });\r\n}\r\n\r\nfunction updateLastSyncedBalance(accounts) {\r\n  accounts.forEach(account => {\r\n    localStorage.setItem(account.id, JSON.stringify(account.balance));\r\n  });\r\n}\r\n\r\nasync function resolveConflicts(row) {\r\n  if (!row.doc._conflicts) return row.doc;\r\n\r\n  const lastSyncedBalance = JSON.parse(localStorage.getItem(row.doc._id));\r\n  const conflictedBalances = await Promise.all(\r\n    row.doc._conflicts.map(async rev =>\r\n      accountsDB()\r\n        .get(row.doc._id, { rev })\r\n        .then(doc => doc.balance)\r\n    )\r\n  );\r\n  conflictedBalances.push(row.doc.balance);\r\n  row.doc.balance = resolveBalance(lastSyncedBalance, conflictedBalances);\r\n\r\n  return Promise.all(\r\n    row.doc._conflicts.map(async rev => accountsDB().remove(row.doc._id, rev))\r\n  )\r\n    .then(() => accountsDB().put(row.doc))\r\n    .then(() => row.doc);\r\n}\r\n\r\nfunction resolveBalance(lastSynced, conflictedBalances) {\r\n  return Object.keys(lastSynced).reduce((balance, code) => {\r\n    balance[code] =\r\n      lastSynced[code] +\r\n      conflictedBalances.reduce(\r\n        (delta, conflicted) => delta + (conflicted[code] - lastSynced[code]),\r\n        0\r\n      );\r\n    return balance;\r\n  }, {});\r\n}\r\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\r\nimport {\r\n  loadAccounts,\r\n  loadAccountsSuccess,\r\n  saveAccount,\r\n  saveAccountSuccess,\r\n  saveAccountFailure,\r\n  updateAccount,\r\n  removeAccount,\r\n  removeAccountStart,\r\n  removeAccountItemProcessed,\r\n  removeAccountFailure,\r\n  removeAccountSuccess\r\n} from '../actions/entities/accounts';\r\nimport { getForm } from '../selectors/ui/form/transaction';\r\nimport {\r\n  resetTransactionFormSaga,\r\n  removeTransactionSaga,\r\n  saveTransactionSaga\r\n} from './transactions';\r\nimport {\r\n  removeTransaction,\r\n  saveTransaction\r\n} from '../actions/entities/transactions';\r\nimport AccountsStorage from '../util/storage/accounts';\r\nimport TransactionsStorage from '../util/storage/transactions';\r\nimport { DeleteStrategyT } from '../entities/Account';\r\n\r\nexport function* loadAccountsSaga() {\r\n  const accounts = yield call(AccountsStorage.loadAll);\r\n  yield put(loadAccountsSuccess(accounts));\r\n  const transactionForm = yield select(getForm);\r\n  if (!transactionForm.accountId && accounts.length > 0) {\r\n    yield resetTransactionFormSaga();\r\n  }\r\n}\r\n\r\nexport function* saveAccountSaga(action) {\r\n  const account = action.payload;\r\n  try {\r\n    yield call(AccountsStorage.save, account);\r\n    yield resetTransactionFormSaga();\r\n    yield put(saveAccountSuccess());\r\n  } catch (error) {\r\n    yield put(saveAccountFailure(account.id));\r\n  }\r\n}\r\n\r\nexport function* updateAccountBalanceSaga(mutation) {\r\n  const account = yield call(AccountsStorage.mutateBalance, mutation);\r\n  yield put(updateAccount(account));\r\n}\r\n\r\nexport function* removeAccountSaga({ payload }) {\r\n  try {\r\n    const deleteStrategies = {\r\n      [DeleteStrategyT.Archive]: deleteStrategyArchive,\r\n      [DeleteStrategyT.Cleanup]: deleteStrategyCleanup,\r\n      [DeleteStrategyT.Move]: deleteStrategyMove\r\n    };\r\n    const strategy = deleteStrategies[payload.strategy];\r\n    if (strategy) yield strategy(payload.id, payload.moveTo);\r\n  } catch (error) {\r\n    yield put(removeAccountFailure(error.message));\r\n  }\r\n}\r\n\r\nfunction* deleteStrategyArchive(accountId) {\r\n  yield call(AccountsStorage.archive, accountId);\r\n  yield put(removeAccountSuccess(accountId));\r\n}\r\n\r\nfunction* deleteStrategyCleanup(accountId) {\r\n  const transactions = yield call(TransactionsStorage.loadFiltered, {\r\n    accounts: [accountId]\r\n  });\r\n  if (transactions.length > 0) {\r\n    yield put(removeAccountStart(transactions.length));\r\n\r\n    for (const [index, tx] of transactions.entries()) {\r\n      yield removeTransactionSaga(removeTransaction(tx.id));\r\n      yield put(removeAccountItemProcessed(index));\r\n    }\r\n  }\r\n\r\n  yield call(AccountsStorage.remove, accountId);\r\n  yield put(removeAccountSuccess(accountId));\r\n}\r\n\r\nfunction* deleteStrategyMove(accountId, moveTo) {\r\n  const transactions = yield call(TransactionsStorage.loadFiltered, {\r\n    accounts: [accountId]\r\n  });\r\n  if (transactions.length > 0) {\r\n    yield put(removeAccountStart(transactions.length));\r\n\r\n    for (const [index, tx] of transactions.entries()) {\r\n      yield saveTransactionSaga(\r\n        saveTransaction({\r\n          ...tx,\r\n          accountId: tx.accountId === accountId ? moveTo : tx.accountId,\r\n          linkedAccountId:\r\n            tx.linkedAccountId === accountId ? moveTo : tx.linkedAccountId\r\n        })\r\n      );\r\n      yield put(removeAccountItemProcessed(index));\r\n    }\r\n  }\r\n\r\n  yield call(AccountsStorage.remove, accountId);\r\n  yield put(removeAccountSuccess(accountId));\r\n}\r\n\r\nexport default [\r\n  takeLatest(loadAccounts, loadAccountsSaga),\r\n  takeLatest(saveAccount, saveAccountSaga),\r\n  takeLatest(removeAccount, removeAccountSaga),\r\n  takeLatest(removeAccountSuccess, resetTransactionFormSaga)\r\n];\r\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\r\nimport {\r\n  sync,\r\n  syncRequest,\r\n  syncSuccess,\r\n  syncFailure,\r\n  setPendingChangesFlag\r\n} from '../actions/ui/sync';\r\nimport {\r\n  saveAccountSuccess,\r\n  removeAccountSuccess\r\n} from '../actions/entities/accounts';\r\nimport {\r\n  saveTransactionSuccess,\r\n  removeTransactionSuccess\r\n} from '../actions/entities/transactions';\r\nimport { loadAccountsSaga } from './accounts';\r\nimport { loadTagsSaga } from './tags';\r\nimport { loadRecentTransactionsSaga } from './transactions';\r\nimport { isDemoUser } from 'features/user/state/User.selector';\r\nimport AccountsStorage from '../util/storage/accounts';\r\nimport TransactionsStorage from '../util/storage/transactions';\r\nimport TagsStorage from '../util/storage/tags';\r\n\r\nexport function* syncSaga() {\r\n  yield put(syncRequest());\r\n  try {\r\n    const readOnly = yield select(isDemoUser);\r\n    yield call(AccountsStorage.sync, readOnly);\r\n    yield call(TransactionsStorage.sync, readOnly);\r\n    yield call(TagsStorage.sync, readOnly);\r\n    yield loadRecentTransactionsSaga();\r\n    yield loadAccountsSaga();\r\n    yield loadTagsSaga();\r\n    yield put(syncSuccess());\r\n  } catch (error) {\r\n    yield put(syncFailure(error));\r\n  }\r\n}\r\n\r\nexport function* setPendingChangesFlagSaga() {\r\n  yield put(setPendingChangesFlag());\r\n}\r\n\r\nexport default [\r\n  takeLatest(sync, syncSaga),\r\n  takeLatest(saveAccountSuccess, setPendingChangesFlagSaga),\r\n  takeLatest(removeAccountSuccess, setPendingChangesFlagSaga),\r\n  takeLatest(saveTransactionSuccess, setPendingChangesFlagSaga),\r\n  takeLatest(removeTransactionSuccess, setPendingChangesFlagSaga)\r\n];\r\n","import fetch from 'isomorphic-fetch';\r\n\r\nexport function fetchExchangeRates(base, target) {\r\n  if (!target.includes(base)) target.push(base);\r\n  const exchangeServiceUrl = process.env.REACT_APP_XCHANGE_URL;\r\n  const pairs = target.map(code => `${base}${code}`);\r\n\r\n  return fetch(`${exchangeServiceUrl}?pairs=${pairs.join(',')}`)\r\n    .then(body => body.json())\r\n    .then(response =>\r\n      response.rates.reduce((result, row) => {\r\n        result[row.id.substring(3)] = parseFloat(row['rate']);\r\n        return result;\r\n      }, {})\r\n    );\r\n}\r\n","import union from 'lodash/union';\r\nimport pick from 'lodash/pick';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { settingsDB, remoteSettingsDB, destroySettingsDB } from './pouchdb';\r\nimport { fetchExchangeRates } from '../currency';\r\nimport Currency from '../../entities/Currency';\r\n\r\nexport default {\r\n  load,\r\n  save,\r\n  saveLocal,\r\n  destroy\r\n};\r\n\r\nconst defaultLocalSettings = {\r\n  _id: '_local/settings',\r\n  collapsedSections: []\r\n};\r\nconst defaultSettings = {\r\n  _id: 'settings',\r\n  currency: { base: Currency.defaultBase, secondary: [] },\r\n  exchangeRate: { [Currency.defaultBase]: 1 }\r\n};\r\n\r\nfunction destroy() {\r\n  return destroySettingsDB();\r\n}\r\n\r\nasync function save(settings) {\r\n  if (remoteSettingsDB()) {\r\n    await remoteSettingsDB()\r\n      .get('settings')\r\n      .then(remote => remote, err => defaultSettings)\r\n      .then(doc => remoteSettingsDB().put({ ...doc, ...settings }))\r\n      .catch(error => {\r\n        if (error.status !== 403) throw error;\r\n      });\r\n  }\r\n\r\n  return settingsDB()\r\n    .get('settings')\r\n    .then(local => local, err => defaultSettings)\r\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\r\n}\r\n\r\nfunction saveLocal(settings) {\r\n  return settingsDB()\r\n    .get('_local/settings')\r\n    .then(doc => doc, err => defaultLocalSettings)\r\n    .then(doc => settingsDB().put({ ...doc, ...settings }));\r\n}\r\n\r\nfunction load() {\r\n  return settingsDB()\r\n    .get('_local/settings')\r\n    .then(local => local, err => defaultLocalSettings)\r\n    .then(local => mergeLocalWithSyncedSettings(local));\r\n}\r\n\r\nasync function mergeLocalWithSyncedSettings(local) {\r\n  return settingsDB()\r\n    .get('settings')\r\n    .then(settings => settings, err => defaultSettings)\r\n    .then(settings => syncSettings(settings))\r\n    .then(settings => ({ ...settings, ...local }));\r\n}\r\n\r\nasync function syncSettings(settings) {\r\n  if (!remoteSettingsDB()) return settings;\r\n\r\n  try {\r\n    const remote = await remoteSettingsDB().get('settings');\r\n    const base = remote.currency.base;\r\n    const secondary = union(\r\n      settings.currency.base,\r\n      settings.currency.secondary,\r\n      remote.currency.secondary\r\n    ).filter(code => code !== base);\r\n\r\n    const synced = {\r\n      currency: { base, secondary },\r\n      exchangeRate:\r\n        settings.currency.base === base\r\n          ? { ...settings.exchangeRate, ...remote.exchangeRate }\r\n          : await fetchExchangeRates(base, secondary),\r\n      isSetupComplete: remote.isSetupComplete\r\n    };\r\n\r\n    if (!isEqual(pick(settings, Object.keys(synced)), synced)) {\r\n      await save(synced);\r\n    }\r\n\r\n    return synced;\r\n  } catch (error) {\r\n    return settings;\r\n  }\r\n}\r\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\r\nimport union from 'lodash/union';\r\nimport {\r\n  loadSettingsSuccess,\r\n  changeSettingsCurrency,\r\n  updateExchangeRate,\r\n  updateExchangeRateSuccess,\r\n  updateExchangeRateFailure,\r\n  completeSetup,\r\n  toggleSectionCollapse\r\n} from '../actions/settings';\r\nimport {\r\n  getCollapsedSections,\r\n  getBaseCurrency,\r\n  getSecondaryCurrency\r\n} from '../selectors/settings';\r\nimport { getAccountsCurrencyList } from '../selectors/entities/accounts';\r\nimport SettingsStorage from '../util/storage/settings';\r\nimport { fetchExchangeRates } from '../util/currency';\r\n\r\nexport function* loadSetting() {\r\n  const settings = yield call(SettingsStorage.load);\r\n  yield put(loadSettingsSuccess(settings));\r\n}\r\n\r\nexport function* updateCurrencySaga() {\r\n  const base = yield select(getBaseCurrency);\r\n  const secondary = yield select(getSecondaryCurrency);\r\n  const used = yield select(getAccountsCurrencyList);\r\n  try {\r\n    const exchangeRate = yield call(\r\n      fetchExchangeRates,\r\n      base,\r\n      union(secondary, used)\r\n    );\r\n    yield put(updateExchangeRateSuccess(exchangeRate));\r\n    yield call(SettingsStorage.save, {\r\n      currency: { base, secondary },\r\n      exchangeRate\r\n    });\r\n  } catch (error) {\r\n    yield put(updateExchangeRateFailure(error));\r\n  }\r\n}\r\n\r\nexport function* completeSetupSaga() {\r\n  yield call(SettingsStorage.save, { isSetupComplete: true });\r\n}\r\n\r\nexport function* saveCollapsedSectionsSaga() {\r\n  const collapsedSections = yield select(getCollapsedSections);\r\n  yield call(SettingsStorage.saveLocal, { collapsedSections });\r\n}\r\n\r\nexport default [\r\n  takeLatest(changeSettingsCurrency, updateCurrencySaga),\r\n  takeLatest(updateExchangeRate, updateCurrencySaga),\r\n  takeLatest(completeSetup, completeSetupSaga),\r\n  takeLatest(toggleSectionCollapse, saveCollapsedSectionsSaga)\r\n];\r\n","import { call, put } from 'redux-saga/effects';\r\nimport { syncSaga } from 'sagas/sync';\r\nimport * as user from './User.action';\r\n\r\nexport function* isDemoUser() {\r\n  if (window.location.hostname === process.env.REACT_APP_DEMO_HOST) {\r\n    const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\r\n    if (!userInfo) {\r\n      yield call(\r\n        [localStorage, 'setItem'],\r\n        'userInfo',\r\n        JSON.stringify({\r\n          couchDB: {\r\n            accounts: process.env.REACT_APP_DEMO_DB_ACCOUNTS,\r\n            settings: process.env.REACT_APP_DEMO_DB_SETTINGS,\r\n            tags: process.env.REACT_APP_DEMO_DB_TAGS,\r\n            transactions: process.env.REACT_APP_DEMO_DB_TRANSACTIONS\r\n          }\r\n        })\r\n      );\r\n      yield syncSaga();\r\n    }\r\n    yield put(user.setDemoUser());\r\n    yield put(user.signInSuccess());\r\n  }\r\n}\r\n\r\nexport function* isUserLoggedIn() {\r\n  const userInfo = yield call([localStorage, 'getItem'], 'userInfo');\r\n  if (userInfo) yield put(user.signInSuccess());\r\n}\r\n","import { takeLatest, select, call, put } from 'redux-saga/effects';\r\nimport { getType } from 'typesafe-actions';\r\nimport Auth from 'util/auth';\r\nimport { getSignInEmail, getSignInCode } from './SignIn.selector';\r\nimport * as SignIn from './SignIn.action';\r\nimport { syncSaga } from 'sagas/sync';\r\nimport { loadSetting } from 'sagas/settings';\r\nimport { isUserLoggedIn } from 'features/user/state/User.saga';\r\n\r\nexport function* sendCodeSaga() {\r\n  const email = yield select(getSignInEmail);\r\n  try {\r\n    yield call(Auth.sendCode, email);\r\n    yield put(SignIn.sendCodeSuccess());\r\n  } catch (error) {\r\n    yield put(SignIn.sendCodeFailure(error));\r\n  }\r\n}\r\n\r\nexport function* verifyCodeSaga() {\r\n  const email = yield select(getSignInEmail);\r\n  const code = yield select(getSignInCode);\r\n  try {\r\n    yield call(Auth.verifyCode, email, code);\r\n    yield put(SignIn.verifyCodeSuccess());\r\n  } catch (error) {\r\n    yield put(SignIn.verifyCodeFailure(error));\r\n  }\r\n}\r\n\r\nexport function* finishAuthSaga() {\r\n  const accessToken = yield call(Auth.parseHash);\r\n  const userInfo = yield call(Auth.getUserInfo, accessToken);\r\n  yield call([localStorage, 'setItem'], 'userInfo', JSON.stringify(userInfo));\r\n\r\n  yield loadSetting();\r\n  yield syncSaga();\r\n  yield isUserLoggedIn();\r\n}\r\n\r\nexport default [\r\n  takeLatest(getType(SignIn.sendCode), sendCodeSaga),\r\n  takeLatest(getType(SignIn.verifyCode), verifyCodeSaga),\r\n  takeLatest(getType(SignIn.finishAuth), finishAuthSaga)\r\n];\r\n","import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport { getType } from 'typesafe-actions';\r\nimport { signOut, signOutSuccess, signOutFailure } from './SignOut.action';\r\nimport { loadSetting } from 'sagas/settings';\r\nimport { isDemoUser } from 'features/user/state/User.saga';\r\nimport AccountsStorage from 'util/storage/accounts';\r\nimport SettingsStorage from 'util/storage/settings';\r\nimport TagsStorage from 'util/storage/tags';\r\nimport TransactionsStorage from 'util/storage/transactions';\r\n\r\nexport function* signOutSaga() {\r\n  try {\r\n    yield call(AccountsStorage.destroy);\r\n    yield call(SettingsStorage.destroy);\r\n    yield call(TagsStorage.destroy);\r\n    yield call(TransactionsStorage.destroy);\r\n    yield call([localStorage, 'clear']);\r\n\r\n    yield put(signOutSuccess());\r\n    yield isDemoUser();\r\n    yield loadSetting();\r\n  } catch (error) {\r\n    yield put(signOutFailure(error));\r\n  }\r\n}\r\n\r\nexport default [takeLatest(getType(signOut), signOutSaga)];\r\n","import { combineReducers } from 'redux';\r\nimport SignInReducer, { SignInStateT, SignInActionT } from './SignIn.reducer';\r\nimport SignOutReducer, {\r\n  SignOutStateT,\r\n  SignOutActionT\r\n} from './SignOut.reducer';\r\nimport SignInSaga from './SignIn.saga';\r\nimport SignOutSaga from './SignOut.saga';\r\n\r\nexport interface UserUiStateT {\r\n  signIn: SignInStateT;\r\n  signOut: SignOutStateT;\r\n}\r\n\r\nexport type UserUiActionT = SignInActionT & SignOutActionT;\r\n\r\nexport const UserUiReducer = combineReducers<UserUiStateT, UserUiActionT>({\r\n  signIn: SignInReducer,\r\n  signOut: SignOutReducer\r\n});\r\n\r\nexport const UserUiSaga = [...SignInSaga, ...SignOutSaga];\r\n","import { ActionType, getType } from 'typesafe-actions';\r\nimport * as actions from './SignOut.action';\r\nimport { AsyncOperationStateT } from 'typings/async';\r\n\r\nexport interface SignOutStateT {\r\n  signOutState?: AsyncOperationStateT;\r\n}\r\n\r\nexport type SignOutActionT = ActionType<typeof actions>;\r\n\r\nexport default (\r\n  state: SignOutStateT = {},\r\n  action: SignOutActionT\r\n): SignOutStateT => {\r\n  switch (action.type) {\r\n    case getType(actions.signOut):\r\n      return { ...state, signOutState: 'REQUEST' };\r\n    case getType(actions.signOutSuccess):\r\n      return { ...state, signOutState: 'SUCCESS' };\r\n    case getType(actions.signOutFailure):\r\n      return { ...state, signOutState: 'FAILURE' };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { ActionType, getType } from 'typesafe-actions';\r\nimport * as user from './User.action';\r\nimport { UserUiReducer, UserUiStateT, UserUiActionT } from './ui';\r\n\r\nexport interface UserStateT {\r\n  readonly isDemoUser: boolean;\r\n  readonly isSignedIn: boolean;\r\n  readonly ui: UserUiStateT;\r\n}\r\n\r\nexport type UserActionT = ActionType<typeof user> & UserUiActionT;\r\n\r\nexport default combineReducers<UserStateT, UserActionT>({\r\n  isDemoUser: (state = false, action) => {\r\n    return action.type === getType(user.setDemoUser) ? true : state;\r\n  },\r\n  isSignedIn: (state = false, action) => {\r\n    return action.type === getType(user.signInSuccess) ? true : state;\r\n  },\r\n  ui: UserUiReducer\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport entities from './entities';\r\nimport ui from './ui';\r\nimport settings from './settings';\r\nimport user, { UserStateT } from 'features/user/state/User.reducer';\r\n\r\nexport interface RootStateT {\r\n  user: UserStateT;\r\n}\r\n\r\nexport default combineReducers({\r\n  settings,\r\n  entities,\r\n  user,\r\n  ui\r\n});\r\n","import { takeLatest } from 'redux-saga/effects';\r\nimport { bootstrap } from '../actions/app';\r\nimport { isUserLoggedIn, isDemoUser } from 'features/user/state/User.saga';\r\nimport { loadSetting } from './settings';\r\nimport { syncSaga } from './sync';\r\n\r\nexport function* bootstrapSaga() {\r\n  yield isDemoUser();\r\n  yield isUserLoggedIn();\r\n  yield loadSetting();\r\n  yield syncSaga();\r\n}\r\n\r\nexport default [takeLatest(bootstrap, bootstrapSaga)];\r\n","import { TransationKindT } from '../entities/Transaction';\r\n\r\nconst { Expense, Transfer, Income } = TransationKindT;\r\n\r\nexport default file =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onerror = reject;\r\n    reader.onload = event => {\r\n      try {\r\n        resolve(convert(event.target.result.split('\\n')));\r\n      } catch (error) {\r\n        reject(error);\r\n      }\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  });\r\n\r\nconst SEPARATOR = ';';\r\nconst COLUMN = {\r\n  DATE: 0,\r\n  ACCOUNT: 1,\r\n  TAGS: 2,\r\n  AMOUNT: 3,\r\n  CURRENCY: 4,\r\n  NOTE: 5,\r\n  TRANSFER: 6\r\n};\r\n\r\nconst transactions = [];\r\nconst accounts = new Map();\r\nconst currencies = new Set();\r\n\r\nfunction convert(rows) {\r\n  const header = rows[0].split(SEPARATOR);\r\n  if (header.length !== Object.keys(COLUMN).length) {\r\n    throw new Error(`Invalid file format!\r\n    Must be a CSV with following columns:\r\n    date;account;tags;amount;currency;description;transfer`);\r\n  }\r\n\r\n  for (let line = 1; line < rows.length; line++) {\r\n    const row = rows[line].split(SEPARATOR);\r\n    if (row.length !== Object.keys(COLUMN).length) continue;\r\n\r\n    const transaction = {\r\n      kind: getKind(row),\r\n      account: getAccount(row),\r\n      amount: Math.abs(getAmount(row)),\r\n      currency: row[COLUMN.CURRENCY],\r\n      date: getDate(row),\r\n      tags: getTags(row),\r\n      note: row[COLUMN.NOTE]\r\n    };\r\n\r\n    if (transaction.kind === Transfer) {\r\n      const nextRow = rows[++line].split(SEPARATOR);\r\n\r\n      transaction.linkedAccount = getAccount(nextRow);\r\n      transaction.linkedAmount = getAmount(nextRow);\r\n      transaction.linkedCurrency = nextRow[COLUMN.CURRENCY];\r\n    }\r\n\r\n    transactions.push(transaction);\r\n  }\r\n\r\n  return { transactions, accounts, currencies };\r\n}\r\n\r\nfunction getAmount(row) {\r\n  return parseFloat(row[COLUMN.AMOUNT].replace(',', '.'));\r\n}\r\n\r\nfunction getKind(row) {\r\n  return row[COLUMN.TRANSFER].trim()\r\n    ? Transfer\r\n    : getAmount(row) < 0\r\n    ? Expense\r\n    : Income;\r\n}\r\n\r\nfunction getAccount(row) {\r\n  const account = row[COLUMN.ACCOUNT];\r\n  const currency = row[COLUMN.CURRENCY];\r\n  if (!accounts.has(account)) accounts.set(account, new Set());\r\n  const accountCurrencies = accounts.get(account);\r\n  if (!accountCurrencies.has(currency)) accountCurrencies.add(currency);\r\n  if (!currencies.has(currency)) currencies.add(currency);\r\n\r\n  return account;\r\n}\r\n\r\nfunction getDate(row) {\r\n  return row[COLUMN.DATE]\r\n    .split('.')\r\n    .reverse()\r\n    .join('-');\r\n}\r\n\r\nfunction getTags(row) {\r\n  return (\r\n    row[COLUMN.TAGS].trim() && {\r\n      [getKind(row)]: row[COLUMN.TAGS].replace('\\\\', '/').split('/')\r\n    }\r\n  );\r\n}\r\n","import { takeLatest, call, put, select } from 'redux-saga/effects';\r\nimport union from 'lodash/union';\r\nimport {\r\n  startDataImport,\r\n  importFileReadSuccess,\r\n  importLineProcessed,\r\n  importFailure\r\n} from '../actions/ui/dataImport';\r\nimport { changeSettingsCurrency } from '../actions/settings';\r\nimport { saveAccount } from '../actions/entities/accounts';\r\nimport { saveTransaction } from '../actions/entities/transactions';\r\nimport { getImportFile } from '../selectors/ui/dataImport';\r\nimport { getBaseCurrency, getSecondaryCurrency } from '../selectors/settings';\r\nimport { getAccountByName } from '../selectors/entities/accounts';\r\nimport { saveAccountSaga } from './accounts';\r\nimport { saveTransactionSaga } from './transactions';\r\nimport { defaultGroup, formTostate } from '../entities/Account';\r\nimport { formToState } from '../entities/Transaction';\r\nimport CsvReader from '../util/CsvReader';\r\n\r\nexport function* startDataImportSaga() {\r\n  try {\r\n    const file = yield select(getImportFile);\r\n    const { transactions, accounts, currencies } = yield call(CsvReader, file);\r\n\r\n    yield put(importFileReadSuccess(transactions.length - 1));\r\n    yield updateCurrencySettings(currencies);\r\n    const accountIdByName = yield mapAccountsId(accounts);\r\n\r\n    for (const [lineNr, transaction] of transactions.entries()) {\r\n      yield saveTransactionSaga(\r\n        saveTransaction(\r\n          formToState({\r\n            ...transaction,\r\n            accountId: accountIdByName.get(transaction.account),\r\n            linkedAccountId: accountIdByName.get(transaction.linkedAccount)\r\n          })\r\n        )\r\n      );\r\n      yield put(importLineProcessed(lineNr));\r\n    }\r\n  } catch (error) {\r\n    yield put(importFailure(error));\r\n  }\r\n}\r\n\r\n/**\r\n * Set currencies from import file as secondary.\r\n *\r\n * @param {Set} currencies\r\n */\r\nexport function* updateCurrencySettings(currencies) {\r\n  const base = yield select(getBaseCurrency);\r\n  const secondary = yield select(getSecondaryCurrency);\r\n\r\n  yield put(\r\n    changeSettingsCurrency({\r\n      base,\r\n      secondary: union(secondary, [...currencies])\r\n    })\r\n  );\r\n}\r\n\r\n/**\r\n * Map account name to account ID.\r\n * If no account found in local accounts, create new one.\r\n *\r\n * @param {Map} accounts name => set of currencies map\r\n * @return {Map} account name => account id map\r\n */\r\nexport function* mapAccountsId(accounts) {\r\n  const idByName = new Map();\r\n  for (const [name, currency] of accounts.entries()) {\r\n    let account = yield select(getAccountByName(name));\r\n    if (!account) account = yield createNewAccount(name, [...currency]);\r\n\r\n    idByName.set(name, account.id);\r\n  }\r\n\r\n  return idByName;\r\n}\r\n\r\n/**\r\n * Create new account.\r\n *\r\n * @param {string} name\r\n * @param {array} currencies list of used currencies\r\n * @return {object}\r\n */\r\nexport function* createNewAccount(name, currencies) {\r\n  const account = formTostate({\r\n    name,\r\n    group: defaultGroup,\r\n    balance: currencies.reduce((acc, code) => {\r\n      acc[code] = 0;\r\n      return acc;\r\n    }, {}),\r\n    currencies,\r\n    on_dashboard: false\r\n  });\r\n  yield saveAccountSaga(saveAccount(account));\r\n\r\n  return account;\r\n}\r\n\r\nexport default [takeLatest(startDataImport, startDataImportSaga)];\r\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\r\nimport {\r\n  changeReportAccounts,\r\n  changeReportKind,\r\n  changeReportTimespan,\r\n  loadReport,\r\n  loadReportFailure,\r\n  loadReportSuccess,\r\n  moveReportDateBackwards,\r\n  moveReportDateForwards\r\n} from 'actions/ui/report';\r\nimport { transactionFilters, loadReportData } from 'entities/Report';\r\nimport { getNetWorth } from 'selectors/entities/accounts';\r\nimport { getBaseCurrency, getExchangeRate } from 'selectors/settings';\r\nimport { getReport } from 'selectors/ui/report';\r\nimport TransactionsStorage from 'util/storage/transactions';\r\n\r\nexport function* loadReportSaga() {\r\n  const report = yield select(getReport);\r\n  const base = yield select(getBaseCurrency);\r\n  const exchangeRate = yield select(getExchangeRate);\r\n  const netWorthEnd = report.data.netWorthEnd || (yield select(getNetWorth));\r\n  try {\r\n    const transactions = yield call(\r\n      TransactionsStorage.loadFiltered,\r\n      transactionFilters(report)\r\n    );\r\n    const data = yield call(\r\n      loadReportData,\r\n      report,\r\n      transactions,\r\n      exchangeRate,\r\n      base,\r\n      netWorthEnd\r\n    );\r\n    yield put(loadReportSuccess(data));\r\n  } catch (error) {\r\n    yield put(loadReportFailure(error.message));\r\n  }\r\n}\r\n\r\nexport function* refreshReportSaga() {\r\n  yield put(loadReport());\r\n}\r\n\r\nexport default [\r\n  takeLatest(loadReport, loadReportSaga),\r\n  takeLatest(changeReportKind, refreshReportSaga),\r\n  takeLatest(changeReportTimespan, refreshReportSaga),\r\n  takeLatest(changeReportAccounts, refreshReportSaga),\r\n  takeLatest(moveReportDateBackwards, refreshReportSaga),\r\n  takeLatest(moveReportDateForwards, refreshReportSaga)\r\n];\r\n","import { UserUiSaga } from './ui';\r\n\r\nexport const UserSaga = [...UserUiSaga];\r\n","import { all } from 'redux-saga/effects';\r\nimport accounts from './accounts';\r\nimport bootstrap from './bootstrap';\r\nimport dataImport from './dataImport';\r\nimport report from './report';\r\nimport settings from './settings';\r\nimport sync from './sync';\r\nimport tags from './tags';\r\nimport transactions from './transactions';\r\nimport { UserSaga } from 'features/user/state';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    ...UserSaga,\r\n    ...accounts,\r\n    ...bootstrap,\r\n    ...dataImport,\r\n    ...report,\r\n    ...settings,\r\n    ...sync,\r\n    ...tags,\r\n    ...transactions\r\n  ]);\r\n}\r\n","import createSagaMiddleware from 'redux-saga';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\r\nimport rootReducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst enhancer = composeWithDevTools(applyMiddleware(sagaMiddleware));\r\n\r\nexport default function configureStore(initialState) {\r\n  const store = createStore(rootReducer, initialState, enhancer);\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('../reducers', () =>\r\n      store.replaceReducer(require('../reducers').default)\r\n    );\r\n  }\r\n\r\n  return store;\r\n}\r\n","import { createBrowserHistory } from 'history';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as Sentry from '@sentry/browser';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport Root from './containers/Root';\r\nimport './index.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport configureStore from './store/configureStore';\r\n\r\nSentry.init({\r\n  dsn: 'https://5ae855d4c1d840c1b06679123069574f@sentry.io/1335198'\r\n});\r\n\r\nconst store = configureStore();\r\nconst history = createBrowserHistory();\r\nReactDOM.render(\r\n  <Root store={store} history={history} />,\r\n  document.getElementById('root')\r\n);\r\n\r\nregisterServiceWorker();\r\n\r\nif (module.hot) {\r\n  module.hot.accept();\r\n}\r\n"],"sourceRoot":""}